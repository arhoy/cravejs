{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\articles\\\\Articles.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getArticles } from '../../actions/articleActions';\nimport ArticleFeed from './ArticleFeed';\nimport isEmpty from '../../validation/is-empty';\nimport ArticlesHeader from './ArticlesHeader';\n\nclass Articles extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      filteredArticles: [],\n      keyword: '',\n      articles: [],\n      results: null\n    });\n\n    _defineProperty(this, \"inputChangeHandler\", e => {\n      const keyword = e.target.value;\n      const filteredArticles = this.state.articles.filter(article => article.fields.title.toLowerCase().includes(keyword.toLowerCase().trim()) || article.fields.description.toLowerCase().includes(keyword.toLowerCase().trim()) || article.fields.tags.join().toLowerCase().includes(keyword.toLowerCase().trim()));\n      this.setState({\n        filteredArticles,\n        keyword\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getArticles(this.props.location.search);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.articles !== this.props.articles) {\n      const selectArticles = this.props.articles.articles.filter(article => article.fields.description != null);\n      this.setState({\n        articles: selectArticles\n      });\n    }\n  }\n\n  render() {\n    const {\n      articles,\n      loading\n    } = this.props;\n    let articleContent;\n    if (loading || isEmpty(articles.articles)) articleContent = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Loading \");else {\n      const articlesToLoop = this.state.keyword === '' ? this.state.articles : this.state.filteredArticles;\n      if (this.state.keyword !== '' && this.state.filteredArticles.length === 0) articleContent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"No Articles Found\");else {\n        articleContent = React.createElement(ArticleFeed, {\n          articles: articlesToLoop,\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }\n    }\n    return React.createElement(\"div\", {\n      style: {\n        gridColumn: '1/-1'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ArticlesHeader, {\n      inputChangeHandler: this.inputChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Articles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, articleContent));\n  }\n\n}\n\nArticles.propTypes = {\n  getArticles: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  articles: state.articles\n});\n\nexport default connect(mapStateToProps, {\n  getArticles\n})(withRouter(Articles));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\articles\\Articles.js"],"names":["React","Component","PropTypes","connect","withRouter","getArticles","ArticleFeed","isEmpty","ArticlesHeader","Articles","filteredArticles","keyword","articles","results","e","target","value","state","filter","article","fields","title","toLowerCase","includes","trim","description","tags","join","setState","componentDidMount","props","location","search","componentDidUpdate","prevProps","selectArticles","render","loading","articleContent","articlesToLoop","length","history","gridColumn","inputChangeHandler","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getArticles } from '../../actions/articleActions';\r\nimport ArticleFeed from './ArticleFeed';\r\nimport isEmpty from '../../validation/is-empty';\r\nimport ArticlesHeader from './ArticlesHeader';\r\n\r\n\r\nclass Articles extends Component {\r\n  state = {\r\n    filteredArticles: [],\r\n    keyword: '',\r\n    articles: [],\r\n    results: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getArticles(this.props.location.search);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.articles !== this.props.articles){\r\n      const selectArticles = this.props.articles.articles.filter(article => article.fields.description != null)\r\n        this.setState({ articles: selectArticles })\r\n    \r\n    }\r\n}\r\n\r\n   inputChangeHandler = (e) => {\r\n    const keyword = e.target.value;\r\n\r\n\r\n    const filteredArticles = this.state.articles.filter(article => (\r\n        article.fields.title.toLowerCase().includes(keyword.toLowerCase().trim()) ||  \r\n        article.fields.description.toLowerCase().includes(keyword.toLowerCase().trim()) ||\r\n        article.fields.tags.join().toLowerCase().includes(keyword.toLowerCase().trim())\r\n      \r\n  \r\n    ))\r\n    this.setState({filteredArticles,keyword});\r\n  \r\n}\r\n\r\n  render() {\r\n    const { articles, loading } = this.props;\r\n    let articleContent;\r\n    if ( loading || isEmpty(articles.articles)) articleContent = <div> Loading </div>;\r\n      else {\r\n        const articlesToLoop = this.state.keyword === '' ? this.state.articles : this.state.filteredArticles;\r\n\r\n        if (this.state.keyword !== '' && this.state.filteredArticles.length === 0) articleContent = <div>No Articles Found</div>\r\n        \r\n        else {\r\n          articleContent = (\r\n            <ArticleFeed\r\n              articles={ articlesToLoop }\r\n              history={this.props.history}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    \r\n    return (\r\n      <div style = {{gridColumn:'1/-1'}}>\r\n          <ArticlesHeader inputChangeHandler = {this.inputChangeHandler} />\r\n          <div className=\"Articles\">\r\n            {articleContent}\r\n          </div>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nArticles.propTypes = {\r\n  getArticles: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  articles: state.articles\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getArticles }\r\n)(withRouter(Articles));\r\n"]},"metadata":{},"sourceType":"module"}