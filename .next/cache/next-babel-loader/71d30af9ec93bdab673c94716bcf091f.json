{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\common\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      auth = _ref.auth,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, _extends({}, rest, {\n    render: function render(props) {\n      return auth.isAuthenticated === true ? React.createElement(Component, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location // state user is in right before the redirect.\n\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\common\\PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","Component","component","auth","rest","props","isAuthenticated","pathname","state","from","location","propTypes","object","isRequired","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA+C;AAAA,MAAjCC,SAAiC,QAA5CC,SAA4C;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAbC,IAAa;;AAClE,SACE,oBAAC,KAAD,eACIA,IADJ;AAEA,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXF,IAAI,CAACG,eAAL,KAAyB,IAAzB,GACE,oBAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAG;AACHE,UAAAA,QAAQ,EAAE,QADP;AAEHC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACK,QAAd,CAAyB;;AAAzB;AAFJ,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAlBD;;AAqBAV,YAAY,CAACW,SAAb,GAAyB;AACvBR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,MAAV,CAAiBC;AADA,CAAzB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAN,KAAK;AAAA,SAAK;AAChCL,IAAAA,IAAI,EAAEK,KAAK,CAACL;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBd,YAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest,  }) => {\r\n  return (\r\n    <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect \r\n          to= {{\r\n            pathname: '/login',\r\n            state: { from: props.location } // state user is in right before the redirect.\r\n          }}  \r\n        />\r\n      )\r\n    }\r\n  />\r\n  )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}