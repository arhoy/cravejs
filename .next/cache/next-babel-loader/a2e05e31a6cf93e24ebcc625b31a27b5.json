{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\todo\\\\TodoListItem.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { removeTodo, getTodo, changeTodoStatus } from '../../actions/todoActions';\n\nvar TodoListItem = function TodoListItem(_ref) {\n  var todo = _ref.todo,\n      currentTodo = _ref.currentTodo,\n      inputRef = _ref.inputRef,\n      removeTodo = _ref.removeTodo,\n      getTodo = _ref.getTodo,\n      changeTodoStatus = _ref.changeTodoStatus,\n      index = _ref.index;\n\n  var classNameHandler = function classNameHandler(status) {\n    switch (status) {\n      case 'not completed':\n        return ['Todo!', 'TodoList__red', 'TodoList__uncompleted'];\n\n      case 'completed':\n        return ['Completed', 'TodoList__green', 'TodoList__completed'];\n\n      case 'in progress':\n        return ['In Progress', 'TodoList__blue', 'TodoList__inprogress'];\n\n      default:\n        return ['Todo!', 'TodoList__red', 'TodoList__uncompleted'];\n    }\n  };\n\n  var statusChangeHandler = function statusChangeHandler(todo) {\n    changeTodoStatus(todo._id, {\n      status: todo.status\n    }); // must send status as object to express.\n  };\n\n  var removeTodoHandler = function removeTodoHandler(id) {\n    removeTodo(id);\n  };\n\n  var editTodoHandler = function editTodoHandler(todo) {\n    inputRef.current.focus();\n    getTodo(todo);\n  };\n\n  return React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, function (provided, snapshot) {\n    return React.createElement(\"li\", _extends({}, provided.draggableProps, provided.dragHandleProps, {\n      ref: provided.innerRef,\n      key: todo._id,\n      className: \"TodoList TodoList__li \\n                         \".concat(classNameHandler(todo.status)[1], \" \\n                         \").concat(snapshot.isDragging ? 'TodoList__dragging' : '', \"\\n                        \"),\n      onDoubleClick: statusChangeHandler.bind(_this, todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), currentTodo && currentTodo._id === todo._id ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" ( Editing... ) \") : null, React.createElement(\"div\", {\n      className: \"TodoList__text \".concat(currentTodo && currentTodo._id === todo._id ? 'TodoList__text-editing' : '', \" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, todo.text), React.createElement(\"div\", {\n      className: classNameHandler(todo.status)[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, classNameHandler(todo.status)[0]), React.createElement(\"div\", {\n      className: \"TodoList__tasks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"TodoList__remove\",\n      onClick: removeTodoHandler.bind(_this, todo._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"TodoList__img\",\n      src: \"https://icon.now.sh/close\",\n      alt: \"delete icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"TodoList__edit\",\n      onClick: editTodoHandler.bind(_this, todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"TodoList__img\",\n      src: \"https://icon.now.sh/edit\",\n      alt: \"Edit Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  });\n};\n\nexport default connect(null, {\n  removeTodo: removeTodo,\n  getTodo: getTodo,\n  changeTodoStatus: changeTodoStatus\n})(TodoListItem);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\todo\\TodoListItem.js"],"names":["React","connect","Draggable","removeTodo","getTodo","changeTodoStatus","TodoListItem","todo","currentTodo","inputRef","index","classNameHandler","status","statusChangeHandler","_id","removeTodoHandler","id","editTodoHandler","current","focus","provided","snapshot","draggableProps","dragHandleProps","innerRef","isDragging","bind","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Draggable } from \"react-beautiful-dnd\"; \r\nimport { removeTodo, getTodo, changeTodoStatus } from '../../actions/todoActions';\r\n\r\nconst TodoListItem = ( {todo, currentTodo, inputRef, removeTodo, getTodo, changeTodoStatus, index}) => {\r\n\r\n    const classNameHandler = status => {\r\n        switch( status ) {\r\n            case 'not completed':\r\n                return ['Todo!','TodoList__red','TodoList__uncompleted'];\r\n            case 'completed':\r\n                return ['Completed','TodoList__green','TodoList__completed'];\r\n            case 'in progress':\r\n                return ['In Progress','TodoList__blue','TodoList__inprogress'];\r\n            default:\r\n                return ['Todo!','TodoList__red','TodoList__uncompleted'];\r\n        }\r\n    }\r\n\r\n    const statusChangeHandler = todo => {\r\n        changeTodoStatus(todo._id, { status: todo.status }); // must send status as object to express.\r\n    }\r\n\r\n    const removeTodoHandler = id => {\r\n        removeTodo(id);\r\n    }\r\n\r\n    const editTodoHandler = todo => {\r\n        inputRef.current.focus();\r\n        getTodo(todo);\r\n    }\r\n\r\n    return (\r\n        <Draggable\r\n            draggableId = { todo._id }\r\n            index = { index }\r\n        >\r\n        {\r\n            (provided, snapshot) => (\r\n                <li \r\n                    { ...provided.draggableProps }\r\n                    { ...provided.dragHandleProps }\r\n                    ref = { provided.innerRef }\r\n                    key = {todo._id}\r\n                    className = {\r\n                        `TodoList TodoList__li \r\n                         ${classNameHandler(todo.status)[1]} \r\n                         ${snapshot.isDragging ? 'TodoList__dragging': ''}\r\n                        `}\r\n                    onDoubleClick = { statusChangeHandler.bind(this,todo) }\r\n                    > \r\n\r\n                {\r\n                    currentTodo && currentTodo._id === todo._id ? \r\n                    <div> ( Editing... ) </div> : null\r\n                }\r\n\r\n\r\n                    <div \r\n                        className = {`TodoList__text ${currentTodo && currentTodo._id === todo._id ? 'TodoList__text-editing' : ''} `}\r\n                    > \r\n                        { todo.text } \r\n                    </div>\r\n\r\n                    <div className = {classNameHandler(todo.status)[2]}>{ classNameHandler(todo.status)[0] }</div>  \r\n\r\n                    <div className=\"TodoList__tasks\">\r\n                            <button \r\n                                className = \"TodoList__remove\"\r\n                                onClick = { removeTodoHandler.bind(this,todo._id) }\r\n                            >\r\n                                <img className = \"TodoList__img\" src=\"https://icon.now.sh/close\" alt=\"delete icon\"/>\r\n                            </button>\r\n\r\n                            <button\r\n                                className = \"TodoList__edit\"\r\n                                onClick = { editTodoHandler.bind(this,todo) }\r\n                            >\r\n                                <img className = \"TodoList__img\" src=\"https://icon.now.sh/edit\" alt=\"Edit Icon\"/>\r\n                            </button>\r\n                    </div>\r\n            </li>\r\n            )\r\n        }\r\n            \r\n        </Draggable>\r\n        \r\n    );\r\n};\r\n\r\nexport default connect(null,{ removeTodo, getTodo, changeTodoStatus })(TodoListItem);"]},"metadata":{},"sourceType":"module"}