{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileEditForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport { getProfileComment, editComment } from '../../actions/profileActions';\nimport PropTypes from 'prop-types';\n\nclass ProfileEditForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      text: '' // errors:{}\n      // when getProfileComment Updates, setState from reducer.\n\n    });\n\n    _defineProperty(this, \"onChangeHandler\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmitHandler\", e => {\n      e.preventDefault();\n      const {\n        handle\n      } = this.props.profile.profile;\n      const {\n        commentId\n      } = this.props;\n      const {\n        user\n      } = this.props.auth;\n      const editComment = {\n        text: this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n      console.log('I was submited', handle, editComment, commentId);\n      this.props.editComment(handle, commentId, editComment); // it will look for commentId in the backend\n\n      this.setState({\n        text: ''\n      }); // close the modal\n\n      setTimeout(() => {\n        this.props.handler();\n      }, 600);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.handle) {\n      const {\n        handle\n      } = this.props.match.params;\n      console.log(handle);\n      console.log(this.props);\n      this.props.getProfileComment(handle, this.props.commentId);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.text === \"\" && this.props.profile.comment.text !== \"\") {\n      // check conditions, set the state\n      this.setState({\n        text: this.props.profile.comment.text\n      });\n    }\n  }\n\n  render() {\n    // const {errors} = this.state;\n    return React.createElement(\"div\", {\n      className: \"PostEditForm\",\n      style: {\n        zIndex: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"PostEditForm__form\",\n      onSubmit: e => this.onSubmitHandler(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Edit post\",\n      name: \"text\",\n      value: this.state.text,\n      onChange: e => this.onChangeHandler(e) //  error={errors.text}\n      ,\n      className: \"form__textarea form__textarea-grey\",\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"PostEditForm__button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Save Edits\")));\n  }\n\n}\n\nProfileEditForm.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileComment,\n  editComment\n})(withRouter(ProfileEditForm));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\ProfileEditForm.js"],"names":["React","Component","connect","withRouter","TextAreaFieldGroup","getProfileComment","editComment","PropTypes","ProfileEditForm","text","e","setState","target","name","value","preventDefault","handle","props","profile","commentId","user","auth","state","avatar","console","log","setTimeout","handler","componentDidMount","match","params","componentDidUpdate","prevProps","prevState","comment","render","zIndex","onSubmitHandler","onChangeHandler","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport { getProfileComment, editComment } from '../../actions/profileActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProfileEditForm extends Component {\r\n    componentDidMount() {\r\n   \r\n        if(this.props.match.params.handle){\r\n            const {handle} = this.props.match.params;\r\n            console.log(handle);\r\n            console.log(this.props);\r\n             this.props.getProfileComment(handle,this.props.commentId);\r\n        }\r\n       \r\n    }\r\n    \r\n    state = {\r\n        text: '',\r\n       // errors:{}\r\n    }\r\n    // when getProfileComment Updates, setState from reducer.\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevState.text === \"\" && this.props.profile.comment.text !== \"\"){\r\n            // check conditions, set the state\r\n            this.setState({\r\n                text: this.props.profile.comment.text\r\n            })\r\n        }\r\n     \r\n    }\r\n    \r\n      \r\n    \r\n    onChangeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { handle } = this.props.profile.profile;\r\n    \r\n        const {commentId} = this.props;\r\n        const { user } = this.props.auth;\r\n        const editComment = {\r\n            text: this.state.text,\r\n            name: user.name,\r\n            avatar: user.avatar\r\n        }\r\n        console.log('I was submited',handle,editComment,commentId);\r\n         this.props.editComment(handle,commentId,editComment); // it will look for commentId in the backend\r\n        this.setState({text:''});\r\n\r\n        // close the modal\r\n        setTimeout(()=>{\r\n            this.props.handler();\r\n        },600 )\r\n      \r\n        \r\n    }\r\n    \r\n    \r\n    render() {\r\n       // const {errors} = this.state;\r\n    \r\n        return (\r\n    \r\n            <div className = \"PostEditForm\" style = {{zIndex: 1000}}>\r\n               <form className = \"PostEditForm__form\" onSubmit={ (e)=> this.onSubmitHandler(e) }>\r\n                  <div className=\"form__group\">\r\n                    <TextAreaFieldGroup\r\n                      placeholder=\"Edit post\"\r\n                      name=\"text\"\r\n                      value={this.state.text}\r\n                      onChange={ (e)=> this.onChangeHandler(e)}\r\n                    //  error={errors.text}\r\n                      className = \"form__textarea form__textarea-grey\"\r\n                      rows = {5}\r\n                    />\r\n                  </div>\r\n                    <button type=\"submit\" className=\"PostEditForm__button\">\r\n                        Save Edits\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nProfileEditForm.propTypes = {\r\n     auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    profile: state.profile\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps,{ getProfileComment,editComment })(withRouter(ProfileEditForm));"]},"metadata":{},"sourceType":"module"}