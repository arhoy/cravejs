{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\replies\\\\ReplyForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\nimport { addReply, getPosts } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\nimport isEmpty from '../../../validation/is-empty';\n\nvar ReplyForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReplyForm, _Component);\n\n  function ReplyForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReplyForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReplyForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: '',\n      errors: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitHandler\", function (e, id) {\n      e.preventDefault();\n      var user = _this.props.auth.user;\n      var newReply = {\n        text: _this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n      console.log('I replied');\n\n      _this.props.addReply(id, newReply);\n\n      _this.setState({\n        text: ''\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ReplyForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      var postItem = this.props.postItem;\n      return React.createElement(\"div\", {\n        className: \"ReplyForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"ReplyForm__form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmitHandler(e, postItem._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form__group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(TextAreaFieldGroup, {\n        placeholder: isEmpty(errors.replyErrors) ? 'Add a reply...' : errors.replyErrors.text,\n        name: \"text\",\n        value: this.state.text,\n        onChange: function onChange(e) {\n          return _this2.onChangeHandler(e);\n        },\n        error: errors.text,\n        className: \"form__textarea form__textarea-grey\",\n        rows: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"ReplyForm__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Submit Reply\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.errors !== prevState.errors) {\n        return {\n          errors: nextProps.errors\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ReplyForm;\n}(Component);\n\nReplyForm.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  addReply: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors,\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addReply: addReply,\n  getPosts: getPosts\n})(ReplyForm);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\replies\\ReplyForm.js"],"names":["React","Component","connect","TextAreaFieldGroup","addReply","getPosts","PropTypes","isEmpty","ReplyForm","text","errors","e","setState","target","name","value","id","preventDefault","user","props","auth","newReply","state","avatar","console","log","postItem","onSubmitHandler","_id","replyErrors","onChangeHandler","nextProps","prevState","propTypes","object","isRequired","func","mapStateToProps","post"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\r\nimport { addReply, getPosts } from '../../../actions/postActions';\r\nimport PropTypes from 'prop-types';\r\nimport isEmpty from '../../../validation/is-empty';\r\n\r\n\r\nclass ReplyForm extends Component {\r\n    state = {\r\n        text: '',\r\n        errors:{}\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if(nextProps.errors !== prevState.errors) {\r\n            return {errors: nextProps.errors}\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    onChangeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmitHandler = (e,id) => {\r\n        e.preventDefault();\r\n        const { user } = this.props.auth;\r\n        const newReply = {\r\n            text: this.state.text,\r\n            name: user.name,\r\n            avatar: user.avatar\r\n        }\r\n        console.log('I replied');\r\n        this.props.addReply(id,newReply);\r\n        this.setState({text:''});\r\n        \r\n     \r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {errors} = this.state;\r\n        const {postItem} = this.props;\r\n        return (\r\n    \r\n            <div className=\"ReplyForm\">            \r\n               <form className = \"ReplyForm__form\" onSubmit={ (e)=> this.onSubmitHandler(e,postItem._id) }>\r\n                  <div className=\"form__group\">\r\n                    <TextAreaFieldGroup\r\n                      placeholder= { isEmpty(errors.replyErrors) ? 'Add a reply...' : errors.replyErrors.text}\r\n                      name=\"text\"\r\n                      value={this.state.text}\r\n                      onChange={ (e)=> this.onChangeHandler(e)}\r\n                      error={errors.text}\r\n                      className = \"form__textarea form__textarea-grey\"\r\n                      rows = {1}\r\n                    />\r\n                  </div>\r\n                    <button type=\"submit\" className=\"ReplyForm__button\">\r\n                        Submit Reply\r\n                    </button>\r\n                </form>\r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\nReplyForm.propTypes = {\r\n     auth: PropTypes.object.isRequired,\r\n     errors: PropTypes.object.isRequired,\r\n     addReply:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    errors: state.errors,\r\n    post: state.post\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps,{ addReply,getPosts })(ReplyForm);"]},"metadata":{},"sourceType":"module"}