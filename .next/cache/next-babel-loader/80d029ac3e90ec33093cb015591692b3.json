{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileCommentsForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport { withRouter } from 'react-router-dom';\nimport { addComment } from '../../actions/profileActions';\nimport PropTypes from 'prop-types';\nimport isEmpty from '../../validation/is-empty';\nvar maxPostLength = 2000;\n\nvar ProfileCommentsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileCommentsForm, _Component);\n\n  function ProfileCommentsForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileCommentsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileCommentsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: '',\n      errors: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitHandler\", function (e) {\n      e.preventDefault();\n      var handle = _this.props.match.params.handle;\n      var user = _this.props.auth.user;\n      var newPost = {\n        text: _this.state.text,\n        name: user.name,\n        avatar: user.avatar // validation \n\n      };\n\n      if (newPost.text.length < maxPostLength && handle !== '') {\n        _this.props.addComment(handle, newPost);\n\n        _this.setState({\n          text: ''\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ProfileCommentsForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errors = this.state.errors;\n      var isAuthenticated = this.props.auth.isAuthenticated;\n      var _this$props = this.props,\n          backgroundColor = _this$props.backgroundColor,\n          placeholder = _this$props.placeholder,\n          color = _this$props.color;\n      return React.createElement(\"div\", {\n        className: \"PostForm\",\n        style: {\n          backgroundColor: backgroundColor,\n          color: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"PostForm__form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmitHandler(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PostForm__textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TextAreaFieldGroup, {\n        placeholder: isEmpty(errors.postErrors) ? placeholder : errors.postErrors.text,\n        name: \"text\",\n        value: this.state.text,\n        onChange: function onChange(e) {\n          return _this2.onChangeHandler(e);\n        } //  error={errors.text}\n        ,\n        className: \"form__textarea form__textarea-grey\",\n        rows: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PostForm__message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.text.length > maxPostLength ? React.createElement(\"div\", {\n        className: \"PostForm__postLimitExceeded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, isAuthenticated ? \"Post must be under \".concat(maxPostLength, \" characters!\") : 'Must be logged in to post') : null, this.state.text.length <= maxPostLength ? React.createElement(\"div\", {\n        className: \"PostForm__postCharacterCount\",\n        style: {\n          color: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, isAuthenticated ? \"\".concat(maxPostLength - this.state.text.length, \" characters remaining!\") : 'Must be logged in to post') : null), React.createElement(\"button\", {\n        disabled: !isAuthenticated,\n        type: \"submit\",\n        className: \"PostForm__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.errors !== prevState.errors) {\n        return {\n          errors: nextProps.errors\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ProfileCommentsForm;\n}(Component);\n\nProfileCommentsForm.propTypes = {\n  auth: PropTypes.object.isRequired,\n  //   errors: PropTypes.object.isRequired,\n  addComment: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComment: addComment\n})(withRouter(ProfileCommentsForm));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\ProfileCommentsForm.js"],"names":["React","Component","connect","TextAreaFieldGroup","withRouter","addComment","PropTypes","isEmpty","maxPostLength","ProfileCommentsForm","text","errors","e","setState","target","name","value","preventDefault","handle","props","match","params","user","auth","newPost","state","avatar","length","isAuthenticated","backgroundColor","placeholder","color","onSubmitHandler","postErrors","onChangeHandler","nextProps","prevState","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { addComment } from '../../actions/profileActions';\r\nimport PropTypes from 'prop-types';\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nconst maxPostLength = 2000;\r\nclass ProfileCommentsForm extends Component {\r\n    state = {\r\n        text: '',\r\n       errors:{}\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if(nextProps.errors !== prevState.errors) {\r\n            return {errors: nextProps.errors}\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    onChangeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const {handle} = this.props.match.params;\r\n        const { user } = this.props.auth;\r\n        const newPost = {\r\n            text: this.state.text,\r\n            name: user.name,\r\n            avatar: user.avatar\r\n        }\r\n    \r\n         // validation \r\n         if(newPost.text.length < maxPostLength && handle !== ''){\r\n            this.props.addComment(handle,newPost);\r\n            this.setState({text:''});\r\n         }\r\n     \r\n    }\r\n    \r\n    \r\n    render() {\r\n       const {errors} = this.state;\r\n       const { isAuthenticated } = this.props.auth;\r\n       const { backgroundColor,placeholder, color } = this.props;\r\n\r\n        return (\r\n    \r\n            <div className = \"PostForm\" style = {{backgroundColor, color}} >\r\n               <form className = \"PostForm__form\" onSubmit={ (e)=> this.onSubmitHandler(e) }>\r\n                    <div className = \"PostForm__textarea\">\r\n                        <TextAreaFieldGroup\r\n                        placeholder= { isEmpty(errors.postErrors) ? placeholder : errors.postErrors.text}\r\n                        name=\"text\"\r\n                        value={this.state.text}\r\n                        onChange={ (e)=> this.onChangeHandler(e)}\r\n                        //  error={errors.text}\r\n                        className = \"form__textarea form__textarea-grey\"\r\n                        rows = {5}\r\n                        />\r\n                    </div>\r\n                 \r\n                    <div className = \"PostForm__message\">\r\n                            {\r\n                            this.state.text.length > maxPostLength ?\r\n                                <div className = \"PostForm__postLimitExceeded\">\r\n                                   {isAuthenticated ? `Post must be under ${maxPostLength} characters!` : 'Must be logged in to post'} \r\n                                </div> \r\n                            : null\r\n                        }\r\n\r\n                        {\r\n                                this.state.text.length <= maxPostLength ?\r\n                                <div className = \"PostForm__postCharacterCount\" style = {{color}}>\r\n                                   { isAuthenticated ? `${maxPostLength - this.state.text.length} characters remaining!` : 'Must be logged in to post'  } \r\n                                </div> \r\n                            : null\r\n                        }\r\n                    </div>\r\n                 \r\n                    <button disabled = {!isAuthenticated} type=\"submit\" className=\"PostForm__button\">\r\n                        Submit\r\n                    </button>\r\n                 \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nProfileCommentsForm.propTypes = {\r\n     auth: PropTypes.object.isRequired,\r\n //   errors: PropTypes.object.isRequired,\r\n    addComment:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps,{ addComment })(withRouter(ProfileCommentsForm));"]},"metadata":{},"sourceType":"module"}