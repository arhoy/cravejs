{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\posts\\\\replies\\\\ReplyItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { addReplyLike, removeReplyLike, deleteReply } from '../../../actions/postActions';\nimport Modal from 'react-modal';\nimport classnames from 'classnames';\nimport ReplyEditForm from './ReplyEditForm';\nimport TimeAgo from 'react-timeago';\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,121,191,0.8)'\n  },\n  content: {\n    position: 'fixed',\n    top: '20%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n    width: '80%',\n    zIndex: '1000'\n  }\n};\n\nclass ReplyItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showOptions: false\n    });\n\n    _defineProperty(this, \"state\", {\n      showOptions: false,\n      showReplyOption: false,\n      modalIsOpen: false\n    });\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        modalIsOpen: true\n      });\n    });\n\n    _defineProperty(this, \"afterOpenModal\", () => {// references are now sync'd and can be accessed.\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        modalIsOpen: false,\n        showOptions: false\n      });\n    });\n\n    _defineProperty(this, \"onLikeClick\", (postId, replyId) => {\n      if (this.findUserLike(this.props.reply.likes)) {\n        this.props.removeReplyLike(postId, replyId);\n      } else {\n        this.props.addReplyLike(postId, replyId);\n      }\n\n      this.findUserLike(this.props.reply.likes);\n    });\n\n    _defineProperty(this, \"onToolBar\", id => {\n      this.setState({\n        showOptions: !this.state.showOptions\n      });\n    });\n\n    _defineProperty(this, \"onReplyClick\", id => {\n      this.setState({\n        showReplyOption: !this.state.showReplyOption\n      });\n    });\n\n    _defineProperty(this, \"deleteReplyHandler\", (postId, replyId) => {\n      this.props.deleteReply(postId, replyId);\n    });\n\n    _defineProperty(this, \"findUserLike\", likes => {\n      const {\n        auth\n      } = this.props;\n\n      if (likes && likes.length > 0) {\n        if (likes.filter(like => like.user === auth.user.id).length > 0) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    });\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    const {\n      reply,\n      postId\n    } = this.props;\n    const {\n      likes\n    } = this.props.reply;\n    return React.createElement(\"div\", {\n      className: \"ReplyItem\",\n      style: {\n        backgroundColor: this.props.backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.showOptions ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('PostOptions', {\n        'PostOptions__disappear': this.state.modalIsOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostOptions__editPost\",\n      onClick: this.openModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Edit Reply\"), React.createElement(\"button\", {\n      className: \"PostOptions__deletePost\",\n      onClick: this.deleteReplyHandler.bind(this, postId, reply._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Delete Reply\")), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: this.closeModal,\n      style: customStyles,\n      contentLabel: \"ReplyForm Modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(ReplyEditForm, {\n      postId: postId,\n      replyId: reply._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))) : null, React.createElement(\"div\", {\n      className: \"ReplyItem__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ReplyItem__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, reply.name), \" \", reply.text, React.createElement(\"div\", {\n      className: \"ReplyItem__timeago\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(TimeAgo, {\n      live: false,\n      date: reply.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ReplyItem__toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ReplyItem__ellipses\",\n      onClick: this.onToolBar.bind(this, reply._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"ellipsis-h\",\n      style: {\n        color: `${this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"ReplyItem__collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ReplyItem__likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ReplyItem__like\",\n      onClick: this.onLikeClick.bind(this, postId, reply._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"thumbs-up\",\n      style: {\n        color: `${this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), likes.length > 0 ? React.createElement(\"span\", {\n      className: \"ReplyItem__countLikesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ReplyItem__countLikes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, likes.length === 1 ? `${likes.length} like` : `${likes.length} likes`)) : null)));\n  }\n\n} // ReplyItem.defaultProps = {\n//   showActions: true\n// };\n\n\nReplyItem.propTypes = {\n  deleteReply: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  deleteReply,\n  addReplyLike,\n  removeReplyLike\n})(ReplyItem);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\posts\\replies\\ReplyItem.js"],"names":["React","Component","PropTypes","connect","FontAwesomeIcon","addReplyLike","removeReplyLike","deleteReply","Modal","classnames","ReplyEditForm","TimeAgo","customStyles","overlay","backgroundColor","content","position","top","left","right","bottom","marginRight","transform","width","zIndex","ReplyItem","showOptions","showReplyOption","modalIsOpen","setState","postId","replyId","findUserLike","props","reply","likes","id","state","auth","length","filter","like","user","componentDidMount","setAppElement","render","openModal","bind","deleteReplyHandler","_id","closeModal","name","text","date","onToolBar","color","cursor","onLikeClick","propTypes","func","isRequired","post","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { addReplyLike, removeReplyLike, deleteReply } from '../../../actions/postActions';\r\nimport Modal from 'react-modal';\r\nimport classnames from 'classnames';\r\nimport ReplyEditForm from './ReplyEditForm';\r\nimport TimeAgo from 'react-timeago'\r\n\r\nconst customStyles = {\r\n    overlay:{\r\n        backgroundColor:'rgba(0,121,191,0.8)'\r\n    },\r\n    content : {\r\n      position              :'fixed',\r\n      top                   : '20%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : 'rgba(255, 255, 255, 0.95)',\r\n      width                 :'80%',\r\n      zIndex                :'1000'\r\n    }\r\n  };\r\n\r\nclass ReplyItem extends Component {\r\n    \r\n    state = {\r\n        showOptions:false\r\n    }\r\n\r\n    state = {\r\n        showOptions:false,\r\n        showReplyOption:false,\r\n        modalIsOpen:false\r\n    }\r\n    componentDidMount() {\r\n        Modal.setAppElement('body');\r\n    }\r\n    \r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            modalIsOpen:true\r\n        })\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        // references are now sync'd and can be accessed.\r\n        \r\n      }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            showOptions:false\r\n        });\r\n      }\r\n\r\n    onLikeClick = (postId,replyId) => {\r\n        if(this.findUserLike(this.props.reply.likes)){\r\n            this.props.removeReplyLike(postId,replyId);\r\n            \r\n        }\r\n        else{\r\n          this.props.addReplyLike(postId,replyId);\r\n        }\r\n       \r\n        this.findUserLike(this.props.reply.likes);\r\n    }\r\n    onToolBar = (id) => {\r\n        this.setState({showOptions:!this.state.showOptions})\r\n    }\r\n    onReplyClick = (id) => {\r\n        this.setState({showReplyOption:!this.state.showReplyOption})\r\n    }\r\n\r\n    deleteReplyHandler = (postId,replyId) => {\r\n        this.props.deleteReply(postId,replyId);\r\n      \r\n   }\r\n\r\n    findUserLike = (likes) => { \r\n      const { auth } = this.props;\r\n     \r\n      if( likes && likes.length > 0){\r\n        if ( likes.filter( like => like.user === auth.user.id).length > 0) {\r\n            return true;\r\n          }\r\n          else {\r\n              return false\r\n          }\r\n      }\r\n      else {return false}\r\n     \r\n  }\r\n\r\n \r\n\r\n    render() {\r\n        const { reply, postId } = this.props;\r\n        const {likes} = this.props.reply;\r\n     \r\n        return (\r\n    \r\n            <div className = \"ReplyItem\" style = {{backgroundColor:this.props.backgroundColor}}>\r\n\r\n                {\r\n                    this.state.showOptions ?\r\n                        <div>\r\n                                <div className= {classnames('PostOptions',{'PostOptions__disappear':this.state.modalIsOpen})} >\r\n                                    <button className = \"PostOptions__editPost\"  onClick={this.openModal.bind(this)}>Edit Reply</button>\r\n                                    <button className = \"PostOptions__deletePost\" onClick={this.deleteReplyHandler.bind(this,postId,reply._id)}>Delete Reply</button>\r\n                                </div>\r\n                                \r\n                                <Modal\r\n                                isOpen={this.state.modalIsOpen}\r\n                                onRequestClose={this.closeModal}\r\n                                style={customStyles}\r\n                                contentLabel=\"ReplyForm Modal\"\r\n                                >\r\n                                    <ReplyEditForm postId = {postId} replyId = {reply._id}/>\r\n                                \r\n                                </Modal>\r\n                        </div>\r\n                            : null   \r\n                }  \r\n\r\n                <div className = \"ReplyItem__content\">\r\n                        <span className = \"ReplyItem__name\">{reply.name}</span> {reply.text}\r\n                        <div className = \"ReplyItem__timeago\">\r\n                             <TimeAgo live = {false} date= { reply.date }  />\r\n                        </div>\r\n                        <div className = \"ReplyItem__toolbar\">\r\n                        <button className = \"ReplyItem__ellipses\" onClick  = { this.onToolBar.bind(this,reply._id) } >\r\n                                <FontAwesomeIcon\r\n                                    icon=\"ellipsis-h\"\r\n                                    style = {{color:`${this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                />\r\n                        </button>      \r\n                        </div>\r\n                        <div className = \"ReplyItem__collection\">  \r\n             \r\n                            <div className = \"ReplyItem__likes\">\r\n                                <button className = \"ReplyItem__like\" onClick = {this.onLikeClick.bind(this,postId,reply._id)} >\r\n                                    <FontAwesomeIcon\r\n                                        icon=\"thumbs-up\"\r\n                                        style = {{color:`${this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                    />\r\n                                </button>\r\n                            </div> \r\n                    \r\n                            {\r\n                                    likes.length > 0 ? \r\n                                    <span className = \"ReplyItem__countLikesContainer\">\r\n                                        <button className = \"ReplyItem__countLikes\" >\r\n                                        {likes.length === 1 ? `${likes.length} like` : `${likes.length} likes`}\r\n                                        </button>\r\n                                    </span> \r\n                                    :null\r\n                            }\r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// ReplyItem.defaultProps = {\r\n//   showActions: true\r\n// };\r\n\r\nReplyItem.propTypes = {\r\n  deleteReply: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    post:state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, {deleteReply, addReplyLike,removeReplyLike } )(ReplyItem);"]},"metadata":{},"sourceType":"module"}