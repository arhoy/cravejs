{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\replies\\\\ReplyItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { addReplyLike, removeReplyLike, deleteReply } from '../../../actions/postActions';\nimport Modal from 'react-modal';\nimport classnames from 'classnames';\nimport ReplyEditForm from './ReplyEditForm';\nimport TimeAgo from 'react-timeago';\nvar customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,121,191,0.8)'\n  },\n  content: {\n    position: 'fixed',\n    top: '20%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n    width: '80%',\n    zIndex: '1000'\n  }\n};\n\nvar ReplyItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReplyItem, _Component);\n\n  function ReplyItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReplyItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReplyItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showOptions: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showOptions: false,\n      showReplyOption: false,\n      modalIsOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openModal\", function () {\n      _this.setState({\n        modalIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"afterOpenModal\", function () {// references are now sync'd and can be accessed.\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        modalIsOpen: false,\n        showOptions: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLikeClick\", function (postId, replyId) {\n      if (_this.findUserLike(_this.props.reply.likes)) {\n        _this.props.removeReplyLike(postId, replyId);\n      } else {\n        _this.props.addReplyLike(postId, replyId);\n      }\n\n      _this.findUserLike(_this.props.reply.likes);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToolBar\", function (id) {\n      _this.setState({\n        showOptions: !_this.state.showOptions\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReplyClick\", function (id) {\n      _this.setState({\n        showReplyOption: !_this.state.showReplyOption\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteReplyHandler\", function (postId, replyId) {\n      _this.props.deleteReply(postId, replyId);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"findUserLike\", function (likes) {\n      var auth = _this.props.auth;\n\n      if (likes && likes.length > 0) {\n        if (likes.filter(function (like) {\n          return like.user === auth.user.id;\n        }).length > 0) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ReplyItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          reply = _this$props.reply,\n          postId = _this$props.postId;\n      var likes = this.props.reply.likes;\n      return React.createElement(\"div\", {\n        className: \"ReplyItem\",\n        style: {\n          backgroundColor: this.props.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.showOptions ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classnames('PostOptions', {\n          'PostOptions__disappear': this.state.modalIsOpen\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostOptions__editPost\",\n        onClick: this.openModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Edit Reply\"), React.createElement(\"button\", {\n        className: \"PostOptions__deletePost\",\n        onClick: this.deleteReplyHandler.bind(this, postId, reply._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Delete Reply\")), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"ReplyForm Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ReplyEditForm, {\n        postId: postId,\n        replyId: reply._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))) : null, React.createElement(\"div\", {\n        className: \"ReplyItem__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"ReplyItem__name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, reply.name), \" \", reply.text, React.createElement(\"div\", {\n        className: \"ReplyItem__timeago\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(TimeAgo, {\n        live: false,\n        date: reply.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ReplyItem__toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ReplyItem__ellipses\",\n        onClick: this.onToolBar.bind(this, reply._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"ellipsis-h\",\n        style: {\n          color: \"\".concat(this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'),\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ReplyItem__collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ReplyItem__likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ReplyItem__like\",\n        onClick: this.onLikeClick.bind(this, postId, reply._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"thumbs-up\",\n        style: {\n          color: \"\".concat(this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'),\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), likes.length > 0 ? React.createElement(\"span\", {\n        className: \"ReplyItem__countLikesContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ReplyItem__countLikes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, likes.length === 1 ? \"\".concat(likes.length, \" like\") : \"\".concat(likes.length, \" likes\"))) : null)));\n    }\n  }]);\n\n  return ReplyItem;\n}(Component); // ReplyItem.defaultProps = {\n//   showActions: true\n// };\n\n\nReplyItem.propTypes = {\n  deleteReply: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteReply: deleteReply,\n  addReplyLike: addReplyLike,\n  removeReplyLike: removeReplyLike\n})(ReplyItem);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\replies\\ReplyItem.js"],"names":["React","Component","PropTypes","connect","FontAwesomeIcon","addReplyLike","removeReplyLike","deleteReply","Modal","classnames","ReplyEditForm","TimeAgo","customStyles","overlay","backgroundColor","content","position","top","left","right","bottom","marginRight","transform","width","zIndex","ReplyItem","showOptions","showReplyOption","modalIsOpen","setState","postId","replyId","findUserLike","props","reply","likes","id","state","auth","length","filter","like","user","setAppElement","openModal","bind","deleteReplyHandler","_id","closeModal","name","text","date","onToolBar","color","cursor","onLikeClick","propTypes","func","isRequired","post","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { addReplyLike, removeReplyLike, deleteReply } from '../../../actions/postActions';\r\nimport Modal from 'react-modal';\r\nimport classnames from 'classnames';\r\nimport ReplyEditForm from './ReplyEditForm';\r\nimport TimeAgo from 'react-timeago'\r\n\r\nconst customStyles = {\r\n    overlay:{\r\n        backgroundColor:'rgba(0,121,191,0.8)'\r\n    },\r\n    content : {\r\n      position              :'fixed',\r\n      top                   : '20%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : 'rgba(255, 255, 255, 0.95)',\r\n      width                 :'80%',\r\n      zIndex                :'1000'\r\n    }\r\n  };\r\n\r\nclass ReplyItem extends Component {\r\n    \r\n    state = {\r\n        showOptions:false\r\n    }\r\n\r\n    state = {\r\n        showOptions:false,\r\n        showReplyOption:false,\r\n        modalIsOpen:false\r\n    }\r\n    componentDidMount() {\r\n        Modal.setAppElement('body');\r\n    }\r\n    \r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            modalIsOpen:true\r\n        })\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        // references are now sync'd and can be accessed.\r\n        \r\n      }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            showOptions:false\r\n        });\r\n      }\r\n\r\n    onLikeClick = (postId,replyId) => {\r\n        if(this.findUserLike(this.props.reply.likes)){\r\n            this.props.removeReplyLike(postId,replyId);\r\n            \r\n        }\r\n        else{\r\n          this.props.addReplyLike(postId,replyId);\r\n        }\r\n       \r\n        this.findUserLike(this.props.reply.likes);\r\n    }\r\n    onToolBar = (id) => {\r\n        this.setState({showOptions:!this.state.showOptions})\r\n    }\r\n    onReplyClick = (id) => {\r\n        this.setState({showReplyOption:!this.state.showReplyOption})\r\n    }\r\n\r\n    deleteReplyHandler = (postId,replyId) => {\r\n        this.props.deleteReply(postId,replyId);\r\n      \r\n   }\r\n\r\n    findUserLike = (likes) => { \r\n      const { auth } = this.props;\r\n     \r\n      if( likes && likes.length > 0){\r\n        if ( likes.filter( like => like.user === auth.user.id).length > 0) {\r\n            return true;\r\n          }\r\n          else {\r\n              return false\r\n          }\r\n      }\r\n      else {return false}\r\n     \r\n  }\r\n\r\n \r\n\r\n    render() {\r\n        const { reply, postId } = this.props;\r\n        const {likes} = this.props.reply;\r\n     \r\n        return (\r\n    \r\n            <div className = \"ReplyItem\" style = {{backgroundColor:this.props.backgroundColor}}>\r\n\r\n                {\r\n                    this.state.showOptions ?\r\n                        <div>\r\n                                <div className= {classnames('PostOptions',{'PostOptions__disappear':this.state.modalIsOpen})} >\r\n                                    <button className = \"PostOptions__editPost\"  onClick={this.openModal.bind(this)}>Edit Reply</button>\r\n                                    <button className = \"PostOptions__deletePost\" onClick={this.deleteReplyHandler.bind(this,postId,reply._id)}>Delete Reply</button>\r\n                                </div>\r\n                                \r\n                                <Modal\r\n                                isOpen={this.state.modalIsOpen}\r\n                                onRequestClose={this.closeModal}\r\n                                style={customStyles}\r\n                                contentLabel=\"ReplyForm Modal\"\r\n                                >\r\n                                    <ReplyEditForm postId = {postId} replyId = {reply._id}/>\r\n                                \r\n                                </Modal>\r\n                        </div>\r\n                            : null   \r\n                }  \r\n\r\n                <div className = \"ReplyItem__content\">\r\n                        <span className = \"ReplyItem__name\">{reply.name}</span> {reply.text}\r\n                        <div className = \"ReplyItem__timeago\">\r\n                             <TimeAgo live = {false} date= { reply.date }  />\r\n                        </div>\r\n                        <div className = \"ReplyItem__toolbar\">\r\n                        <button className = \"ReplyItem__ellipses\" onClick  = { this.onToolBar.bind(this,reply._id) } >\r\n                                <FontAwesomeIcon\r\n                                    icon=\"ellipsis-h\"\r\n                                    style = {{color:`${this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                />\r\n                        </button>      \r\n                        </div>\r\n                        <div className = \"ReplyItem__collection\">  \r\n             \r\n                            <div className = \"ReplyItem__likes\">\r\n                                <button className = \"ReplyItem__like\" onClick = {this.onLikeClick.bind(this,postId,reply._id)} >\r\n                                    <FontAwesomeIcon\r\n                                        icon=\"thumbs-up\"\r\n                                        style = {{color:`${this.findUserLike(this.props.reply.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                    />\r\n                                </button>\r\n                            </div> \r\n                    \r\n                            {\r\n                                    likes.length > 0 ? \r\n                                    <span className = \"ReplyItem__countLikesContainer\">\r\n                                        <button className = \"ReplyItem__countLikes\" >\r\n                                        {likes.length === 1 ? `${likes.length} like` : `${likes.length} likes`}\r\n                                        </button>\r\n                                    </span> \r\n                                    :null\r\n                            }\r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// ReplyItem.defaultProps = {\r\n//   showActions: true\r\n// };\r\n\r\nReplyItem.propTypes = {\r\n  deleteReply: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    post:state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, {deleteReply, addReplyLike,removeReplyLike } )(ReplyItem);"]},"metadata":{},"sourceType":"module"}