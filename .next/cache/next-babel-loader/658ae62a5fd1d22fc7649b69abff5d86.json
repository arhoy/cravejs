{"ast":null,"code":"import axios from 'axios';\nimport { logoutUser } from './authActions';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS, GET_PROFILE_COMMENT } from './types';\n/** ACTIONS RELATED TO COMMENTS SECTION **/\n// Get specific comment to a profile\n\nexport const getProfileComment = (handle, commentId) => dispatch => {\n  axios.get(`/api/profile/comment/${handle}/${commentId}`).then(res => dispatch({\n    type: GET_PROFILE_COMMENT,\n    payload: res.data // gives back the specific profile comment\n\n  })).catch(err => dispatch({\n    type: GET_PROFILE_COMMENT,\n    payload: {}\n  }));\n}; // Get current comments to profile\n\nexport const getProfileComments = handle => dispatch => {\n  axios.get(`/api/profile/comment/${handle}`).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: []\n  }));\n}; // Add comment\n\nexport const addComment = (handle, postData) => dispatch => {\n  // dispatch(clearErrors());\n  axios.post(`/api/profile/comment/${handle}`, postData).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n  dispatch(getProfileComments(handle));\n};\nexport const editComment = (handle, commentId, postData) => dispatch => {\n  // dispatch(clearErrors());\n  axios.post(`/api/profile/comment/${handle}/${commentId}`, postData).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).then(res => dispatch(getProfileComments(handle))).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: {}\n  }));\n}; //Add Comment Like\n\nexport const addCommentLike = (handle, commentId) => dispatch => {\n  axios.post(`/api/profile/comment/like/${handle}/${commentId}`).then(res => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data // res.data is comments data array.\n\n    });\n  }).catch(({\n    response\n  }) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: response.data\n    });\n  });\n  dispatch(getProfileComments(handle));\n}; //Remove Comment Like\n\nexport const removeCommentLike = (handle, commentId) => dispatch => {\n  axios.post(`/api/profile/comment/unlike/${handle}/${commentId}`).then(({\n    data\n  }) => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: data //pass in updated post\n\n    });\n  }).catch(({\n    response\n  }) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: response.data\n    });\n  });\n  dispatch(getProfileComments(handle));\n};\nexport const deleteComment = (handle, commentId) => dispatch => {\n  axios.delete(`/api/profile/comment/${handle}/${commentId}`).then(res => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n  dispatch(getProfileComments(handle));\n};\n/** ACTIONS RELATED TO USER PROFILE ( Not including the comments section ) */\n// Get current profile\n\nexport const getCurrentProfile = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get('/api/profile').then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: {}\n  }));\n}; // Get current education\n\nexport const getCurrentEducation = () => dispatch => {\n  axios.get('/api/profile').then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: {}\n  }));\n}; // Create Profile\n\nexport const createProfile = (profileData, history) => dispatch => {\n  axios.post('/api/profile', profileData).then(res => history.push('/dashboard')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Profile loading\n\nexport const setProfileLoading = () => {\n  return {\n    type: PROFILE_LOADING\n  };\n}; // Add experience\n\nexport const addExperience = (expData, history) => dispatch => {\n  axios.post('/api/profile/experience', expData).then(res => history.push('/dashboard')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add experience\n\nexport const addEducation = (expData, history) => dispatch => {\n  axios.post('/api/profile/education', expData).then(res => history.push('/dashboard')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Clear profile\n\nexport const clearCurrentProfile = () => {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n}; // Get all profiles\n\nexport const getProfiles = () => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get('/api/profile/all').then(res => dispatch({\n    type: GET_PROFILES,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILES,\n    payload: null\n  }));\n}; // Get profile by handle\n\nexport const getProfileByHandle = handle => dispatch => {\n  dispatch(setProfileLoading());\n  axios.get(`/api/profile/handle/${handle}`).then(res => dispatch({\n    type: GET_PROFILE,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_PROFILE,\n    payload: null\n  }));\n}; // Delete experience \n\nexport const deleteExperience = id => dispatch => {\n  axios.delete(`/api/profile/experience/${id}`).then(res => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Delete Education \n\nexport const deleteEducation = id => dispatch => {\n  axios.delete(`/api/profile/education/${id}`).then(res => {\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Delete profile\n\nexport const deleteProfile = () => dispatch => {\n  if (prompt(\"Are you sure you want to delete your profile? This action cannot be undone. If so type YES to delete your profile\") === \"YES\") {\n    axios.delete('/api/profile/deleteProfile').then(res => {\n      window.location = \"/dashboard\";\n    }).catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  }\n}; // Delete Account \n\nexport const deleteAccount = () => dispatch => {\n  if (prompt(\"Enter DELETE to confirm\") === \"DELETE\") {\n    axios.delete('/api/profile').then(res => {\n      dispatch(logoutUser());\n    }).catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  }\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\profileActions.js"],"names":["axios","logoutUser","GET_PROFILE","GET_PROFILES","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","GET_ERRORS","GET_PROFILE_COMMENT","getProfileComment","handle","commentId","dispatch","get","then","res","type","payload","data","catch","err","getProfileComments","addComment","postData","post","response","editComment","addCommentLike","removeCommentLike","deleteComment","delete","getCurrentProfile","setProfileLoading","getCurrentEducation","createProfile","profileData","history","push","addExperience","expData","addEducation","clearCurrentProfile","getProfiles","getProfileByHandle","deleteExperience","id","deleteEducation","deleteProfile","prompt","window","location","deleteAccount"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {logoutUser} from './authActions'\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_ERRORS,\r\n  GET_PROFILE_COMMENT\r\n} from './types';\r\n\r\n/** ACTIONS RELATED TO COMMENTS SECTION **/\r\n\r\n// Get specific comment to a profile\r\nexport const getProfileComment = (handle,commentId) => dispatch => {\r\n  axios\r\n    .get(`/api/profile/comment/${handle}/${commentId}`)\r\n    .then ( res => \r\n        dispatch ({\r\n            type:GET_PROFILE_COMMENT,\r\n            payload:res.data // gives back the specific profile comment\r\n       })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE_COMMENT,\r\n        payload: {}\r\n      })\r\n    );\r\n}\r\n\r\n// Get current comments to profile\r\nexport const getProfileComments = (handle) => dispatch => {\r\n  axios\r\n    .get(`/api/profile/comment/${handle}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: []\r\n      })\r\n    );\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (handle,postData) => dispatch => {\r\n // dispatch(clearErrors());\r\n  axios\r\n  .post(`/api/profile/comment/${handle}`,postData)\r\n  .then( res =>\r\n      dispatch({\r\n          type: GET_PROFILE,\r\n          payload:res.data\r\n      })\r\n  )\r\n  .catch( err =>\r\n      dispatch({\r\n          type:GET_ERRORS,\r\n          payload: err.response.data\r\n      })\r\n  );\r\n  dispatch(getProfileComments(handle));\r\n\r\n}\r\n\r\nexport const editComment = (handle,commentId,postData) => dispatch => {\r\n  // dispatch(clearErrors());\r\n  axios\r\n      .post(`/api/profile/comment/${handle}/${commentId}`,postData)\r\n      .then( res => \r\n          dispatch({\r\n              type: GET_PROFILE,\r\n              payload: res.data\r\n          })\r\n      )\r\n      .then( \r\n        res =>  dispatch(getProfileComments(handle))\r\n      )\r\n      .catch( err =>\r\n          dispatch({\r\n              type:GET_PROFILE,\r\n              payload: {}\r\n          })\r\n      );\r\n     \r\n}\r\n\r\n//Add Comment Like\r\nexport const addCommentLike = ( handle, commentId ) => dispatch => {\r\n\r\n  axios\r\n    .post(`/api/profile/comment/like/${handle}/${commentId}`)\r\n    .then( res => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data // res.data is comments data array.\r\n      });\r\n    })\r\n    .catch(({ response }) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: response.data\r\n      });\r\n    });\r\n    dispatch(getProfileComments(handle));\r\n};\r\n\r\n//Remove Comment Like\r\nexport const removeCommentLike = ( handle, commentId ) => dispatch => {\r\n  axios\r\n    .post(`/api/profile/comment/unlike/${handle}/${commentId}`)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: data //pass in updated post\r\n      });\r\n    })\r\n    .catch(({ response }) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: response.data\r\n      });\r\n    });\r\n    dispatch(getProfileComments(handle));\r\n};\r\n\r\nexport const deleteComment = (handle,commentId) => dispatch => {\r\n  axios\r\n    .delete(`/api/profile/comment/${handle}/${commentId}`)\r\n    .then( res => {\r\n      dispatch({\r\n        type:GET_PROFILE,\r\n        payload:res.data\r\n      })\r\n    })\r\n    .catch( err => {\r\n       dispatch({\r\n         type: GET_ERRORS,\r\n         payload: err.response.data\r\n       })\r\n    })\r\n    dispatch(getProfileComments(handle));\r\n\r\n}\r\n\r\n\r\n\r\n/** ACTIONS RELATED TO USER PROFILE ( Not including the comments section ) */\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n// Get current education\r\nexport const getCurrentEducation = () => dispatch => {\r\n\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n// Create Profile\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n  axios\r\n    .post('/api/profile', profileData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (expData,history) => dispatch =>  {  \r\n  axios\r\n    .post('/api/profile/experience',expData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err => \r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload:err.response.data\r\n        })\r\n      );\r\n};\r\n\r\n// Add experience\r\nexport const addEducation = (expData,history) => dispatch =>  {  \r\n  axios\r\n    .post('/api/profile/education',expData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err => \r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload:err.response.data\r\n        })\r\n      );\r\n};\r\n\r\n// Clear profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile/all')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Get profile by handle\r\nexport const getProfileByHandle = (handle) => dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios\r\n      .get(`/api/profile/handle/${handle}`)\r\n      .then(res =>\r\n          dispatch({\r\n            type: GET_PROFILE,\r\n            payload:res.data\r\n          })\r\n      )\r\n      .catch(err=>\r\n          dispatch({\r\n            type:GET_PROFILE,\r\n            payload:null\r\n          })\r\n        )\r\n};\r\n\r\n// Delete experience \r\nexport const deleteExperience = (id) => dispatch => {\r\n    axios\r\n      .delete(`/api/profile/experience/${id}`)\r\n      .then( res => {\r\n        dispatch({\r\n          type:GET_PROFILE,\r\n          payload:res.data\r\n        })\r\n      })\r\n      .catch( err => {\r\n         dispatch({\r\n           type: GET_ERRORS,\r\n           payload: err.response.data\r\n         })\r\n      })\r\n}\r\n\r\n// Delete Education \r\nexport const deleteEducation = (id) => dispatch => {\r\n  axios\r\n    .delete(`/api/profile/education/${id}`)\r\n    .then( res => {\r\n      dispatch({\r\n        type:GET_PROFILE,\r\n        payload:res.data\r\n      })\r\n    })\r\n    .catch( err => {\r\n       dispatch({\r\n         type: GET_ERRORS,\r\n         payload: err.response.data\r\n       })\r\n    })\r\n}\r\n\r\n// Delete profile\r\nexport const deleteProfile = () => dispatch => {\r\n  if( prompt(\"Are you sure you want to delete your profile? This action cannot be undone. If so type YES to delete your profile\") === \"YES\"){\r\n      axios\r\n        .delete('/api/profile/deleteProfile')\r\n        .then(res => {\r\n            window.location = \"/dashboard\";\r\n        })\r\n        .catch( err => {\r\n          dispatch ({\r\n              type:GET_ERRORS,\r\n              payload:err.response.data\r\n          })\r\n        })\r\n  }\r\n}\r\n\r\n// Delete Account \r\nexport const deleteAccount = () => dispatch => {\r\n  if( prompt(\"Enter DELETE to confirm\") === \"DELETE\" ){\r\n    axios\r\n      .delete('/api/profile')\r\n      .then( res => {\r\n          dispatch(logoutUser())\r\n      })\r\n      .catch( err => {\r\n         dispatch({\r\n           type: GET_ERRORS,\r\n           payload: err.response.data\r\n         })\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}