{"ast":null,"code":"import axios from 'axios';\nimport { logoutUser } from './authActions';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_LOADING, CLEAR_CURRENT_PROFILE, GET_ERRORS, GET_PROFILE_COMMENT } from './types';\n/** ACTIONS RELATED TO COMMENTS SECTION **/\n// Get specific comment to a profile\n\nexport var getProfileComment = function getProfileComment(handle, commentId) {\n  return function (dispatch) {\n    axios.get(\"/api/profile/comment/\".concat(handle, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE_COMMENT,\n        payload: res.data // gives back the specific profile comment\n\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILE_COMMENT,\n        payload: {}\n      });\n    });\n  };\n}; // Get current comments to profile\n\nexport var getProfileComments = function getProfileComments(handle) {\n  return function (dispatch) {\n    axios.get(\"/api/profile/comment/\".concat(handle)).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: []\n      });\n    });\n  };\n}; // Add comment\n\nexport var addComment = function addComment(handle, postData) {\n  return function (dispatch) {\n    // dispatch(clearErrors());\n    axios.post(\"/api/profile/comment/\".concat(handle), postData).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n    dispatch(getProfileComments(handle));\n  };\n};\nexport var editComment = function editComment(handle, commentId, postData) {\n  return function (dispatch) {\n    // dispatch(clearErrors());\n    axios.post(\"/api/profile/comment/\".concat(handle, \"/\").concat(commentId), postData).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).then(function (res) {\n      return dispatch(getProfileComments(handle));\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: {}\n      });\n    });\n  };\n}; //Add Comment Like\n\nexport var addCommentLike = function addCommentLike(handle, commentId) {\n  return function (dispatch) {\n    axios.post(\"/api/profile/comment/like/\".concat(handle, \"/\").concat(commentId)).then(function (res) {\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data // res.data is comments data array.\n\n      });\n    })[\"catch\"](function (_ref) {\n      var response = _ref.response;\n      dispatch({\n        type: GET_ERRORS,\n        payload: response.data\n      });\n    });\n    dispatch(getProfileComments(handle));\n  };\n}; //Remove Comment Like\n\nexport var removeCommentLike = function removeCommentLike(handle, commentId) {\n  return function (dispatch) {\n    axios.post(\"/api/profile/comment/unlike/\".concat(handle, \"/\").concat(commentId)).then(function (_ref2) {\n      var data = _ref2.data;\n      dispatch({\n        type: GET_PROFILE,\n        payload: data //pass in updated post\n\n      });\n    })[\"catch\"](function (_ref3) {\n      var response = _ref3.response;\n      dispatch({\n        type: GET_ERRORS,\n        payload: response.data\n      });\n    });\n    dispatch(getProfileComments(handle));\n  };\n};\nexport var deleteComment = function deleteComment(handle, commentId) {\n  return function (dispatch) {\n    axios[\"delete\"](\"/api/profile/comment/\".concat(handle, \"/\").concat(commentId)).then(function (res) {\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n    dispatch(getProfileComments(handle));\n  };\n};\n/** ACTIONS RELATED TO USER PROFILE ( Not including the comments section ) */\n// Get current profile\n\nexport var getCurrentProfile = function getCurrentProfile() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get('/api/profile').then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: {}\n      });\n    });\n  };\n}; // Get current education\n\nexport var getCurrentEducation = function getCurrentEducation() {\n  return function (dispatch) {\n    axios.get('/api/profile').then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: {}\n      });\n    });\n  };\n}; // Create Profile\n\nexport var createProfile = function createProfile(profileData, history) {\n  return function (dispatch) {\n    axios.post('/api/profile', profileData).then(function (res) {\n      return history.push('/dashboard');\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Profile loading\n\nexport var setProfileLoading = function setProfileLoading() {\n  return {\n    type: PROFILE_LOADING\n  };\n}; // Add experience\n\nexport var addExperience = function addExperience(expData, history) {\n  return function (dispatch) {\n    axios.post('/api/profile/experience', expData).then(function (res) {\n      return history.push('/dashboard');\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add experience\n\nexport var addEducation = function addEducation(expData, history) {\n  return function (dispatch) {\n    axios.post('/api/profile/education', expData).then(function (res) {\n      return history.push('/dashboard');\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Clear profile\n\nexport var clearCurrentProfile = function clearCurrentProfile() {\n  return {\n    type: CLEAR_CURRENT_PROFILE\n  };\n}; // Get all profiles\n\nexport var getProfiles = function getProfiles() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get('/api/profile/all').then(function (res) {\n      return dispatch({\n        type: GET_PROFILES,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILES,\n        payload: null\n      });\n    });\n  };\n}; // Get profile by handle\n\nexport var getProfileByHandle = function getProfileByHandle(handle) {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get(\"/api/profile/handle/\".concat(handle)).then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: null\n      });\n    });\n  };\n}; // Delete experience \n\nexport var deleteExperience = function deleteExperience(id) {\n  return function (dispatch) {\n    axios[\"delete\"](\"/api/profile/experience/\".concat(id)).then(function (res) {\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Delete Education \n\nexport var deleteEducation = function deleteEducation(id) {\n  return function (dispatch) {\n    axios[\"delete\"](\"/api/profile/education/\".concat(id)).then(function (res) {\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Delete profile\n\nexport var deleteProfile = function deleteProfile() {\n  return function (dispatch) {\n    if (prompt(\"Are you sure you want to delete your profile? This action cannot be undone. If so type YES to delete your profile\") === \"YES\") {\n      axios[\"delete\"]('/api/profile/deleteProfile').then(function (res) {\n        window.location = \"/dashboard\";\n      })[\"catch\"](function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n    }\n  };\n}; // Delete Account \n\nexport var deleteAccount = function deleteAccount() {\n  return function (dispatch) {\n    if (prompt(\"Enter DELETE to confirm\") === \"DELETE\") {\n      axios[\"delete\"]('/api/profile').then(function (res) {\n        dispatch(logoutUser());\n      })[\"catch\"](function (err) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\profileActions.js"],"names":["axios","logoutUser","GET_PROFILE","GET_PROFILES","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","GET_ERRORS","GET_PROFILE_COMMENT","getProfileComment","handle","commentId","dispatch","get","then","res","type","payload","data","err","getProfileComments","addComment","postData","post","response","editComment","addCommentLike","removeCommentLike","deleteComment","getCurrentProfile","setProfileLoading","getCurrentEducation","createProfile","profileData","history","push","addExperience","expData","addEducation","clearCurrentProfile","getProfiles","getProfileByHandle","deleteExperience","id","deleteEducation","deleteProfile","prompt","window","location","deleteAccount"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {logoutUser} from './authActions'\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n  GET_ERRORS,\r\n  GET_PROFILE_COMMENT\r\n} from './types';\r\n\r\n/** ACTIONS RELATED TO COMMENTS SECTION **/\r\n\r\n// Get specific comment to a profile\r\nexport const getProfileComment = (handle,commentId) => dispatch => {\r\n  axios\r\n    .get(`/api/profile/comment/${handle}/${commentId}`)\r\n    .then ( res => \r\n        dispatch ({\r\n            type:GET_PROFILE_COMMENT,\r\n            payload:res.data // gives back the specific profile comment\r\n       })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE_COMMENT,\r\n        payload: {}\r\n      })\r\n    );\r\n}\r\n\r\n// Get current comments to profile\r\nexport const getProfileComments = (handle) => dispatch => {\r\n  axios\r\n    .get(`/api/profile/comment/${handle}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: []\r\n      })\r\n    );\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (handle,postData) => dispatch => {\r\n // dispatch(clearErrors());\r\n  axios\r\n  .post(`/api/profile/comment/${handle}`,postData)\r\n  .then( res =>\r\n      dispatch({\r\n          type: GET_PROFILE,\r\n          payload:res.data\r\n      })\r\n  )\r\n  .catch( err =>\r\n      dispatch({\r\n          type:GET_ERRORS,\r\n          payload: err.response.data\r\n      })\r\n  );\r\n  dispatch(getProfileComments(handle));\r\n\r\n}\r\n\r\nexport const editComment = (handle,commentId,postData) => dispatch => {\r\n  // dispatch(clearErrors());\r\n  axios\r\n      .post(`/api/profile/comment/${handle}/${commentId}`,postData)\r\n      .then( res => \r\n          dispatch({\r\n              type: GET_PROFILE,\r\n              payload: res.data\r\n          })\r\n      )\r\n      .then( \r\n        res =>  dispatch(getProfileComments(handle))\r\n      )\r\n      .catch( err =>\r\n          dispatch({\r\n              type:GET_PROFILE,\r\n              payload: {}\r\n          })\r\n      );\r\n     \r\n}\r\n\r\n//Add Comment Like\r\nexport const addCommentLike = ( handle, commentId ) => dispatch => {\r\n\r\n  axios\r\n    .post(`/api/profile/comment/like/${handle}/${commentId}`)\r\n    .then( res => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data // res.data is comments data array.\r\n      });\r\n    })\r\n    .catch(({ response }) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: response.data\r\n      });\r\n    });\r\n    dispatch(getProfileComments(handle));\r\n};\r\n\r\n//Remove Comment Like\r\nexport const removeCommentLike = ( handle, commentId ) => dispatch => {\r\n  axios\r\n    .post(`/api/profile/comment/unlike/${handle}/${commentId}`)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: data //pass in updated post\r\n      });\r\n    })\r\n    .catch(({ response }) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: response.data\r\n      });\r\n    });\r\n    dispatch(getProfileComments(handle));\r\n};\r\n\r\nexport const deleteComment = (handle,commentId) => dispatch => {\r\n  axios\r\n    .delete(`/api/profile/comment/${handle}/${commentId}`)\r\n    .then( res => {\r\n      dispatch({\r\n        type:GET_PROFILE,\r\n        payload:res.data\r\n      })\r\n    })\r\n    .catch( err => {\r\n       dispatch({\r\n         type: GET_ERRORS,\r\n         payload: err.response.data\r\n       })\r\n    })\r\n    dispatch(getProfileComments(handle));\r\n\r\n}\r\n\r\n\r\n\r\n/** ACTIONS RELATED TO USER PROFILE ( Not including the comments section ) */\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n// Get current education\r\nexport const getCurrentEducation = () => dispatch => {\r\n\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n// Create Profile\r\nexport const createProfile = (profileData, history) => dispatch => {\r\n  axios\r\n    .post('/api/profile', profileData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (expData,history) => dispatch =>  {  \r\n  axios\r\n    .post('/api/profile/experience',expData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err => \r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload:err.response.data\r\n        })\r\n      );\r\n};\r\n\r\n// Add experience\r\nexport const addEducation = (expData,history) => dispatch =>  {  \r\n  axios\r\n    .post('/api/profile/education',expData)\r\n    .then(res => history.push('/dashboard'))\r\n    .catch(err => \r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload:err.response.data\r\n        })\r\n      );\r\n};\r\n\r\n// Clear profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE\r\n  };\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile/all')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_PROFILES,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Get profile by handle\r\nexport const getProfileByHandle = (handle) => dispatch => {\r\n    dispatch(setProfileLoading());\r\n    axios\r\n      .get(`/api/profile/handle/${handle}`)\r\n      .then(res =>\r\n          dispatch({\r\n            type: GET_PROFILE,\r\n            payload:res.data\r\n          })\r\n      )\r\n      .catch(err=>\r\n          dispatch({\r\n            type:GET_PROFILE,\r\n            payload:null\r\n          })\r\n        )\r\n};\r\n\r\n// Delete experience \r\nexport const deleteExperience = (id) => dispatch => {\r\n    axios\r\n      .delete(`/api/profile/experience/${id}`)\r\n      .then( res => {\r\n        dispatch({\r\n          type:GET_PROFILE,\r\n          payload:res.data\r\n        })\r\n      })\r\n      .catch( err => {\r\n         dispatch({\r\n           type: GET_ERRORS,\r\n           payload: err.response.data\r\n         })\r\n      })\r\n}\r\n\r\n// Delete Education \r\nexport const deleteEducation = (id) => dispatch => {\r\n  axios\r\n    .delete(`/api/profile/education/${id}`)\r\n    .then( res => {\r\n      dispatch({\r\n        type:GET_PROFILE,\r\n        payload:res.data\r\n      })\r\n    })\r\n    .catch( err => {\r\n       dispatch({\r\n         type: GET_ERRORS,\r\n         payload: err.response.data\r\n       })\r\n    })\r\n}\r\n\r\n// Delete profile\r\nexport const deleteProfile = () => dispatch => {\r\n  if( prompt(\"Are you sure you want to delete your profile? This action cannot be undone. If so type YES to delete your profile\") === \"YES\"){\r\n      axios\r\n        .delete('/api/profile/deleteProfile')\r\n        .then(res => {\r\n            window.location = \"/dashboard\";\r\n        })\r\n        .catch( err => {\r\n          dispatch ({\r\n              type:GET_ERRORS,\r\n              payload:err.response.data\r\n          })\r\n        })\r\n  }\r\n}\r\n\r\n// Delete Account \r\nexport const deleteAccount = () => dispatch => {\r\n  if( prompt(\"Enter DELETE to confirm\") === \"DELETE\" ){\r\n    axios\r\n      .delete('/api/profile')\r\n      .then( res => {\r\n          dispatch(logoutUser())\r\n      })\r\n      .catch( err => {\r\n         dispatch({\r\n           type: GET_ERRORS,\r\n           payload: err.response.data\r\n         })\r\n      })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}