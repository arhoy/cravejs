{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { ADD_TODO, REMOVE_TODO, EDIT_TODO, CHANGE_TODO_STATUS, GET_TODO, GET_TODOS, GET_SORTED_TODOS } from './types';\nexport var getTodos = function getTodos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get('/api/tasks');\n\n              case 3:\n                res = _context.sent;\n                dispatch({\n                  type: GET_TODOS,\n                  payload: res.data\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('there as an error');\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addTodo = function addTodo(text) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var config, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                config = {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context2.prev = 1;\n                _context2.next = 4;\n                return axios.post('/api/tasks', text, config);\n\n              case 4:\n                res = _context2.sent;\n                dispatch({\n                  type: ADD_TODO,\n                  payload: res.data\n                });\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error('there was an error in the addTodo action', _context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeTodo = function removeTodo(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios[\"delete\"](\"/api/tasks/\".concat(id));\n\n              case 3:\n                dispatch({\n                  type: REMOVE_TODO,\n                  payload: id\n                });\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error('There as an error with the removeTodo action', _context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 6]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getTodo = function getTodo(todo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                try {\n                  dispatch({\n                    type: GET_TODO,\n                    payload: todo\n                  });\n                } catch (error) {\n                  console.error('There was ane error with getTodo action', error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editTodo = function editTodo(id, text) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var config, res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                config = {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context5.prev = 1;\n                _context5.next = 4;\n                return axios.put(\"/api/tasks/\".concat(id), text, config);\n\n              case 4:\n                res = _context5.sent;\n                dispatch({\n                  type: EDIT_TODO,\n                  payload: res.data\n                });\n                _context5.next = 11;\n                break;\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n                console.error('There was an error in the editTodo action', _context5.t0);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var changeTodoStatus = function changeTodoStatus(id, status) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var config, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                config = {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context6.prev = 1;\n                _context6.next = 4;\n                return axios.put(\"api/tasks/status/\".concat(id), status, config);\n\n              case 4:\n                res = _context6.sent;\n                dispatch({\n                  type: CHANGE_TODO_STATUS,\n                  payload: res.data\n                });\n                _context6.next = 11;\n                break;\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n                console.error('There as an error in the changeTodoStatus action', _context6.t0);\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getSortedTodos = function getSortedTodos(todos) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        var config;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                config = {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n\n                try {\n                  // status object forms the req.body\n                  dispatch({\n                    type: GET_SORTED_TODOS,\n                    payload: todos\n                  }); // persist the data\n\n                  axios.put('api/tasks', todos, config);\n                } catch (error) {\n                  console.error('There as an error in the reorderTodo action', error);\n                }\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\todoActions.js"],"names":["axios","ADD_TODO","REMOVE_TODO","EDIT_TODO","CHANGE_TODO_STATUS","GET_TODO","GET_TODOS","GET_SORTED_TODOS","getTodos","dispatch","get","res","type","payload","data","console","error","addTodo","text","config","headers","post","removeTodo","id","getTodo","todo","editTodo","put","changeTodoStatus","status","getSortedTodos","todos"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    ADD_TODO,\r\n    REMOVE_TODO,\r\n    EDIT_TODO,\r\n    CHANGE_TODO_STATUS,\r\n    GET_TODO,\r\n    GET_TODOS,\r\n    GET_SORTED_TODOS\r\n} from './types';\r\n\r\n\r\nexport const getTodos = () => async dispatch => {\r\n    try {\r\n\r\n        const res = await axios.get('/api/tasks');\r\n        dispatch({\r\n            type: GET_TODOS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('there as an error')\r\n    }\r\n}\r\n\r\nexport const addTodo = text => async dispatch => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.post('/api/tasks', text, config);\r\n        dispatch({\r\n            type: ADD_TODO,\r\n            payload: res.data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        console.error('there was an error in the addTodo action', error)\r\n    }\r\n}\r\n\r\nexport const removeTodo = id => async dispatch => {\r\n\r\n    try {\r\n\r\n        await axios.delete(`/api/tasks/${id}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_TODO,\r\n            payload:id\r\n        })\r\n\r\n    } catch (error) {\r\n        console.error('There as an error with the removeTodo action', error);\r\n    }\r\n   \r\n}\r\n\r\nexport const getTodo = todo => async dispatch => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: GET_TODO,\r\n            payload: todo\r\n        })\r\n\r\n    } catch (error) {\r\n        console.error('There was ane error with getTodo action', error);\r\n    }\r\n}\r\n\r\nexport const editTodo = (id, text) => async dispatch => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n\r\n        const res = await axios.put(`/api/tasks/${id}`, text, config);\r\n\r\n        dispatch({\r\n            type: EDIT_TODO,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (error) {\r\n        console.error('There was an error in the editTodo action', error);\r\n    }\r\n}\r\n\r\nexport const changeTodoStatus = (id, status) => async dispatch => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        // status object forms the req.body\r\n        const res = await axios.put(`api/tasks/status/${id}`,status, config);\r\n        dispatch({\r\n            type: CHANGE_TODO_STATUS,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (error) {\r\n        console.error('There as an error in the changeTodoStatus action', error)\r\n    }\r\n}\r\n\r\nexport const getSortedTodos = todos => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    try {\r\n      \r\n        // status object forms the req.body\r\n        dispatch({\r\n            type: GET_SORTED_TODOS,\r\n            payload: todos\r\n        })\r\n        // persist the data\r\n        axios.put('api/tasks', todos, config);\r\n        \r\n    } catch (error) {\r\n        console.error('There as an error in the reorderTodo action', error)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}