{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\edit-profile\\\\EditProfile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport InputGroup from '../common/InputGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\nimport FileUpload from '../utils/form/FileUpload';\nimport { statusOptions } from '../create-profile/options/statusList';\n\nvar EditProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProfile, _Component);\n\n  function EditProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      displaySocialInputs: false,\n      displayPhotoUpload: false,\n      handle: '',\n      headline: '',\n      company: '',\n      website: '',\n      city: '',\n      country: '',\n      status: '',\n      skills: '',\n      githubusername: '',\n      bio: '',\n      twitter: '',\n      facebook: '',\n      linkedin: '',\n      youtube: '',\n      instagram: '',\n      errors: {},\n      submitPressed: false\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n\n      if (nextProps.profile.profile) {\n        var profile = nextProps.profile.profile; // Bring skills array back to CSV\n\n        var skillsCSV = profile.skills.join(','); // If profile field doesnt exist, make empty string\n\n        profile.company = !isEmpty(profile.company) ? profile.company : '';\n        profile.headline = !isEmpty(profile.headline) ? profile.headline : '';\n        profile.website = !isEmpty(profile.website) ? profile.website : '';\n        profile.country = !isEmpty(profile.country) ? profile.country : '';\n        profile.city = !isEmpty(profile.city) ? profile.city : '';\n        profile.githubusername = !isEmpty(profile.githubusername) ? profile.githubusername : '';\n        profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\n        profile.social = !isEmpty(profile.social) ? profile.social : {};\n        profile.twitter = !isEmpty(profile.social.twitter) ? profile.social.twitter : '';\n        profile.facebook = !isEmpty(profile.social.facebook) ? profile.social.facebook : '';\n        profile.linkedin = !isEmpty(profile.social.linkedin) ? profile.social.linkedin : '';\n        profile.youtube = !isEmpty(profile.social.youtube) ? profile.social.youtube : '';\n        profile.instagram = !isEmpty(profile.social.instagram) ? profile.social.instagram : ''; // set component fields state.\n\n        this.setState({\n          handle: profile.handle,\n          headline: profile.headline,\n          company: profile.company,\n          website: profile.website,\n          country: profile.country,\n          city: profile.city,\n          status: profile.status,\n          skills: skillsCSV,\n          githubusername: profile.githubusername,\n          bio: profile.bio,\n          twitter: profile.twitter,\n          facebook: profile.facebook,\n          linkedin: profile.linkedin,\n          youtube: profile.youtube,\n          instagram: profile.instagram\n        });\n      }\n    }\n  }, {\n    key: \"onSubmitHandler\",\n    value: function onSubmitHandler(e) {\n      e.preventDefault();\n      var profileData = {\n        handle: this.state.handle,\n        headline: this.state.headline,\n        company: this.state.company,\n        website: this.state.website,\n        country: this.state.country,\n        city: this.state.city,\n        status: this.state.status,\n        skills: this.state.skills,\n        githubusername: this.state.githubusername,\n        bio: this.state.bio,\n        twitter: this.state.twitter,\n        facebook: this.state.facebook,\n        linkedin: this.state.linkedin,\n        youtube: this.state.youtube,\n        instagram: this.state.instagram\n      };\n      this.setState({\n        submitPressed: true\n      }); // edit the profile\n\n      this.props.createProfile(profileData, this.props.history);\n    }\n  }, {\n    key: \"onChangeHandler\",\n    value: function onChangeHandler(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          displaySocialInputs = _this$state.displaySocialInputs,\n          displayPhotoUpload = _this$state.displayPhotoUpload;\n      console.log(this.props);\n      var socialInputs, photoUpload;\n\n      if (displaySocialInputs) {\n        socialInputs = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          placeholder: \"Twitter Profile URL\",\n          name: \"twitter\",\n          icon: \"fab fa-twitter\",\n          value: this.state.twitter,\n          onChange: this.onChangeHandler.bind(this),\n          error: errors.twitter,\n          inputClassNames: \"form__input form__input-sm form__input-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"Facebook Page URL\",\n          name: \"facebook\",\n          icon: \"fab fa-facebook\",\n          value: this.state.facebook,\n          onChange: this.onChangeHandler.bind(this),\n          error: errors.facebook,\n          inputClassNames: \"form__input form__input-sm form__input-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"Linkedin Profile URL\",\n          name: \"linkedin\",\n          icon: \"fab fa-linkedin\",\n          value: this.state.linkedin,\n          onChange: this.onChangeHandler.bind(this),\n          error: errors.linkedin,\n          inputClassNames: \"form__input form__input-sm form__input-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"YouTube Channel URL\",\n          name: \"youtube\",\n          icon: \"fab fa-youtube\",\n          value: this.state.youtube,\n          onChange: this.onChangeHandler.bind(this),\n          error: errors.youtube,\n          inputClassNames: \"form__input form__input-sm form__input-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }), React.createElement(InputGroup, {\n          placeholder: \"Instagram Page URL\",\n          name: \"instagram\",\n          icon: \"fab fa-instagram\",\n          value: this.state.instagram,\n          onChange: this.onChangeHandler.bind(this),\n          error: errors.instagram,\n          inputClassNames: \"form__input form__input-sm form__input-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        })); // end social inputs\n\n        if (displayPhotoUpload) {\n          photoUpload = React.createElement(FileUpload, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"createProfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"createProfile__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"heading-secondary heading-secondary--blue\",\n        style: {\n          fontSize: '1.5rem'\n        },\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \" Back to Dashboard \")), React.createElement(\"h2\", {\n        className: \"heading-secondary heading-secondary--blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Edit Your Profile\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \" * is a required field\")), React.createElement(\"form\", {\n        className: \"createProfile__form\",\n        onSubmit: this.onSubmitHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(TextFieldGroup, {\n        placeholder: \"* Your username/handle\",\n        name: \"handle\",\n        value: this.state.handle,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.handle,\n        info: \"A unique name for your profile URL. ie.name / business\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(SelectListGroup, {\n        placeholder: \"Status\",\n        name: \"status\",\n        value: this.state.status,\n        onChange: this.onChangeHandler.bind(this),\n        options: statusOptions,\n        error: errors.status,\n        info: \"How far are you in your career? *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Headline: i.e React developer at CraveJs\",\n        name: \"headline\",\n        value: this.state.headline,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.headline,\n        info: \"Insert attention grabbing headline *\",\n        cols: \"90\",\n        rows: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Company\",\n        name: \"company\",\n        value: this.state.company,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.company,\n        info: \"Your company or the one you work work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Website\",\n        name: \"website\",\n        value: this.state.website,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.website,\n        info: \"Your website or a company one\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Country\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.country,\n        info: \"Country *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"City\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.city,\n        info: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"* Skills\",\n        name: \"skills\",\n        value: this.state.skills,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.skills,\n        info: \"Please use comma separated values (eg.\\r HTML,CSS,JavaScript,PHP) *\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        placeholder: \"Github Username\",\n        name: \"githubusername\",\n        value: this.state.githubusername,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.githubusername,\n        info: \"If you want your latest repos and a Github link, include your username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Short Bio\",\n        name: \"bio\",\n        value: this.state.bio,\n        onChange: this.onChangeHandler.bind(this),\n        error: errors.bio,\n        info: \"Tell us a little about yourself\",\n        cols: \"90\",\n        rows: \"15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this2.setState(function (prevState) {\n            return {\n              displaySocialInputs: !prevState.displaySocialInputs\n            };\n          });\n        },\n        className: \"btn btn-2 btn--secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Add Social Network Links\"), React.createElement(\"span\", {\n        style: {\n          marginLeft: '1rem',\n          fontWeight: '600'\n        },\n        className: \"CreateProfile__options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Optional\")), socialInputs, React.createElement(\"div\", {\n        className: \"mb-3 createProfile__extras\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        ref: \"photo\",\n        onClick: function onClick() {\n          _this2.setState(function (prevState) {\n            return {\n              displayPhotoUpload: !prevState.displayPhotoUpload\n            };\n          });\n        },\n        className: \"btn btn-2 btn--secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Your Photo\"), React.createElement(\"span\", {\n        style: {\n          marginLeft: '1rem',\n          fontWeight: '600'\n        },\n        className: \"CreateProfile__options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Optional\")), photoUpload, React.createElement(\"input\", {\n        style: {\n          marginTop: '1rem',\n          padding: '1.5rem 4rem'\n        },\n        className: \"btn btn-2 btn--primary\",\n        type: \"submit\",\n        value: \"Finish Edits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditProfile;\n}(Component);\n\nEditProfile.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    profileErrors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createProfile: createProfile,\n  getCurrentProfile: getCurrentProfile\n})(withRouter(EditProfile));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\edit-profile\\EditProfile.js"],"names":["React","Component","connect","Link","withRouter","PropTypes","TextFieldGroup","TextAreaFieldGroup","InputGroup","SelectListGroup","createProfile","getCurrentProfile","isEmpty","FileUpload","statusOptions","EditProfile","displaySocialInputs","displayPhotoUpload","handle","headline","company","website","city","country","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","errors","submitPressed","props","nextProps","setState","profile","skillsCSV","join","social","e","preventDefault","profileData","state","history","target","name","value","console","log","socialInputs","photoUpload","onChangeHandler","bind","fontSize","onSubmitHandler","prevState","marginLeft","fontWeight","marginTop","padding","propTypes","object","isRequired","mapStateToProps","profileErrors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport InputGroup from '../common/InputGroup';\r\nimport SelectListGroup from '../common/SelectListGroup';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\r\nimport isEmpty from  '../../validation/is-empty';\r\nimport FileUpload from '../utils/form/FileUpload';\r\nimport { statusOptions } from '../create-profile/options/statusList';\r\n\r\n\r\nclass EditProfile extends Component {\r\n\r\n    state = {\r\n        displaySocialInputs: false,\r\n        displayPhotoUpload: false,\r\n        handle: '',\r\n        headline:'',\r\n        company: '',\r\n        website: '',\r\n        city: '',\r\n        country: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n        errors: {},\r\n        submitPressed:false\r\n      }\r\n  \r\n    componentDidMount() {\r\n        this.props.getCurrentProfile();\r\n     }\r\n  \r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    if(nextProps.profile.profile){\r\n        const profile = nextProps.profile.profile;\r\n             // Bring skills array back to CSV\r\n         const skillsCSV = profile.skills.join(',');\r\n\r\n        // If profile field doesnt exist, make empty string\r\n        profile.company = !isEmpty(profile.company) ? profile.company : '';\r\n        profile.headline = !isEmpty(profile.headline) ? profile.headline : '';\r\n        profile.website = !isEmpty(profile.website) ? profile.website : '';\r\n        profile.country = !isEmpty(profile.country) ? profile.country : '';\r\n        profile.city = !isEmpty(profile.city) ? profile.city : '';\r\n        profile.githubusername = !isEmpty(profile.githubusername)\r\n            ? profile.githubusername\r\n            : '';\r\n        profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\r\n        profile.social = !isEmpty(profile.social) ? profile.social : {};\r\n        profile.twitter = !isEmpty(profile.social.twitter)\r\n            ? profile.social.twitter\r\n            : '';\r\n        profile.facebook = !isEmpty(profile.social.facebook)\r\n            ? profile.social.facebook\r\n            : '';\r\n        profile.linkedin = !isEmpty(profile.social.linkedin)\r\n            ? profile.social.linkedin\r\n            : '';\r\n        profile.youtube = !isEmpty(profile.social.youtube)\r\n            ? profile.social.youtube\r\n            : '';\r\n        profile.instagram = !isEmpty(profile.social.instagram)\r\n            ? profile.social.instagram\r\n            : '';\r\n\r\n        // set component fields state.\r\n        this.setState({\r\n            handle: profile.handle,\r\n            headline: profile.headline,\r\n            company: profile.company,\r\n            website: profile.website,\r\n            country: profile.country,\r\n            city: profile.city,\r\n            status: profile.status,\r\n            skills: skillsCSV,\r\n            githubusername: profile.githubusername,\r\n            bio: profile.bio,\r\n            twitter: profile.twitter,\r\n            facebook: profile.facebook,\r\n            linkedin: profile.linkedin,\r\n            youtube: profile.youtube,\r\n            instagram:profile.instagram\r\n          });\r\n\r\n    }\r\n  }\r\n\r\n  onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    const profileData = {\r\n      handle: this.state.handle,\r\n      headline: this.state.headline,\r\n      company: this.state.company,\r\n      website: this.state.website,\r\n      country: this.state.country,\r\n      city: this.state.city,\r\n      status: this.state.status,\r\n      skills: this.state.skills,\r\n      githubusername: this.state.githubusername,\r\n      bio: this.state.bio,\r\n      twitter: this.state.twitter,\r\n      facebook: this.state.facebook,\r\n      linkedin: this.state.linkedin,\r\n      youtube: this.state.youtube,\r\n      instagram: this.state.instagram\r\n    };\r\n    this.setState({submitPressed:true});\r\n    // edit the profile\r\n\r\n      this.props.createProfile(profileData, this.props.history);\r\n    \r\n  }\r\n\r\n  onChangeHandler(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors, displaySocialInputs, displayPhotoUpload } = this.state;\r\n    console.log(this.props);\r\n    let socialInputs, photoUpload;\r\n    if (displaySocialInputs) {\r\n      socialInputs = (\r\n        <div>\r\n          <InputGroup\r\n            placeholder=\"Twitter Profile URL\"\r\n            name=\"twitter\"\r\n            icon=\"fab fa-twitter\"\r\n            value={this.state.twitter}\r\n            onChange={this.onChangeHandler.bind(this)}\r\n            error={errors.twitter}\r\n            inputClassNames = \"form__input form__input-sm form__input-white\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Facebook Page URL\"\r\n            name=\"facebook\"\r\n            icon=\"fab fa-facebook\"\r\n            value={this.state.facebook}\r\n            onChange={this.onChangeHandler.bind(this)}\r\n            error={errors.facebook}\r\n            inputClassNames = \"form__input form__input-sm form__input-white\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Linkedin Profile URL\"\r\n            name=\"linkedin\"\r\n            icon=\"fab fa-linkedin\"\r\n            value={this.state.linkedin}\r\n            onChange={this.onChangeHandler.bind(this)}\r\n            error={errors.linkedin}\r\n            inputClassNames = \"form__input form__input-sm form__input-white\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"YouTube Channel URL\"\r\n            name=\"youtube\"\r\n            icon=\"fab fa-youtube\"\r\n            value={this.state.youtube}\r\n            onChange={this.onChangeHandler.bind(this)}\r\n            error={errors.youtube}\r\n            inputClassNames = \"form__input form__input-sm form__input-white\"\r\n          />\r\n\r\n          <InputGroup\r\n            placeholder=\"Instagram Page URL\"\r\n            name=\"instagram\"\r\n            icon=\"fab fa-instagram\"\r\n            value={this.state.instagram}\r\n            onChange={this.onChangeHandler.bind(this)}\r\n            error={errors.instagram}\r\n            inputClassNames = \"form__input form__input-sm form__input-white\"\r\n          />\r\n        </div>\r\n\r\n      ); // end social inputs\r\n\r\n\r\n      if(displayPhotoUpload){\r\n        photoUpload = (\r\n            <FileUpload/>\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n          <div className=\"createProfile\">\r\n            <div className = \"createProfile__header\">\r\n            \r\n              <div>\r\n              <Link className = \"heading-secondary heading-secondary--blue\" style = {{fontSize:'1.5rem'}} to = \"/dashboard\"> Back to Dashboard </Link> \r\n              </div>\r\n                      \r\n              <h2 className = \"heading-secondary heading-secondary--blue\">Edit Your Profile</h2>\r\n              <div> * is a required field</div>\r\n            </div>\r\n             \r\n                <form className = \"createProfile__form\" onSubmit={this.onSubmitHandler.bind(this)}>\r\n                  <TextFieldGroup\r\n                    placeholder=\"* Your username/handle\"\r\n                    name=\"handle\"\r\n                    value={this.state.handle}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.handle}\r\n                    info=\"A unique name for your profile URL. ie.name / business\"\r\n                  />\r\n                  <SelectListGroup\r\n                    placeholder=\"Status\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    options={statusOptions}\r\n                    error={errors.status}\r\n                    info=\"How far are you in your career? *\"\r\n                  />\r\n                    <TextAreaFieldGroup\r\n                    placeholder=\"Headline: i.e React developer at CraveJs\"\r\n                    name=\"headline\"\r\n                    value={this.state.headline}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.headline}\r\n                    info=\"Insert attention grabbing headline *\"\r\n                    cols=\"90\"\r\n                    rows = \"3\"\r\n                  />\r\n                  <TextFieldGroup\r\n                    placeholder=\"Company\"\r\n                    name=\"company\"\r\n                    value={this.state.company}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.company}\r\n                    info=\"Your company or the one you work work\"\r\n                  />\r\n                  <TextFieldGroup\r\n                    placeholder=\"Website\"\r\n                    name=\"website\"\r\n                    value={this.state.website}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.website}\r\n                    info=\"Your website or a company one\"\r\n                  />\r\n                  <TextFieldGroup\r\n                    placeholder=\"Country\"\r\n                    name=\"country\"\r\n                    value={this.state.country}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.country}\r\n                    info=\"Country *\"\r\n                  />\r\n                  <TextFieldGroup\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    value={this.state.city}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.city}\r\n                    info=\"City\"\r\n                  />\r\n              \r\n                  <TextFieldGroup\r\n                    placeholder=\"* Skills\"\r\n                    name=\"skills\"\r\n                    value={this.state.skills}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.skills}\r\n                    info=\"Please use comma separated values (eg.\r\n                      HTML,CSS,JavaScript,PHP) *\"\r\n                  />\r\n                  <TextFieldGroup\r\n                    placeholder=\"Github Username\"\r\n                    name=\"githubusername\"\r\n                    value={this.state.githubusername}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.githubusername}\r\n                    info=\"If you want your latest repos and a Github link, include your username\"\r\n                  />\r\n                  <TextAreaFieldGroup\r\n                    placeholder=\"Short Bio\"\r\n                    name=\"bio\"\r\n                    value={this.state.bio}\r\n                    onChange={this.onChangeHandler.bind(this)}\r\n                    error={errors.bio}\r\n                    info=\"Tell us a little about yourself\"\r\n                    cols=\"90\"\r\n                    rows = \"15\"\r\n                  />\r\n\r\n                  <div className=\"mb-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.setState(prevState => ({\r\n                          displaySocialInputs: !prevState.displaySocialInputs\r\n                        }));\r\n                      }}\r\n                      className=\"btn btn-2 btn--secondary\"\r\n                    >\r\n                      Add Social Network Links\r\n                    </button>\r\n                    <span style = {{marginLeft: '1rem',fontWeight:'600'}} className = \"CreateProfile__options\" >Optional</span>\r\n                  </div>\r\n                  {socialInputs}\r\n\r\n                  <div className=\"mb-3 createProfile__extras\">\r\n                    <button\r\n                      type=\"button\"\r\n                      ref = \"photo\"\r\n                      onClick={() => {\r\n                        this.setState(prevState => ({\r\n                          displayPhotoUpload: !prevState.displayPhotoUpload\r\n                        }));\r\n                      }}\r\n                      className=\"btn btn-2 btn--secondary\"\r\n                    >\r\n                      Your Photo\r\n                    </button>\r\n                    <span style = {{marginLeft: '1rem',fontWeight:'600'}} className = \"CreateProfile__options\" >Optional</span>\r\n                  </div>\r\n                  {photoUpload}\r\n\r\n                  <input\r\n                    style = {{\r\n                      marginTop: '1rem',\r\n                      padding: '1.5rem 4rem'\r\n              \r\n                    }}\r\n                    className=\"btn btn-2 btn--primary\"\r\n                    type=\"submit\"\r\n                    value=\"Finish Edits\"\r\n                  />\r\n                </form>\r\n\r\n                {/* {\r\n                      this.state.submitPressed && errors ? \r\n                        <div className = \"createProfile__errors\" >Please fix the errors above</div>\r\n                      : null\r\n                } */}\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  profileErrors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile,getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}