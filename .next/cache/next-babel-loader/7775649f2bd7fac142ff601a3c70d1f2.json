{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport { addLike, removeLike, deletePost } from '../../actions/postActions';\nimport TimeAgo from 'react-timeago';\nimport PostEditForm from './PostEditForm';\nimport ReplyForm from './replies/ReplyForm';\nimport Replies from './replies/Replies';\nimport Modal from 'react-modal';\nvar customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,121,191,0.85)',\n    zIndex: '999'\n  },\n  content: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n    width: '80%',\n    zIndex: '1000'\n  }\n};\n\nvar PostItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostItem, _Component);\n\n  function PostItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showOptions: false,\n      showReplyOption: false,\n      modalIsOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openModal\", function () {\n      _this.setState({\n        modalIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"afterOpenModal\", function () {// references are now sync'd and can be accessed.\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        modalIsOpen: false,\n        showOptions: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLikeClick\", function (id) {\n      if (_this.findUserLike(_this.props.post.likes)) {\n        _this.props.removeLike(id);\n      } else {\n        _this.props.addLike(id);\n      }\n\n      _this.findUserLike(_this.props.post.likes);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToolBar\", function (id) {\n      _this.setState({\n        showOptions: !_this.state.showOptions\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReplyClick\", function (id) {\n      _this.setState({\n        showReplyOption: !_this.state.showReplyOption\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deletePostHandler\", function (id) {\n      _this.props.deletePost(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"findUserLike\", function (likes) {\n      var auth = _this.props.auth;\n\n      if (likes.filter(function (like) {\n        return like.user === auth.user.id;\n      }).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(PostItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Modal.setAppElement('body');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PostItem\",\n        style: {\n          backgroundColor: this.props.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.showOptions ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classnames('PostOptions', {\n          'PostOptions__disappear': this.state.modalIsOpen\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostOptions__editPost\",\n        onClick: this.openModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Edit Post\"), React.createElement(\"button\", {\n        className: \"PostOptions__deletePost\",\n        onClick: this.deletePostHandler.bind(this, post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Delete Post\")), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"PostEditFormModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(PostEditForm, {\n        postId: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))) : null, React.createElement(\"div\", {\n        className: \"PostItem__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"PostItem__name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, post.name), \" \", post.text, React.createElement(\"div\", {\n        className: \"PostItem__timeago\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(TimeAgo, {\n        live: false,\n        date: post.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PostItem__toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostItem__ellipses\",\n        onClick: this.onToolBar.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.showOptions ? React.createElement(FontAwesomeIcon, {\n        icon: \"times-circle\",\n        style: {\n          color: \"\".concat(this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'),\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }) : React.createElement(FontAwesomeIcon, {\n        icon: \"ellipsis-h\",\n        style: {\n          color: \"\".concat(this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'),\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PostItem__collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"PostItem__likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostItem__like\",\n        onClick: this.onLikeClick.bind(this, post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"thumbs-up\",\n        style: {\n          color: \"\".concat(this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'),\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(\"span\", {\n        className: \"PostItem__replies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostItem__reply\",\n        onClick: this.onReplyClick.bind(this, post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Reply\")), post.likes.length > 0 ? React.createElement(\"span\", {\n        className: \"PostItem__countLikesContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostItem__countLikes\",\n        onClick: this.onReplyClick.bind(this, post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, post.likes.length === 1 ? \"\".concat(post.likes.length, \" like\") : \"\".concat(post.likes.length, \" likes\"))) : null, post.replies.length > 0 ? React.createElement(\"span\", {\n        className: \"PostItem__showHideRepliesContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"PostItem__showHideReplies\",\n        onClick: this.onReplyClick.bind(this, post._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, post.replies.length, \" Replies\")) : null))), this.state.showReplyOption ? React.createElement(ReplyForm, {\n        postItem: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }) : null, post.replies.length > 0 ? React.createElement(\"div\", {\n        className: \"replies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"  \", React.createElement(Replies, {\n        backgroundColor: this.props.backgroundColor,\n        postItem: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), \"  \") : null);\n    }\n  }]);\n\n  return PostItem;\n}(Component);\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addLike: addLike,\n  removeLike: removeLike,\n  deletePost: deletePost\n})(PostItem);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\posts\\PostItem.js"],"names":["React","Component","PropTypes","connect","FontAwesomeIcon","classnames","addLike","removeLike","deletePost","TimeAgo","PostEditForm","ReplyForm","Replies","Modal","customStyles","overlay","backgroundColor","zIndex","content","position","top","left","right","bottom","marginRight","transform","width","PostItem","showOptions","showReplyOption","modalIsOpen","setState","id","findUserLike","props","post","likes","state","auth","filter","like","user","length","setAppElement","openModal","bind","deletePostHandler","_id","closeModal","name","text","date","onToolBar","color","cursor","onLikeClick","onReplyClick","replies","defaultProps","showActions","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classnames from 'classnames';\r\nimport { addLike, removeLike, deletePost } from '../../actions/postActions';\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport PostEditForm from './PostEditForm';\r\nimport ReplyForm from './replies/ReplyForm';\r\nimport Replies from './replies/Replies';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n \r\nconst customStyles = {\r\n    overlay:{\r\n        backgroundColor:'rgba(0,121,191,0.85)',\r\n        zIndex                :'999'\r\n    },\r\n    content : {\r\n      position              :'fixed',\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : 'rgba(255, 255, 255, 0.95)',\r\n      width                 :'80%',\r\n      zIndex                :'1000'\r\n    }\r\n  };\r\n\r\nclass PostItem extends Component {\r\n\r\n    state = {\r\n        showOptions:false,\r\n        showReplyOption:false,\r\n        modalIsOpen:false,\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() {\r\n        Modal.setAppElement('body');\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            modalIsOpen:true\r\n        })\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        // references are now sync'd and can be accessed.\r\n        \r\n      }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            showOptions:false\r\n        });\r\n      }\r\n\r\n    onLikeClick = (id) => {\r\n        if(this.findUserLike(this.props.post.likes)){\r\n            this.props.removeLike(id);\r\n        }\r\n        else {\r\n            this.props.addLike(id);\r\n        }\r\n       \r\n        this.findUserLike(this.props.post.likes);\r\n    }\r\n    onToolBar = (id) => {\r\n        this.setState({showOptions:!this.state.showOptions})\r\n    }\r\n    onReplyClick = (id) => {\r\n        this.setState({showReplyOption:!this.state.showReplyOption})\r\n    }\r\n\r\n    deletePostHandler = (id) => {\r\n        this.props.deletePost(id);\r\n      \r\n   }\r\n\r\n\r\n\r\n    findUserLike = (likes) => { \r\n      const { auth } = this.props;\r\n      if ( likes.filter( like => like.user === auth.user.id).length > 0) {\r\n        return true;\r\n      }\r\n      else {\r\n          return false\r\n      }\r\n    }\r\n\r\n    render() { \r\n        const { post } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n           \r\n            <div className = \"PostItem\" style = {{backgroundColor:this.props.backgroundColor}}>\r\n          \r\n                       {\r\n                           this.state.showOptions ?\r\n                        \r\n                                <div>\r\n                                        <div className= {classnames('PostOptions',{'PostOptions__disappear':this.state.modalIsOpen})} >\r\n                                            <button className = \"PostOptions__editPost\"  onClick={this.openModal.bind(this)}>Edit Post</button>\r\n                                            <button className = \"PostOptions__deletePost\" onClick={this.deletePostHandler.bind(this,post._id)}>Delete Post</button>\r\n                                        </div>\r\n                                    \r\n                                        <Modal\r\n                                        isOpen={this.state.modalIsOpen}\r\n                                        onRequestClose={this.closeModal}\r\n                                        style={customStyles}\r\n                                        contentLabel=\"PostEditFormModal\"\r\n                                        >\r\n                                            <PostEditForm postId = {post._id}/>\r\n                                        </Modal>\r\n                                </div>\r\n                     \r\n            \r\n                           \r\n                            \r\n                             : null   \r\n                       }  \r\n         \r\n                    \r\n                    <div className = \"PostItem__content\">\r\n\r\n                        <span className = \"PostItem__name\">{post.name}</span> {post.text}\r\n                        <div className = \"PostItem__timeago\" >\r\n                             <TimeAgo live = {false} date= { post.date }  />\r\n                        </div>\r\n                       \r\n\r\n                        \r\n                        <div className=\"PostItem__toolbar\" >\r\n\r\n                                <button className = \"PostItem__ellipses\" onClick = { this.onToolBar.bind(this) } >\r\n                                            {\r\n                                                this.state.showOptions ? \r\n                                                <FontAwesomeIcon\r\n                                                    icon=\"times-circle\"\r\n                                                    style = {{color:`${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                                 />\r\n                                             \r\n                                                :\r\n                                                <FontAwesomeIcon\r\n                                                    icon=\"ellipsis-h\"\r\n                                                    style = {{color:`${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                                />\r\n                                               \r\n                                            }\r\n                                            \r\n                                </button>  \r\n                        </div>\r\n                                \r\n                       \r\n\r\n                          <div className = \"PostItem__collection\">  \r\n                                <span className = \"PostItem__likes\">\r\n                                    <button className = \"PostItem__like\" onClick = {this.onLikeClick.bind(this,post._id)} >\r\n                                        <FontAwesomeIcon\r\n                                            icon=\"thumbs-up\"\r\n                                            style = {{color:`${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                        />\r\n                                    </button>\r\n                                </span> \r\n                                <span className = \"PostItem__replies\">\r\n                                    <button className = \"PostItem__reply\" onClick = {this.onReplyClick.bind(this,post._id)} >\r\n                                        Reply\r\n                                    </button>\r\n                                </span> \r\n                                {\r\n                                    post.likes.length > 0 ? \r\n                                    <span className = \"PostItem__countLikesContainer\">\r\n                                        <button className = \"PostItem__countLikes\" onClick = {this.onReplyClick.bind(this,post._id)} >\r\n                                        {post.likes.length === 1 ? `${post.likes.length} like` : `${post.likes.length} likes`}\r\n                                        </button>\r\n                                     </span> \r\n                                    :null\r\n                                }\r\n                               {\r\n                                   post.replies.length > 0 ? \r\n                                   <span className = \"PostItem__showHideRepliesContainer\">\r\n                                        <button className = \"PostItem__showHideReplies\" onClick = {this.onReplyClick.bind(this,post._id)} >\r\n                                        {post.replies.length} Replies\r\n                                        </button>\r\n                                    </span> \r\n                                   :null\r\n                               }\r\n                             \r\n                          </div>\r\n                    </div>    \r\n            </div>\r\n\r\n            {\r\n                this.state.showReplyOption ? <ReplyForm postItem = {post}/> : null\r\n            }\r\n\r\n            {\r\n                post.replies.length > 0 ? <div className = \"replies\">  <Replies backgroundColor = {this.props.backgroundColor} postItem = {post} />  </div>  : null\r\n            }\r\n        \r\n\r\n            </React.Fragment>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);"]},"metadata":{},"sourceType":"module"}