{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, GET_USER_CART, REMOVE_ITEM_FROM_USER_CART, CLEAR_USER_CART, GET_CURRENT_CART_TOTAL, CART_LOADING } from './types';\nexport const setCartLoading = () => {\n  return {\n    type: CART_LOADING\n  };\n}; // return a cart object with array of the user cart items.\n\nexport const getUserCart = () => dispatch => {\n  dispatch(setCartLoading());\n  axios.get('/api/users/current').then(res => {\n    dispatch({\n      type: GET_USER_CART,\n      payload: res.data.cart\n    });\n  }).catch(err => dispatch({\n    type: GET_USER_CART,\n    action: []\n  }));\n};\nexport const getCurrentCartTotal = () => dispatch => {\n  dispatch(setCartLoading());\n  axios.get('/api/users/currentTotal').then(res => {\n    dispatch({\n      type: GET_CURRENT_CART_TOTAL,\n      payload: res.data\n    });\n  }).catch(err => dispatch({\n    type: GET_CURRENT_CART_TOTAL,\n    action: {}\n  }));\n};\nexport const removeProductItemFromCart = id => dispatch => {\n  axios.post(`/api/product/remove/${id}`).then(res => {\n    dispatch({\n      type: REMOVE_ITEM_FROM_USER_CART,\n      payload: res.data.cart\n    });\n  }).then(res => dispatch(getUserCart())).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // remove all items from user cart\n\nexport const clearUserCart = () => dispatch => {\n  axios.post('/api/product/remove').then(res => dispatch({\n    type: CLEAR_USER_CART,\n    payload: []\n  })).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\cartActions.js"],"names":["axios","GET_ERRORS","GET_USER_CART","REMOVE_ITEM_FROM_USER_CART","CLEAR_USER_CART","GET_CURRENT_CART_TOTAL","CART_LOADING","setCartLoading","type","getUserCart","dispatch","get","then","res","payload","data","cart","catch","err","action","getCurrentCartTotal","removeProductItemFromCart","id","post","response","clearUserCart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,EACIC,0BADJ,EACgCC,eADhC,EAEIC,sBAFJ,EAGIC,YAHJ,QAIO,SAJP;AAOA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO;AACHC,IAAAA,IAAI,EAACF;AADF,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMG,WAAW,GAAG,MAAMC,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACAP,EAAAA,KAAK,CACAW,GADL,CACS,oBADT,EAEKC,IAFL,CAEWC,GAAG,IAAI;AACVH,IAAAA,QAAQ,CAAE;AACNF,MAAAA,IAAI,EAAEN,aADA;AAENY,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFZ,KAAF,CAAR;AAIH,GAPL,EAQKC,KARL,CAQaC,GAAG,IACRR,QAAQ,CAAE;AACNF,IAAAA,IAAI,EAAEN,aADA;AAENiB,IAAAA,MAAM,EAAE;AAFF,GAAF,CAThB;AAcH,CAhBM;AAiBP,OAAO,MAAMC,mBAAmB,GAAG,MAAMV,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACAP,EAAAA,KAAK,CACAW,GADL,CACS,yBADT,EAEKC,IAFL,CAEWC,GAAG,IAAI;AACVH,IAAAA,QAAQ,CAAE;AACNF,MAAAA,IAAI,EAAEH,sBADA;AAENS,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFP,KAAF,CAAR;AAIH,GAPL,EAQKE,KARL,CAQaC,GAAG,IACRR,QAAQ,CAAE;AACNF,IAAAA,IAAI,EAAEH,sBADA;AAENc,IAAAA,MAAM,EAAE;AAFF,GAAF,CAThB;AAcH,CAhBM;AAmBP,OAAO,MAAME,yBAAyB,GAAIC,EAAD,IAAQZ,QAAQ,IAAI;AAEzDV,EAAAA,KAAK,CACAuB,IADL,CACW,uBAAsBD,EAAG,EADpC,EAEKV,IAFL,CAEWC,GAAG,IAAI;AACVH,IAAAA,QAAQ,CAAE;AACNF,MAAAA,IAAI,EAAEL,0BADA;AAENW,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFZ,KAAF,CAAR;AAIH,GAPL,EAQKJ,IARL,CAQYC,GAAG,IAAIH,QAAQ,CAACD,WAAW,EAAZ,CAR3B,EASKQ,KATL,CASYC,GAAG,IAAI;AACXR,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAEP,UADC;AAEPa,MAAAA,OAAO,EAAEI,GAAG,CAACM,QAAJ,CAAaT;AAFf,KAAD,CAAR;AAIF,GAdN;AAeH,CAjBM,C,CAkBP;;AACA,OAAO,MAAMU,aAAa,GAAG,MAAMf,QAAQ,IAAI;AAC3CV,EAAAA,KAAK,CACAuB,IADL,CACU,qBADV,EAEKX,IAFL,CAEWC,GAAG,IACNH,QAAQ,CAAE;AACNF,IAAAA,IAAI,EAAEJ,eADA;AAENU,IAAAA,OAAO,EAAE;AAFH,GAAF,CAHhB,EAQKG,KARL,CAQYC,GAAG,IAAI;AACXR,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAEP,UADC;AAEPa,MAAAA,OAAO,EAAEI,GAAG,CAACM,QAAJ,CAAaT;AAFf,KAAD,CAAR;AAIF,GAbN;AAcH,CAfM","sourcesContent":["import axios from 'axios';\r\nimport { GET_ERRORS, GET_USER_CART,\r\n    REMOVE_ITEM_FROM_USER_CART, CLEAR_USER_CART,\r\n    GET_CURRENT_CART_TOTAL,\r\n    CART_LOADING \r\n} from './types';\r\n\r\n\r\nexport const setCartLoading = () => {\r\n    return {\r\n        type:CART_LOADING\r\n    }\r\n}\r\n\r\n// return a cart object with array of the user cart items.\r\nexport const getUserCart = () => dispatch => {\r\n    dispatch(setCartLoading())\r\n    axios\r\n        .get('/api/users/current')\r\n        .then( res => {\r\n            dispatch ({\r\n                type: GET_USER_CART,\r\n                payload: res.data.cart\r\n            })\r\n        })\r\n        .catch ( err => \r\n            dispatch ({\r\n                type: GET_USER_CART,\r\n                action: []\r\n            })\r\n        )\r\n}\r\nexport const getCurrentCartTotal = () => dispatch => {\r\n    dispatch(setCartLoading())\r\n    axios\r\n        .get('/api/users/currentTotal')\r\n        .then( res => {\r\n            dispatch ({\r\n                type: GET_CURRENT_CART_TOTAL,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch ( err => \r\n            dispatch ({\r\n                type: GET_CURRENT_CART_TOTAL,\r\n                action: {}\r\n            })\r\n        )\r\n}\r\n\r\n\r\nexport const removeProductItemFromCart = (id) => dispatch => {\r\n\r\n    axios\r\n        .post(`/api/product/remove/${id}`)\r\n        .then( res => {\r\n            dispatch ({\r\n                type: REMOVE_ITEM_FROM_USER_CART,\r\n                payload: res.data.cart\r\n            })\r\n        })\r\n        .then ( res => dispatch(getUserCart()) )\r\n        .catch( err => {\r\n            dispatch({\r\n              type: GET_ERRORS,\r\n              payload: err.response.data\r\n            })\r\n         })\r\n}\r\n// remove all items from user cart\r\nexport const clearUserCart = () => dispatch => {\r\n    axios\r\n        .post('/api/product/remove')\r\n        .then( res => \r\n            dispatch ({\r\n                type: CLEAR_USER_CART,\r\n                payload: []\r\n            })\r\n        )\r\n        .catch( err => {\r\n            dispatch({\r\n              type: GET_ERRORS,\r\n              payload: err.response.data\r\n            })\r\n         })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}