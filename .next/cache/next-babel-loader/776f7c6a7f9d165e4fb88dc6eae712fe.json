{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\order\\\\UserOrderId.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getOrder } from '../../actions/orderActions';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from '../../validation/is-empty';\nimport moment from 'moment';\nimport LoadingSpinner from '../utils/LoadingSpinner';\n\nclass UserOrderId extends Component {\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (id) {\n      this.props.getOrder(id);\n    }\n  }\n\n  render() {\n    const {\n      order,\n      loading\n    } = this.props.order;\n    const {\n      products\n    } = this.props.order.order;\n\n    if (loading || isEmpty(products)) {\n      return React.createElement(\"div\", {\n        className: \"orders__loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Loading Order\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Try reloading page if loading persists...\"), React.createElement(LoadingSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"UserOrderId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"UserOrderId__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" Purchase Summary \"), React.createElement(\"div\", {\n        className: \"UserOrderId__price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Order Id: \", order._id), React.createElement(\"div\", {\n        className: \"UserOrderId__price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Total Price: $\", order.totalPrice), React.createElement(\"div\", {\n        className: \"UserOrderId__quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Total Quantity: \", order.totalQuantity), React.createElement(\"div\", {\n        className: \"UserOrderId__orderDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Order Date: \", moment.utc(order.orderDate).local().format(\"MMMM Do YYYY, h:mm a\"))), React.createElement(\"div\", {\n        className: \"UserOrderId__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Products Purchased \"), products.map(product => React.createElement(\"div\", {\n        key: product.product._id,\n        className: \"UserOrderId__product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"UserOrderId__product-a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"UserOrderId__product-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, product.product.name), React.createElement(\"div\", {\n        className: \"UserOrderId__product-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Product price: $\", product.product.price), React.createElement(\"div\", {\n        className: \"UserOrderId__product-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Quantity: \", product.quantity), React.createElement(\"div\", {\n        className: \"UserOrderId__product-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"figure\", {\n        className: \"UserOrderId__product-b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: product.product.imageUrl,\n        alt: product.product.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  order: state.order\n});\n\nexport default connect(mapStateToProps, {\n  getOrder\n})(withRouter(UserOrderId));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\order\\UserOrderId.js"],"names":["React","Component","connect","getOrder","withRouter","isEmpty","moment","LoadingSpinner","UserOrderId","componentDidMount","id","props","match","params","render","order","loading","products","fontSize","_id","totalPrice","totalQuantity","utc","orderDate","local","format","map","product","name","price","quantity","imageUrl","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getOrder } from '../../actions/orderActions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport isEmpty from '../../validation/is-empty';\r\nimport moment from 'moment';\r\nimport LoadingSpinner from '../utils/LoadingSpinner';\r\n\r\nclass UserOrderId extends Component {\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        if(id){\r\n            this.props.getOrder(id);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { order,loading } = this.props.order;\r\n        const { products } = this.props.order.order;\r\n\r\n        if(loading || isEmpty(products)) {\r\n            return (\r\n                <div className = \"orders__loading\">\r\n                    <div>\r\n                        Loading Order\r\n                    </div>\r\n                    <div>Try reloading page if loading persists...</div>\r\n                    <LoadingSpinner/>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className = \"UserOrderId\">\r\n                    <div className = \"UserOrderId__main\" >\r\n                    <div style = {{fontSize: '2rem'}}> Purchase Summary </div>\r\n                        <div className=\"UserOrderId__price\">Order Id: {order._id}</div>\r\n                        <div className=\"UserOrderId__price\">Total Price: ${order.totalPrice}</div>\r\n                        <div className=\"UserOrderId__quantity\">Total Quantity: {order.totalQuantity}</div>\r\n                        <div className=\"UserOrderId__orderDate\">Order Date: {moment.utc(order.orderDate).local().format(\"MMMM Do YYYY, h:mm a\")}</div>\r\n                    </div>\r\n                    \r\n                 \r\n                    <div className=\"UserOrderId__main\">\r\n                            <div style = {{fontSize: '2rem'}}> Products Purchased </div>\r\n                            {\r\n                                products.map(product => (\r\n                                    <div key = {product.product._id} className=\"UserOrderId__product\">\r\n                                    <div className=\"UserOrderId__product-a\">\r\n                                        <div className=\"UserOrderId__product-1\">{product.product.name}</div>\r\n                                        <div className=\"UserOrderId__product-3\">Product price: ${product.product.price}</div>\r\n                                        <div className=\"UserOrderId__product-2\">Quantity: {product.quantity}</div>\r\n                                        <div className=\"UserOrderId__product-4\"></div>\r\n                                    </div>\r\n\r\n                                    <figure className=\"UserOrderId__product-b\">\r\n                                            <img src= {product.product.imageUrl} alt={product.product.name}/>\r\n                                    </figure>\r\n\r\n                                        \r\n                                    </div>\r\n                                   \r\n                                ))\r\n                            }\r\n                              \r\n                    </div>\r\n    \r\n                </div>\r\n            );   \r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    order: state.order\r\n})\r\n\r\nexport default connect( mapStateToProps, { getOrder } )(withRouter(UserOrderId));"]},"metadata":{},"sourceType":"module"}