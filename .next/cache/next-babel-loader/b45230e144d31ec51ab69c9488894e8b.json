{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\posts\\\\replies\\\\Replies.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReplyItem from './ReplyItem';\nimport { getPost } from '../../../actions/postActions';\n\nvar Replies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Replies, _Component);\n\n  function Replies() {\n    _classCallCheck(this, Replies);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Replies).apply(this, arguments));\n  }\n\n  _createClass(Replies, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props$postItem = this.props.postItem,\n          replies = _this$props$postItem.replies,\n          _id = _this$props$postItem._id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, replies.map(function (reply) {\n        return React.createElement(ReplyItem, {\n          key: reply._id,\n          reply: reply,\n          postId: _id,\n          backgroundColor: _this.props.backgroundColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Replies;\n}(Component);\n\nReplies.propTypes = {\n  getPost: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost: getPost\n})(Replies);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\posts\\replies\\Replies.js"],"names":["React","Component","PropTypes","connect","ReplyItem","getPost","Replies","props","postItem","replies","_id","map","reply","backgroundColor","propTypes","func","isRequired","mapStateToProps","state","post"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;IAEMC,O;;;;;;;;;;;;;6BAGO;AAAA;;AAAA,iCAEwB,KAAKC,KAAL,CAAWC,QAFnC;AAAA,UAEOC,OAFP,wBAEOA,OAFP;AAAA,UAEgBC,GAFhB,wBAEgBA,GAFhB;AAGL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKD,OAAO,CAACE,GAAR,CAAY,UAAAC,KAAK;AAAA,eACV,oBAAC,SAAD;AACI,UAAA,GAAG,EAAIA,KAAK,CAACF,GADjB;AAEI,UAAA,KAAK,EAAIE,KAFb;AAGI,UAAA,MAAM,EAAIF,GAHd;AAII,UAAA,eAAe,EAAI,KAAI,CAACH,KAAL,CAAWM,eAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA,OAAjB,CAFL,CADJ;AAeH;;;;EArBiBZ,S;;AAwBtBK,OAAO,CAACQ,SAAR,GAAoB;AAChBT,EAAAA,OAAO,EAAEH,SAAS,CAACa,IAAV,CAAeC;AADR,CAApB;;AAKE,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADoB,GAAL;AAAA,CAA7B;;AAIF,eAAehB,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA,OAAO,EAAPA;AAAF,CAAlB,CAAP,CAAsCC,OAAtC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ReplyItem from './ReplyItem';\r\nimport { getPost } from '../../../actions/postActions';\r\n\r\nclass Replies extends Component {        \r\n\r\n    \r\n    render() {\r\n            \r\n            const { replies, _id } = this.props.postItem;\r\n        return (\r\n            <React.Fragment>\r\n             {\r\n                 replies.map(reply => (\r\n                        <ReplyItem \r\n                            key = {reply._id}\r\n                            reply = {reply}\r\n                            postId = {_id}\r\n                            backgroundColor = {this.props.backgroundColor}\r\n                        />\r\n                ))\r\n            }\r\n            </React.Fragment>\r\n               \r\n        );\r\n    }\r\n}\r\n\r\nReplies.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n   \r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    post: state.post\r\n  });\r\n\r\nexport default connect(mapStateToProps, { getPost })(Replies);\r\n"]},"metadata":{},"sourceType":"module"}