{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport { addLike, removeLike, deletePost } from '../../actions/postActions';\nimport TimeAgo from 'react-timeago';\nimport PostEditForm from './PostEditForm';\nimport ReplyForm from './replies/ReplyForm';\nimport Replies from './replies/Replies';\nimport Modal from 'react-modal';\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,121,191,0.85)',\n    zIndex: '999'\n  },\n  content: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n    width: '80%',\n    zIndex: '1000'\n  }\n};\n\nclass PostItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showOptions: false,\n      showReplyOption: false,\n      modalIsOpen: false\n    });\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        modalIsOpen: true\n      });\n    });\n\n    _defineProperty(this, \"afterOpenModal\", () => {// references are now sync'd and can be accessed.\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        modalIsOpen: false,\n        showOptions: false\n      });\n    });\n\n    _defineProperty(this, \"onLikeClick\", id => {\n      if (this.findUserLike(this.props.post.likes)) {\n        this.props.removeLike(id);\n      } else {\n        this.props.addLike(id);\n      }\n\n      this.findUserLike(this.props.post.likes);\n    });\n\n    _defineProperty(this, \"onToolBar\", id => {\n      this.setState({\n        showOptions: !this.state.showOptions\n      });\n    });\n\n    _defineProperty(this, \"onReplyClick\", id => {\n      this.setState({\n        showReplyOption: !this.state.showReplyOption\n      });\n    });\n\n    _defineProperty(this, \"deletePostHandler\", id => {\n      this.props.deletePost(id);\n    });\n\n    _defineProperty(this, \"findUserLike\", likes => {\n      const {\n        auth\n      } = this.props;\n\n      if (likes.filter(like => like.user === auth.user.id).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    const {\n      post\n    } = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PostItem\",\n      style: {\n        backgroundColor: this.props.backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.showOptions ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('PostOptions', {\n        'PostOptions__disappear': this.state.modalIsOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostOptions__editPost\",\n      onClick: this.openModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Edit Post\"), React.createElement(\"button\", {\n      className: \"PostOptions__deletePost\",\n      onClick: this.deletePostHandler.bind(this, post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Delete Post\")), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: this.closeModal,\n      style: customStyles,\n      contentLabel: \"PostEditFormModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(PostEditForm, {\n      postId: post._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))) : null, React.createElement(\"div\", {\n      className: \"PostItem__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"PostItem__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, post.name), \" \", post.text, React.createElement(\"div\", {\n      className: \"PostItem__timeago\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(TimeAgo, {\n      live: false,\n      date: post.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PostItem__toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__ellipses\",\n      onClick: this.onToolBar.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.showOptions ? React.createElement(FontAwesomeIcon, {\n      icon: \"times-circle\",\n      style: {\n        color: `${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      icon: \"ellipsis-h\",\n      style: {\n        color: `${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"PostItem__collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"PostItem__likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__like\",\n      onClick: this.onLikeClick.bind(this, post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"thumbs-up\",\n      style: {\n        color: `${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"PostItem__replies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__reply\",\n      onClick: this.onReplyClick.bind(this, post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Reply\")), post.likes.length > 0 ? React.createElement(\"span\", {\n      className: \"PostItem__countLikesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__countLikes\",\n      onClick: this.onReplyClick.bind(this, post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, post.likes.length === 1 ? `${post.likes.length} like` : `${post.likes.length} likes`)) : null, post.replies.length > 0 ? React.createElement(\"span\", {\n      className: \"PostItem__showHideRepliesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__showHideReplies\",\n      onClick: this.onReplyClick.bind(this, post._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, post.replies.length, \" Replies\")) : null))), this.state.showReplyOption ? React.createElement(ReplyForm, {\n      postItem: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }) : null, post.replies.length > 0 ? React.createElement(\"div\", {\n      className: \"replies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"  \", React.createElement(Replies, {\n      backgroundColor: this.props.backgroundColor,\n      postItem: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), \"  \") : null);\n  }\n\n}\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\posts\\PostItem.js"],"names":["React","Component","PropTypes","connect","FontAwesomeIcon","classnames","addLike","removeLike","deletePost","TimeAgo","PostEditForm","ReplyForm","Replies","Modal","customStyles","overlay","backgroundColor","zIndex","content","position","top","left","right","bottom","marginRight","transform","width","PostItem","showOptions","showReplyOption","modalIsOpen","setState","id","findUserLike","props","post","likes","state","auth","filter","like","user","length","componentDidMount","setAppElement","render","openModal","bind","deletePostHandler","_id","closeModal","name","text","date","onToolBar","color","cursor","onLikeClick","onReplyClick","replies","defaultProps","showActions","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classnames from 'classnames';\r\nimport { addLike, removeLike, deletePost } from '../../actions/postActions';\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport PostEditForm from './PostEditForm';\r\nimport ReplyForm from './replies/ReplyForm';\r\nimport Replies from './replies/Replies';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n \r\nconst customStyles = {\r\n    overlay:{\r\n        backgroundColor:'rgba(0,121,191,0.85)',\r\n        zIndex                :'999'\r\n    },\r\n    content : {\r\n      position              :'fixed',\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : 'rgba(255, 255, 255, 0.95)',\r\n      width                 :'80%',\r\n      zIndex                :'1000'\r\n    }\r\n  };\r\n\r\nclass PostItem extends Component {\r\n\r\n    state = {\r\n        showOptions:false,\r\n        showReplyOption:false,\r\n        modalIsOpen:false,\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() {\r\n        Modal.setAppElement('body');\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            modalIsOpen:true\r\n        })\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        // references are now sync'd and can be accessed.\r\n        \r\n      }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            showOptions:false\r\n        });\r\n      }\r\n\r\n    onLikeClick = (id) => {\r\n        if(this.findUserLike(this.props.post.likes)){\r\n            this.props.removeLike(id);\r\n        }\r\n        else {\r\n            this.props.addLike(id);\r\n        }\r\n       \r\n        this.findUserLike(this.props.post.likes);\r\n    }\r\n    onToolBar = (id) => {\r\n        this.setState({showOptions:!this.state.showOptions})\r\n    }\r\n    onReplyClick = (id) => {\r\n        this.setState({showReplyOption:!this.state.showReplyOption})\r\n    }\r\n\r\n    deletePostHandler = (id) => {\r\n        this.props.deletePost(id);\r\n      \r\n   }\r\n\r\n\r\n\r\n    findUserLike = (likes) => { \r\n      const { auth } = this.props;\r\n      if ( likes.filter( like => like.user === auth.user.id).length > 0) {\r\n        return true;\r\n      }\r\n      else {\r\n          return false\r\n      }\r\n    }\r\n\r\n    render() { \r\n        const { post } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n           \r\n            <div className = \"PostItem\" style = {{backgroundColor:this.props.backgroundColor}}>\r\n          \r\n                       {\r\n                           this.state.showOptions ?\r\n                        \r\n                                <div>\r\n                                        <div className= {classnames('PostOptions',{'PostOptions__disappear':this.state.modalIsOpen})} >\r\n                                            <button className = \"PostOptions__editPost\"  onClick={this.openModal.bind(this)}>Edit Post</button>\r\n                                            <button className = \"PostOptions__deletePost\" onClick={this.deletePostHandler.bind(this,post._id)}>Delete Post</button>\r\n                                        </div>\r\n                                    \r\n                                        <Modal\r\n                                        isOpen={this.state.modalIsOpen}\r\n                                        onRequestClose={this.closeModal}\r\n                                        style={customStyles}\r\n                                        contentLabel=\"PostEditFormModal\"\r\n                                        >\r\n                                            <PostEditForm postId = {post._id}/>\r\n                                        </Modal>\r\n                                </div>\r\n                     \r\n            \r\n                           \r\n                            \r\n                             : null   \r\n                       }  \r\n         \r\n                    \r\n                    <div className = \"PostItem__content\">\r\n\r\n                        <span className = \"PostItem__name\">{post.name}</span> {post.text}\r\n                        <div className = \"PostItem__timeago\" >\r\n                             <TimeAgo live = {false} date= { post.date }  />\r\n                        </div>\r\n                       \r\n\r\n                        \r\n                        <div className=\"PostItem__toolbar\" >\r\n\r\n                                <button className = \"PostItem__ellipses\" onClick = { this.onToolBar.bind(this) } >\r\n                                            {\r\n                                                this.state.showOptions ? \r\n                                                <FontAwesomeIcon\r\n                                                    icon=\"times-circle\"\r\n                                                    style = {{color:`${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                                 />\r\n                                             \r\n                                                :\r\n                                                <FontAwesomeIcon\r\n                                                    icon=\"ellipsis-h\"\r\n                                                    style = {{color:`${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                                />\r\n                                               \r\n                                            }\r\n                                            \r\n                                </button>  \r\n                        </div>\r\n                                \r\n                       \r\n\r\n                          <div className = \"PostItem__collection\">  \r\n                                <span className = \"PostItem__likes\">\r\n                                    <button className = \"PostItem__like\" onClick = {this.onLikeClick.bind(this,post._id)} >\r\n                                        <FontAwesomeIcon\r\n                                            icon=\"thumbs-up\"\r\n                                            style = {{color:`${this.findUserLike(post.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                        />\r\n                                    </button>\r\n                                </span> \r\n                                <span className = \"PostItem__replies\">\r\n                                    <button className = \"PostItem__reply\" onClick = {this.onReplyClick.bind(this,post._id)} >\r\n                                        Reply\r\n                                    </button>\r\n                                </span> \r\n                                {\r\n                                    post.likes.length > 0 ? \r\n                                    <span className = \"PostItem__countLikesContainer\">\r\n                                        <button className = \"PostItem__countLikes\" onClick = {this.onReplyClick.bind(this,post._id)} >\r\n                                        {post.likes.length === 1 ? `${post.likes.length} like` : `${post.likes.length} likes`}\r\n                                        </button>\r\n                                     </span> \r\n                                    :null\r\n                                }\r\n                               {\r\n                                   post.replies.length > 0 ? \r\n                                   <span className = \"PostItem__showHideRepliesContainer\">\r\n                                        <button className = \"PostItem__showHideReplies\" onClick = {this.onReplyClick.bind(this,post._id)} >\r\n                                        {post.replies.length} Replies\r\n                                        </button>\r\n                                    </span> \r\n                                   :null\r\n                               }\r\n                             \r\n                          </div>\r\n                    </div>    \r\n            </div>\r\n\r\n            {\r\n                this.state.showReplyOption ? <ReplyForm postItem = {post}/> : null\r\n            }\r\n\r\n            {\r\n                post.replies.length > 0 ? <div className = \"replies\">  <Replies backgroundColor = {this.props.backgroundColor} postItem = {post} />  </div>  : null\r\n            }\r\n        \r\n\r\n            </React.Fragment>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);"]},"metadata":{},"sourceType":"module"}