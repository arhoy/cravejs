{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileEditForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport { getProfileComment, editComment } from '../../actions/profileActions';\nimport PropTypes from 'prop-types';\n\nvar ProfileEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileEditForm, _Component);\n\n  function ProfileEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: '' // errors:{}\n      // when getProfileComment Updates, setState from reducer.\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeHandler\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmitHandler\", function (e) {\n      e.preventDefault();\n      var handle = _this.props.profile.profile.handle;\n      var commentId = _this.props.commentId;\n      var user = _this.props.auth.user;\n      var editComment = {\n        text: _this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n      console.log('I was submited', handle, editComment, commentId);\n\n      _this.props.editComment(handle, commentId, editComment); // it will look for commentId in the backend\n\n\n      _this.setState({\n        text: ''\n      }); // close the modal\n\n\n      setTimeout(function () {\n        _this.props.handler();\n      }, 600);\n    });\n\n    return _this;\n  }\n\n  _createClass(ProfileEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.handle) {\n        var handle = this.props.match.params.handle;\n        console.log(handle);\n        console.log(this.props);\n        this.props.getProfileComment(handle, this.props.commentId);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.text === \"\" && this.props.profile.comment.text !== \"\") {\n        // check conditions, set the state\n        this.setState({\n          text: this.props.profile.comment.text\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const {errors} = this.state;\n      return React.createElement(\"div\", {\n        className: \"PostEditForm\",\n        style: {\n          zIndex: 1000\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"PostEditForm__form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.onSubmitHandler(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form__group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(TextAreaFieldGroup, {\n        placeholder: \"Edit post\",\n        name: \"text\",\n        value: this.state.text,\n        onChange: function onChange(e) {\n          return _this2.onChangeHandler(e);\n        } //  error={errors.text}\n        ,\n        className: \"form__textarea form__textarea-grey\",\n        rows: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"PostEditForm__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Save Edits\")));\n    }\n  }]);\n\n  return ProfileEditForm;\n}(Component);\n\nProfileEditForm.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileComment: getProfileComment,\n  editComment: editComment\n})(withRouter(ProfileEditForm));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\ProfileEditForm.js"],"names":["React","Component","connect","withRouter","TextAreaFieldGroup","getProfileComment","editComment","PropTypes","ProfileEditForm","text","e","setState","target","name","value","preventDefault","handle","props","profile","commentId","user","auth","state","avatar","console","log","setTimeout","handler","match","params","prevProps","prevState","comment","zIndex","onSubmitHandler","onChangeHandler","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport { getProfileComment, editComment } from '../../actions/profileActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProfileEditForm extends Component {\r\n    componentDidMount() {\r\n   \r\n        if(this.props.match.params.handle){\r\n            const {handle} = this.props.match.params;\r\n            console.log(handle);\r\n            console.log(this.props);\r\n             this.props.getProfileComment(handle,this.props.commentId);\r\n        }\r\n       \r\n    }\r\n    \r\n    state = {\r\n        text: '',\r\n       // errors:{}\r\n    }\r\n    // when getProfileComment Updates, setState from reducer.\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevState.text === \"\" && this.props.profile.comment.text !== \"\"){\r\n            // check conditions, set the state\r\n            this.setState({\r\n                text: this.props.profile.comment.text\r\n            })\r\n        }\r\n     \r\n    }\r\n    \r\n      \r\n    \r\n    onChangeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { handle } = this.props.profile.profile;\r\n    \r\n        const {commentId} = this.props;\r\n        const { user } = this.props.auth;\r\n        const editComment = {\r\n            text: this.state.text,\r\n            name: user.name,\r\n            avatar: user.avatar\r\n        }\r\n        console.log('I was submited',handle,editComment,commentId);\r\n         this.props.editComment(handle,commentId,editComment); // it will look for commentId in the backend\r\n        this.setState({text:''});\r\n\r\n        // close the modal\r\n        setTimeout(()=>{\r\n            this.props.handler();\r\n        },600 )\r\n      \r\n        \r\n    }\r\n    \r\n    \r\n    render() {\r\n       // const {errors} = this.state;\r\n    \r\n        return (\r\n    \r\n            <div className = \"PostEditForm\" style = {{zIndex: 1000}}>\r\n               <form className = \"PostEditForm__form\" onSubmit={ (e)=> this.onSubmitHandler(e) }>\r\n                  <div className=\"form__group\">\r\n                    <TextAreaFieldGroup\r\n                      placeholder=\"Edit post\"\r\n                      name=\"text\"\r\n                      value={this.state.text}\r\n                      onChange={ (e)=> this.onChangeHandler(e)}\r\n                    //  error={errors.text}\r\n                      className = \"form__textarea form__textarea-grey\"\r\n                      rows = {5}\r\n                    />\r\n                  </div>\r\n                    <button type=\"submit\" className=\"PostEditForm__button\">\r\n                        Save Edits\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nProfileEditForm.propTypes = {\r\n     auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    profile: state.profile\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps,{ getProfileComment,editComment })(withRouter(ProfileEditForm));"]},"metadata":{},"sourceType":"module"}