{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\searchResults\\\\searchResults.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport LoadingSpinner from '../utils/LoadingSpinner';\n\nconst SearchResults = ({\n  search: {\n    loading,\n    searchResults,\n    error,\n    query\n  },\n  history\n}) => {\n  const goToLink = url => {\n    const link = url.replace(/^http:\\/\\//i, 'https://').replace(\"https://www.cravejs.com/\", \"/\");\n    history.push(link);\n  };\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"SearchResults__summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" \", React.createElement(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), \" \");\n\n  if (searchResults) {\n    return error && error.msg ? React.createElement(\"div\", {\n      className: \"SearchResults__summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" Oops could not find what you were looking for \") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, searchResults.length > 0 ? React.createElement(\"div\", {\n      className: \"SearchResults__summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"There are \", searchResults.length, \" results for \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" \", query, \" \")) : React.createElement(\"div\", {\n      className: \"SearchResults__summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Please start searching at the top\"), React.createElement(\"div\", {\n      className: \"SearchResults\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SearchResults__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, searchResults && searchResults.map((result, i) => React.createElement(\"div\", {\n      onClick: goToLink.bind(this, result.link),\n      className: \"SearchResults__link\",\n      to: result.link,\n      key: `${i} - ${result.title}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", result.title, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", result.snippet, \"  \"))))), React.createElement(\"div\", {\n      className: \"SearchResults__message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" Still haven't find what you are looking for? Try the explore option above \"));\n  }\n};\n\nconst mapStateToProps = state => ({\n  search: state.search\n});\n\nexport default connect(mapStateToProps)(withRouter(SearchResults));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\searchResults\\searchResults.js"],"names":["React","Fragment","connect","withRouter","LoadingSpinner","SearchResults","search","loading","searchResults","error","query","history","goToLink","url","link","replace","push","msg","length","map","result","i","bind","title","snippet","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,MAAM,EAAE;AAACC,IAAAA,OAAD;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,GAAT;AAAiDC,EAAAA;AAAjD,CAAD,KAA+D;AAEjF,QAAMC,QAAQ,GAAGC,GAAG,IAAI;AACpB,UAAMC,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAY,aAAZ,EAA2B,UAA3B,EAAuCA,OAAvC,CAA+C,0BAA/C,EAA0E,GAA1E,CAAb;AAEAJ,IAAAA,OAAO,CAACK,IAAR,CAAaF,IAAb;AACH,GAJD;;AAKA,MAAKP,OAAL,EAAe,OAAS;AAAK,IAAA,SAAS,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2C,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C,MAAT;;AAEf,MAAGC,aAAH,EAAiB;AAEb,WACQC,KAAK,IAAIA,KAAK,CAACQ,GAAf,GACA;AAAK,MAAA,SAAS,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADA,GAGA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQT,aAAa,CAACU,MAAd,GAAuB,CAAvB,GACI;AAAK,MAAA,SAAS,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYV,aAAa,CAACU,MAD1B,mBAC+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUR,KAAV,MAD/C,CADJ,GAII;AAAK,MAAA,SAAS,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAPZ,EAUA;AAAK,MAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,aAAa,IAAIA,aAAa,CAACW,GAAd,CAAmB,CAACC,MAAD,EAAQC,CAAR,KAClC;AAAK,MAAA,OAAO,EAAKT,QAAQ,CAACU,IAAT,CAAc,IAAd,EAAmBF,MAAM,CAACN,IAA1B,CAAjB;AAAmD,MAAA,SAAS,EAAG,qBAA/D;AAAqF,MAAA,EAAE,EAAIM,MAAM,CAACN,IAAlG;AAAwG,MAAA,GAAG,EAAK,GAAEO,CAAE,MAAKD,MAAM,CAACG,KAAM,EAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOH,MAAM,CAACG,KAAd,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKH,MAAM,CAACI,OAAZ,OAFJ,CADe,CADnB,CADJ,CAVA,EAoBA;AAAK,MAAA,SAAS,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFApBA,CAJR;AA4BH;AACJ,CAxCD;;AA0CA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BpB,EAAAA,MAAM,EAAEoB,KAAK,CAACpB;AADgB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAAEuB,eAAF,CAAP,CAA2BtB,UAAU,CAACE,aAAD,CAArC,CAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LoadingSpinner from '../utils/LoadingSpinner';\r\n\r\nconst SearchResults = ({search: {loading, searchResults, error, query}, history}) => {\r\n    \r\n    const goToLink = url => {\r\n        const link = url.replace(/^http:\\/\\//i, 'https://').replace(\"https://www.cravejs.com/\",\"/\");\r\n       \r\n        history.push(link);\r\n    }\r\n    if ( loading ) return   <div className = \"SearchResults__summary\"> <LoadingSpinner/> </div>; \r\n\r\n    if(searchResults){\r\n\r\n        return (\r\n                error && error.msg ? \r\n                <div className = \"SearchResults__summary\"> Oops could not find what you were looking for </div> :\r\n\r\n                <Fragment>\r\n                    \r\n                    { \r\n                        searchResults.length > 0 ? \r\n                            <div className = \"SearchResults__summary\">\r\n                            There are { searchResults.length } results for <strong> {query} </strong> \r\n                            </div> : \r\n                            <div className = \"SearchResults__summary\">Please start searching at the top</div>\r\n                    }\r\n                  \r\n                <div className = \"SearchResults\">  \r\n                    <div className = \"SearchResults__list\">\r\n                    { searchResults && searchResults.map( (result,i) => (\r\n                        <div onClick = { goToLink.bind(this,result.link) } className = \"SearchResults__link\" to = {result.link} key = {`${i} - ${result.title}`} > \r\n                            <h4> { result.title } </h4>\r\n                            <p> {result.snippet}  </p>\r\n                        </div>\r\n                    )) }\r\n                    </div>\r\n                </div>\r\n                <div className = \"SearchResults__message\"> Still haven't find what you are looking for? Try the explore option above </div>\r\n                </Fragment>\r\n               \r\n        )      \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    search: state.search\r\n})\r\n\r\nexport default connect( mapStateToProps )(withRouter(SearchResults))\r\n"]},"metadata":{},"sourceType":"module"}