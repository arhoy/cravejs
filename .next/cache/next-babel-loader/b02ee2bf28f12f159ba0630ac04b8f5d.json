{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { GET_ARTICLE, GET_ARTICLES } from '../actions/types';\nexport var getArticle = function getArticle(id) {\n  return function (dispatch) {\n    //  dispatch(setArticleLoading());\n    axios.get(\"/api/articles/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_ARTICLE,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ARTICLE,\n        payload: null\n      });\n    });\n  };\n};\nexport var getArticleByModelAndSlug = function getArticleByModelAndSlug(contentType, slugName) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/api/articles/\".concat(contentType, \"/\").concat(slugName));\n\n              case 3:\n                res = _context.sent;\n                dispatch({\n                  type: GET_ARTICLE,\n                  payload: res.data\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('there was an error with the getArticleByModelAndSlug action', _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getArticleByModel = function getArticleByModel(model) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"/api/articles/model/\".concat(model));\n\n              case 3:\n                res = _context2.sent;\n                dispatch({\n                  type: GET_ARTICLE,\n                  payload: res.data\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error('there was an error with the getArticleByModel action', _context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getArticles = function getArticles(query) {\n  return function (dispatch) {\n    axios.get(\"/api/articles\".concat(query)).then(function (res) {\n      return dispatch({\n        type: GET_ARTICLES,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ARTICLES,\n        payload: null\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\articleActions.js"],"names":["axios","GET_ARTICLE","GET_ARTICLES","getArticle","id","dispatch","get","then","res","type","payload","data","err","getArticleByModelAndSlug","contentType","slugName","console","error","getArticleByModel","model","getArticles","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,EAAE;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC1C;AACAL,IAAAA,KAAK,CACFM,GADH,yBACwBF,EADxB,GAEGG,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPH,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,WADC;AAEPS,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CADD;AAAA,KAFX,WAQS,UAAAC,GAAG;AAAA,aACRP,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,WADC;AAEPS,QAAAA,OAAO,EAAE;AAFF,OAAD,CADA;AAAA,KARZ;AAcD,GAhB2B;AAAA,CAArB;AAkBP,OAAO,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,WAAD,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA2B,iBAAMV,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAG3CL,KAAK,CAACM,GAAN,yBAA2BQ,WAA3B,cAA0CC,QAA1C,EAH2C;;AAAA;AAGvDP,gBAAAA,GAHuD;AAI7DH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAER,WADC;AAEPS,kBAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,iBAAD,CAAR;AAJ6D;AAAA;;AAAA;AAAA;AAAA;AAS3DK,gBAAAA,OAAO,CAACC,KAAR,CAAc,6DAAd;;AAT2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjC;AAaP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMd,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEhBL,KAAK,CAACM,GAAN,+BAAiCa,KAAjC,EAFgB;;AAAA;AAE5BX,gBAAAA,GAF4B;AAIlCH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAER,WADC;AAEPS,kBAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,iBAAD,CAAR;AAJkC;AAAA;;AAAA;AAAA;AAAA;AASpCK,gBAAAA,OAAO,CAACC,KAAR,CAAc,sDAAd;;AAToC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;AAaP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,UAAAhB,QAAQ,EAAI;AAC9CL,IAAAA,KAAK,CACFM,GADH,wBACuBe,KADvB,GAEGd,IAFH,CAEQ,UAAAC,GAAG;AAAA,aACPH,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,YADC;AAEPQ,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CADD;AAAA,KAFX,WAQS,UAAAC,GAAG;AAAA,aACRP,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,YADC;AAEPQ,QAAAA,OAAO,EAAE;AAFF,OAAD,CADA;AAAA,KARZ;AAcD,GAf+B;AAAA,CAAzB","sourcesContent":["import axios from 'axios';\r\n\r\nimport { GET_ARTICLE, GET_ARTICLES } from '../actions/types';\r\n\r\nexport const getArticle = id => dispatch => {\r\n  //  dispatch(setArticleLoading());\r\n  axios\r\n    .get(`/api/articles/${id}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_ARTICLE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ARTICLE,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\nexport const getArticleByModelAndSlug = (contentType, slugName) => async dispatch => {\r\n   \r\n    try {\r\n      const res = await axios.get(`/api/articles/${contentType}/${slugName}`);\r\n      dispatch({\r\n        type: GET_ARTICLE,\r\n        payload: res.data\r\n      })\r\n    } catch (error) {\r\n        console.error('there was an error with the getArticleByModelAndSlug action', error);\r\n    }\r\n}\r\n\r\nexport const getArticleByModel = model => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/articles/model/${model}`);\r\n\r\n        dispatch({\r\n          type: GET_ARTICLE,\r\n          payload: res.data\r\n        })\r\n    } catch (error) {\r\n      console.error('there was an error with the getArticleByModel action', error);\r\n    }\r\n}\r\n\r\nexport const getArticles = query => dispatch => {\r\n  axios\r\n    .get(`/api/articles${query}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_ARTICLES,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ARTICLES,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}