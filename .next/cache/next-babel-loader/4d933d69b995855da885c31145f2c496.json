{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\resume\\\\Resume.js\";\nimport React, { Component } from 'react';\nimport { getResumes } from '../../actions/resumeActions';\nimport { connect } from 'react-redux';\nimport LoadingSpinner from '../utils/LoadingSpinner';\n\nvar Resume =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Resume, _Component);\n\n  function Resume() {\n    _classCallCheck(this, Resume);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Resume).apply(this, arguments));\n  }\n\n  _createClass(Resume, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getResumes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$resume = this.props.resume,\n          resumes = _this$props$resume.resumes,\n          loading = _this$props$resume.loading; //  console.log(resumes);\n\n      return React.createElement(\"div\", {\n        className: \"Resume\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, loading ? React.createElement(\"div\", {\n        className: \"Resume__loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Resume__loading-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Fetching your files\"), React.createElement(\"div\", {\n        className: \"Resume__loading-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Try reloading page if loading persists...\"), React.createElement(\"div\", {\n        className: \"Resume__loading-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(LoadingSpinner, {\n        bgColor: \"#0079BF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"Resume__uploads\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, resumes.map(function (resume) {\n        console.log(resume);\n        var indexStart = resume.public_id.lastIndexOf('/');\n        var displayName = resume.public_id.substring(indexStart + 1, resume.public_id.length); // display like this if image file\n\n        if (resume.format === 'png' || resume.format === 'jpg' || resume.format === 'jpeg') {\n          return React.createElement(\"div\", {\n            className: \"Resume__image\",\n            key: resume.public_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"\",\n            src: resume.url,\n            alt: displayName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }));\n        } // provide as url link;\n        else {\n            return React.createElement(\"div\", {\n              className: \"Resume__containerLink\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              className: \"Resume__link\",\n              href: resume.url,\n              target: \"_blank\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }, \" \", displayName, \" \"));\n          }\n      })));\n    }\n  }]);\n\n  return Resume;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    resume: state.resume\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getResumes: getResumes\n})(Resume);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\resume\\Resume.js"],"names":["React","Component","getResumes","connect","LoadingSpinner","Resume","props","resume","resumes","loading","map","console","log","indexStart","public_id","lastIndexOf","displayName","substring","length","format","url","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;IAEMC,M;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWJ,UAAX;AACH;;;6BAEQ;AAAA,+BACwB,KAAKI,KAAL,CAAWC,MADnC;AAAA,UACGC,OADH,sBACGA,OADH;AAAA,UACYC,OADZ,sBACYA,OADZ,EAEN;;AACC,aACI;AACI,QAAA,SAAS,EAAG,QADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIQA,OAAO,GAEP;AAAK,QAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADR,EAIQ;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAJR,EAKQ;AAAK,QAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,OAAO,EAAG,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALR,CAFO,GAgBP;AAAK,QAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGID,OAAO,CAACE,GAAR,CAAY,UAAAH,MAAM,EAAI;AAClBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,YAAMM,UAAU,GAAGN,MAAM,CAACO,SAAP,CAAiBC,WAAjB,CAA6B,GAA7B,CAAnB;AACA,YAAMC,WAAW,GAAGT,MAAM,CAACO,SAAP,CAAiBG,SAAjB,CAA2BJ,UAAU,GAAG,CAAxC,EAA2CN,MAAM,CAACO,SAAP,CAAiBI,MAA5D,CAApB,CAHkB,CAIlB;;AACA,YAAGX,MAAM,CAACY,MAAP,KAAkB,KAAlB,IAA4BZ,MAAM,CAACY,MAAP,KAAkB,KAA9C,IAAuDZ,MAAM,CAACY,MAAP,KAAkB,MAA5E,EAAoF;AAChF,iBACI;AAAK,YAAA,SAAS,EAAG,eAAjB;AAAkC,YAAA,GAAG,EAAIZ,MAAM,CAACO,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAG,EAAjB;AACI,YAAA,GAAG,EAAEP,MAAM,CAACa,GADhB;AACqB,YAAA,GAAG,EAAEJ,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAQH,SATD,CAUA;AAVA,aAWK;AACD,mBAEQ;AAAK,cAAA,SAAS,EAAG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAG,cAAA,SAAS,EAAG,cAAf;AAA8B,cAAA,IAAI,EAAET,MAAM,CAACa,GAA3C;AAAgD,cAAA,MAAM,EAAG,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoEJ,WAApE,MADJ,CAFR;AAOH;AACJ,OAzBD,CAHJ,CApBR,CADJ;AAuDH;;;;EA/DgBf,S;;AAiErB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9Bf,IAAAA,MAAM,EAAEe,KAAK,CAACf;AADgB,GAAL;AAAA,CAA7B;;AAGA,eAAeJ,OAAO,CAACkB,eAAD,EAAkB;AAACnB,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCG,MAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { getResumes } from '../../actions/resumeActions';\r\nimport { connect } from 'react-redux';\r\nimport LoadingSpinner from '../utils/LoadingSpinner';\r\n\r\nclass Resume extends Component {\r\n    componentDidMount() {\r\n        this.props.getResumes();\r\n    }\r\n    \r\n    render() {\r\n        const { resumes, loading } = this.props.resume;\r\n       //  console.log(resumes);\r\n        return (\r\n            <div \r\n                className = \"Resume\" \r\n            >\r\n                {\r\n                    loading \r\n                    ? \r\n                    <div className = \"Resume__loading\">\r\n                            <div className = \"Resume__loading-1\">\r\n                                Fetching your files\r\n                            </div>\r\n                            <div className = \"Resume__loading-2\">Try reloading page if loading persists...</div>\r\n                            <div className = \"Resume__loading-3\">\r\n                                <LoadingSpinner\r\n                                    bgColor = '#0079BF'\r\n                                />\r\n                            </div>\r\n                           \r\n                    </div>\r\n                    :  \r\n                \r\n                    <div className = \"Resume__uploads\">\r\n               \r\n                        {\r\n                        resumes.map(resume => {\r\n                            console.log(resume);\r\n                            const indexStart = resume.public_id.lastIndexOf('/');\r\n                            const displayName = resume.public_id.substring(indexStart + 1, resume.public_id.length);\r\n                            // display like this if image file\r\n                            if(resume.format === 'png'  || resume.format === 'jpg' || resume.format === 'jpeg') {\r\n                                return (\r\n                                    <div className = \"Resume__image\"  key = {resume.public_id}> \r\n                                        <img className = \"\"\r\n                                            src={resume.url} alt={displayName}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                                \r\n                            }\r\n                            // provide as url link;\r\n                            else {\r\n                                return (\r\n             \r\n                                        <div className = \"Resume__containerLink\" >\r\n                                            <a className = \"Resume__link\" href={resume.url} target = \"_blank\"> {displayName} </a>\r\n                                        </div>\r\n    \r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                    </div>    \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    resume: state.resume\r\n})\r\nexport default connect(mapStateToProps, {getResumes})(Resume);"]},"metadata":{},"sourceType":"module"}