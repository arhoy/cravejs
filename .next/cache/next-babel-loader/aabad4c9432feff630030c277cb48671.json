{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\developers\\\\Developers.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/profileActions';\nimport LoadingSpinner from '../utils/LoadingSpinner';\nimport Developer from './Developer';\n\nclass Developers extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      filteredProfiles: [],\n      keyword: '',\n      profiles: []\n    });\n\n    _defineProperty(this, \"inputChangeHandler\", e => {\n      const keyword = e.target.value;\n      const filteredProfiles = this.state.profiles.filter(profile => {\n        if (!profile.handle) {\n          profile.handle = '';\n        }\n\n        if (!profile.user) {\n          profile.user = {};\n          profile.user.name = '';\n        }\n\n        if (!profile.headline) {\n          profile.headline = '';\n        }\n\n        return profile.handle.toLowerCase().includes(keyword.toLowerCase().trim()) || profile.user.name.toLowerCase().includes(keyword.toLowerCase().trim()) || profile.headline.toLowerCase().includes(keyword.toLowerCase().trim());\n      });\n      this.setState({\n        filteredProfiles,\n        keyword\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getProfiles();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.profile.profiles !== this.props.profile.profiles) {\n      this.setState({\n        profiles: this.props.profile.profiles\n      });\n    }\n  }\n\n  render() {\n    const {\n      profiles,\n      filteredProfiles\n    } = this.state;\n\n    if (!profiles || profiles.length < 1) {\n      return React.createElement(\"div\", {\n        className: \"products__loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Getting Network of Developers\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Try reloading page if loading persists...\"), React.createElement(LoadingSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    } else {\n      const developersToLoop = this.state.keyword === '' ? profiles : filteredProfiles;\n      return React.createElement(\"div\", {\n        style: {\n          gridColumn: '1/-1',\n          padding: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.inputChangeHandler,\n        className: \"products__input\",\n        type: \"text\",\n        placeholder: \"Search for profiles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.keyword !== '' && this.state.filteredProfiles.length === 0 ? React.createElement(\"div\", {\n        className: \"products__noResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" Sorry, no results found!  \") : developersToLoop.map(developer => {\n        if (developer.user) {\n          return React.createElement(Developer, {\n            key: developer._id,\n            name: developer.user.name,\n            avatar: developer.user.avatar,\n            handle: developer.handle,\n            headline: developer.headline,\n            skills: developer.skills,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          });\n        }\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Developers);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\developers\\Developers.js"],"names":["React","Component","connect","getProfiles","LoadingSpinner","Developer","Developers","filteredProfiles","keyword","profiles","e","target","value","state","filter","profile","handle","user","name","headline","toLowerCase","includes","trim","setState","componentDidMount","props","componentDidUpdate","prevProps","render","length","developersToLoop","gridColumn","padding","inputChangeHandler","map","developer","_id","avatar","skills","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../actions/profileActions';\r\nimport LoadingSpinner from '../utils/LoadingSpinner';\r\nimport Developer from './Developer';\r\n\r\n\r\nclass Developers extends Component {\r\n    state = {\r\n        filteredProfiles: [],\r\n        keyword: '',\r\n        profiles: []\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.getProfiles();\r\n        \r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.profile.profiles !== this.props.profile.profiles){\r\n  \r\n            this.setState({profiles: this.props.profile.profiles})\r\n        }\r\n      \r\n    }\r\n    inputChangeHandler = (e) => {\r\n        const keyword = e.target.value;\r\n        \r\n        const filteredProfiles = this.state.profiles.filter(profile => {\r\n            if(!profile.handle) {\r\n                profile.handle = '';\r\n            }\r\n            if(!profile.user){\r\n                profile.user = {}\r\n                profile.user.name = '';\r\n            }\r\n            if(!profile.headline){\r\n                profile.headline = '';\r\n            }\r\n            return (\r\n                profile.handle.toLowerCase().includes(keyword.toLowerCase().trim()) ||\r\n                profile.user.name.toLowerCase().includes(keyword.toLowerCase().trim()) ||\r\n                profile.headline.toLowerCase().includes(keyword.toLowerCase().trim()) \r\n            )\r\n        })\r\n       this.setState({filteredProfiles,keyword});\r\n    }\r\n    \r\n    \r\n    render() {\r\n\r\n        const { profiles,filteredProfiles } = this.state;\r\n        if( !profiles || profiles.length < 1 ) {\r\n            return (\r\n                <div className = \"products__loading\">\r\n                    <div>\r\n                        Getting Network of Developers\r\n                    </div>\r\n                    <div>Try reloading page if loading persists...</div>\r\n                    <LoadingSpinner/>\r\n                </div>\r\n            ) \r\n        }\r\n        else {\r\n            const developersToLoop = this.state.keyword === '' ? profiles : filteredProfiles\r\n            return (\r\n                <div style = {{gridColumn:'1/-1',padding:'2rem'}}>\r\n                    <input onChange = { this.inputChangeHandler } className = \"products__input\" type=\"text\" placeholder = \"Search for profiles\"/>\r\n                    <div className = \"products\">\r\n                    {\r\n                        this.state.keyword !== '' && this.state.filteredProfiles.length === 0 ? \r\n                            <div className = \"products__noResults\"> Sorry, no results found!  </div>\r\n                        :\r\n                        developersToLoop.map(developer=> {\r\n                            if(developer.user){\r\n                                return (\r\n                                    <Developer\r\n                                        key = { developer._id }\r\n                                        name = { developer.user.name }\r\n                                        avatar = { developer.user.avatar }\r\n                                        handle = { developer.handle }\r\n                                        headline = { developer.headline }\r\n                                        skills = {developer.skills}\r\n                                    />\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n               \r\n            );\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\nexport default connect(mapStateToProps , { getProfiles })(Developers);"]},"metadata":{},"sourceType":"module"}