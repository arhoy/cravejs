{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { Component } from 'react';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser, clearErrors } from '../../actions/authActions';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      password: '',\n      errors: {}\n    });\n\n    _defineProperty(this, \"onChangeHandler\", e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n\n    this.props.clearErrors();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.errors !== state.errors) {\n      return {\n        errors: props.errors\n      };\n    }\n\n    if (props.auth.isAuthenticated) {\n      // props.history.push('/dashboard');\n      if (props.location.state && props.location.state.from) {\n        const pathTo = props.location.state.from.pathname || '/dashboard';\n        props.history.push(pathTo);\n      } else {\n        props.history.push('/dashboard');\n      }\n    }\n\n    return null;\n  }\n\n  onSubmitHandler(e) {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData, this.props.history);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"section\", {\n      className: \"section-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.onSubmitHandler(e),\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"u-margin-bottom-medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"heading-secondary\",\n      style: {\n        color: '#333',\n        fontWeight: '200'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Login to your account\")), React.createElement(TextFieldGroup, {\n      placeholder: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeHandler.bind(this),\n      error: errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.onChangeHandler.bind(this),\n      error: errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn--primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Sign In\"))), React.createElement(\"p\", {\n      className: \"form__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Don't have an account yet? Create one \", React.createElement(Link, {\n      className: \"form__link\",\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Here \"))))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser,\n  clearErrors\n})(withRouter(Login));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\auth\\Login.js"],"names":["React","Component","TextFieldGroup","PropTypes","withRouter","connect","loginUser","clearErrors","Link","Login","email","password","errors","e","preventDefault","setState","target","name","value","componentDidMount","props","auth","isAuthenticated","history","push","getDerivedStateFromProps","state","location","from","pathTo","pathname","onSubmitHandler","userData","render","color","fontWeight","onChangeHandler","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser ,clearErrors } from '../../actions/authActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n \r\n    state = {\r\n          email: '',\r\n          password: '',\r\n          errors: {}\r\n    \r\n      }\r\n\r\n    componentDidMount() {\r\n        if(this.props.auth.isAuthenticated){\r\n            this.props.history.push('/dashboard');\r\n        }\r\n        this.props.clearErrors();\r\n    }\r\n    \r\n\r\n    static getDerivedStateFromProps (props, state) {\r\n        if(props.errors !== state.errors) {\r\n        return {errors: props.errors}\r\n        }\r\n        if (props.auth.isAuthenticated) {\r\n            // props.history.push('/dashboard');\r\n            if(props.location.state && props.location.state.from) {\r\n                const pathTo = props.location.state.from.pathname || '/dashboard';\r\n                props.history.push(pathTo);\r\n            } else {\r\n                props.history.push('/dashboard');\r\n            }\r\n          }\r\n        return null;\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n        const userData = {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        };\r\n    \r\n         this.props.loginUser(userData, this.props.history);\r\n\r\n      }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n        return (\r\n            <section className=\"section-login\">\r\n                <div className=\"row\">\r\n                    <div className=\"login\">\r\n                        <div className=\"login__form\">\r\n                            <form onSubmit = { (e) => this.onSubmitHandler(e) } className=\"form\">\r\n                            <div className=\"u-margin-bottom-medium\">\r\n                                <h2 className = \"heading-secondary\" style = {{color:'#333',fontWeight: '200'}} >\r\n                                    Login to your account\r\n                                </h2>\r\n                            </div>\r\n\r\n                            <TextFieldGroup\r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                type = \"email\"\r\n                                value={this.state.email}\r\n                                onChange = {this.onChangeHandler.bind(this)} \r\n                                error={errors.email}\r\n                            />\r\n\r\n                            <TextFieldGroup\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                type = \"password\"\r\n                                value={this.state.password}\r\n                                onChange = {this.onChangeHandler.bind(this)} \r\n                                error={errors.password}\r\n                            />\r\n                            \r\n\r\n                            <div className=\"form__group\">\r\n                                <button type = \"submit\" className=\"btn btn--primary\">Sign In</button>\r\n                            </div>\r\n                        </form>\r\n                        <p className = \"form__info\"> Don't have an account yet? Create one <Link className = \"form__link\" to = \"/register\"> Here </Link></p>\r\n                      </div>\r\n                   </div>\r\n                </div>\r\n        </section>\r\n        );\r\n    }\r\n}\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n  });\r\n\r\nexport default connect(mapStateToProps, { loginUser, clearErrors })(withRouter(Login));"]},"metadata":{},"sourceType":"module"}