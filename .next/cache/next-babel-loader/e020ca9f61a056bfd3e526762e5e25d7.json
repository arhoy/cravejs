{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\replies\\\\ReplyEditForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\nimport { addEditPostReply, getReply } from '../../../actions/postActions';\nimport PropTypes from 'prop-types';\n\nclass ReplyEditForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      text: '' // errors:{}\n\n    });\n\n    _defineProperty(this, \"onChangeHandler\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmitHandler\", e => {\n      e.preventDefault();\n      const {\n        replyId,\n        postId\n      } = this.props;\n      const {\n        user\n      } = this.props.auth;\n      const dataToSubmit = {\n        text: this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n      console.log('I was submited', dataToSubmit, replyId);\n      this.props.addEditPostReply(postId, replyId, dataToSubmit); // it will look for replyId in the backend\n\n      this.setState({\n        text: ''\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    const {\n      replyId,\n      postId\n    } = this.props;\n    this.props.getReply(postId, replyId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (nextProps.errors) {\n    //   this.setState({ errors: nextProps.errors });\n    // }\n    console.log('These are the next props', nextProps);\n\n    if (nextProps.post.post) {\n      const post = nextProps.post.post[0]; // set component fields state.\n\n      this.setState({\n        text: post.text\n      });\n    }\n  }\n\n  render() {\n    // const {errors} = this.state;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"PostEditForm\",\n      style: {\n        zIndex: 1000\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"PostEditForm__form\",\n      onSubmit: e => this.onSubmitHandler(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form__group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Edit post\",\n      name: \"text\",\n      value: this.state.text,\n      onChange: e => this.onChangeHandler(e) //  error={errors.text}\n      ,\n      className: \"form__textarea form__textarea-grey\",\n      rows: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"PostEditForm__button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Save Edits\")));\n  }\n\n}\n\nReplyEditForm.propTypes = {\n  auth: PropTypes.object.isRequired,\n  addEditPostReply: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  addEditPostReply,\n  getReply\n})(withRouter(ReplyEditForm));","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\replies\\ReplyEditForm.js"],"names":["React","Component","connect","withRouter","TextAreaFieldGroup","addEditPostReply","getReply","PropTypes","ReplyEditForm","text","e","setState","target","name","value","preventDefault","replyId","postId","props","user","auth","dataToSubmit","state","avatar","console","log","componentDidMount","componentWillReceiveProps","nextProps","post","render","zIndex","onSubmitHandler","onChangeHandler","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport TextAreaFieldGroup from '../../common/TextAreaFieldGroup';\r\nimport { addEditPostReply,getReply } from '../../../actions/postActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ReplyEditForm extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        const {replyId, postId} = this.props;\r\n        this.props.getReply(postId,replyId);\r\n    }\r\n    \r\n    state = {\r\n        text: ''\r\n       // errors:{}\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        // if (nextProps.errors) {\r\n        //   this.setState({ errors: nextProps.errors });\r\n        // }\r\n        console.log('These are the next props',nextProps);\r\n        if(nextProps.post.post){\r\n            const post = nextProps.post.post[0];\r\n\r\n            // set component fields state.\r\n            this.setState({\r\n                text: post.text\r\n              });\r\n    \r\n        }\r\n      }\r\n      \r\n    \r\n    onChangeHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { replyId, postId } = this.props;\r\n        const { user } = this.props.auth;\r\n        const dataToSubmit = {\r\n            text: this.state.text,\r\n            name: user.name,\r\n            avatar: user.avatar\r\n        }\r\n        console.log('I was submited',dataToSubmit,replyId);\r\n         this.props.addEditPostReply(postId,replyId,dataToSubmit); // it will look for replyId in the backend\r\n        this.setState({text:''});\r\n    \r\n        \r\n    }\r\n    \r\n    \r\n    render() {\r\n       // const {errors} = this.state;\r\n       console.log(this.props);\r\n\r\n        return (\r\n    \r\n            <div className = \"PostEditForm\" style = {{zIndex: 1000}}>\r\n               <form className = \"PostEditForm__form\" onSubmit={ (e)=> this.onSubmitHandler(e) }>\r\n                  <div className=\"form__group\">\r\n                    <TextAreaFieldGroup\r\n                      placeholder=\"Edit post\"\r\n                      name=\"text\"\r\n                      value={this.state.text}\r\n                      onChange={ (e)=> this.onChangeHandler(e)}\r\n                    //  error={errors.text}\r\n                      className = \"form__textarea form__textarea-grey\"\r\n                      rows = {5}\r\n                    />\r\n                  </div>\r\n                    <button type=\"submit\" className=\"PostEditForm__button\">\r\n                        Save Edits\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nReplyEditForm.propTypes = {\r\n     auth: PropTypes.object.isRequired,\r\n     addEditPostReply:PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    post: state.post\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps,{ addEditPostReply,  getReply })(withRouter(ReplyEditForm));"]},"metadata":{},"sourceType":"module"}