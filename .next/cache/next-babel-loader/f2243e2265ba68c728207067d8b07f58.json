{"ast":null,"code":"import axios from 'axios';\nimport { GOOGLE_SEARCH, GOOGLE_SEARCH_ERROR, CLEAR_GOOGLE_SEARCH } from './types';\nexport const googleCustomSearch = query => async dispatch => {\n  try {\n    const res = await axios.get(`/api/gcse/${query}`);\n\n    if (res === null || res === [] || res === '') {\n      dispatch({\n        type: GOOGLE_SEARCH_ERROR,\n        payload: {\n          msg: 'No Search Results'\n        }\n      });\n    } else {\n      dispatch({\n        type: GOOGLE_SEARCH,\n        payload: {\n          searchResults: res.data,\n          query: query\n        }\n      });\n    }\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GOOGLE_SEARCH_ERROR,\n      payload: {\n        msg: 'Oops, could not find what you were searching for!'\n      }\n    });\n  }\n};\nexport const clearGoogleCustomSearch = () => dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_GOOGLE_SEARCH\n    });\n  } catch (error) {\n    console.error('Could not clear the search results', error);\n  }\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\searchActions.js"],"names":["axios","GOOGLE_SEARCH","GOOGLE_SEARCH_ERROR","CLEAR_GOOGLE_SEARCH","googleCustomSearch","query","dispatch","res","get","type","payload","msg","searchResults","data","error","console","clearGoogleCustomSearch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,mBAA7C,QAAwE,SAAxE;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,KAAK,IAAI,MAAMC,QAAN,IAAkB;AAEzD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,aAAYH,KAAM,EAA7B,CAAlB;;AACA,QAAGE,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,EAAxB,IAA8BA,GAAG,KAAK,EAAzC,EAA4C;AACxCD,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEP,mBADD;AAELQ,QAAAA,OAAO,EAAE;AAACC,UAAAA,GAAG,EAAE;AAAN;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO;AACHL,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAER,aADD;AAELS,QAAAA,OAAO,EAAE;AACLE,UAAAA,aAAa,EAACL,GAAG,CAACM,IADb;AAELR,UAAAA,KAAK,EAACA;AAFD;AAFJ,OAAD,CAAR;AAOH;AAEJ,GAjBD,CAiBE,OAAOS,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAR,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,mBADD;AAELQ,MAAAA,OAAO,EAAE;AAACC,QAAAA,GAAG,EAAE;AAAN;AAFJ,KAAD,CAAR;AAIH;AACJ,CA1BM;AA4BP,OAAO,MAAMK,uBAAuB,GAAG,MAAMV,QAAQ,IAAI;AACrD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAGH,GAJD,CAIE,OAAOW,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,oCAAd,EAAoDA,KAApD;AACH;AACJ,CARM","sourcesContent":["import axios from 'axios';\r\nimport { GOOGLE_SEARCH, GOOGLE_SEARCH_ERROR, CLEAR_GOOGLE_SEARCH } from './types';\r\n\r\nexport const googleCustomSearch = query => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/gcse/${query}`);\r\n        if(res === null || res === [] || res === ''){\r\n            dispatch({\r\n                type: GOOGLE_SEARCH_ERROR,\r\n                payload: {msg: 'No Search Results'}\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: GOOGLE_SEARCH,\r\n                payload: {\r\n                    searchResults:res.data,\r\n                    query:query\r\n                }\r\n            })\r\n        }\r\n    \r\n    } catch (error) {\r\n        console.error(error);\r\n        dispatch({\r\n            type: GOOGLE_SEARCH_ERROR,\r\n            payload: {msg: 'Oops, could not find what you were searching for!'}\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearGoogleCustomSearch = () => dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: CLEAR_GOOGLE_SEARCH\r\n        })\r\n    } catch (error) {\r\n        console.error('Could not clear the search results', error)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}