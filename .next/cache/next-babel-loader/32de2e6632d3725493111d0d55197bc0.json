{"ast":null,"code":"const calcReadTime = contentArr => {\n  let readTime;\n  let accumulator = 0;\n  const newContentArr = contentArr.filter(element => element.nodeType === 'paragraph');\n\n  for (let i = 0; i < newContentArr.length; i++) {\n    for (let j = 0; j < newContentArr[i].content.length; j++) {\n      const content = newContentArr[i].content[j].value;\n\n      if (content) {\n        accumulator += content.length;\n      }\n    }\n  }\n\n  readTime = Math.round(accumulator / 1000, 2);\n  return readTime;\n};\n\nexport default calcReadTime;","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\utils\\calcReadTime.js"],"names":["calcReadTime","contentArr","readTime","accumulator","newContentArr","filter","element","nodeType","i","length","j","content","value","Math","round"],"mappings":"AAEA,MAAMA,YAAY,GAAIC,UAAD,IAAgB;AACjC,MAAIC,QAAJ;AACA,MAAIC,WAAW,GAAC,CAAhB;AACA,QAAMC,aAAa,GAAGH,UAAU,CAACI,MAAX,CAAkBC,OAAO,IAAIA,OAAO,CAACC,QAAR,KAAqB,WAAlD,CAAtB;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,aAAa,CAACK,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,aAAa,CAACI,CAAD,CAAb,CAAiBG,OAAjB,CAAyBF,MAA5C,EAAoDC,CAAC,EAArD,EAAyD;AACrD,YAAMC,OAAO,GAAGP,aAAa,CAACI,CAAD,CAAb,CAAiBG,OAAjB,CAAyBD,CAAzB,EAA4BE,KAA5C;;AACA,UAAGD,OAAH,EAAW;AACPR,QAAAA,WAAW,IAAEQ,OAAO,CAACF,MAArB;AACH;AACJ;AACJ;;AACDP,EAAAA,QAAQ,GAAGW,IAAI,CAACC,KAAL,CAAWX,WAAW,GAAC,IAAvB,EAA4B,CAA5B,CAAX;AACA,SAAOD,QAAP;AACH,CAdD;;AAgBA,eAAeF,YAAf","sourcesContent":["\r\n\r\nconst calcReadTime = (contentArr) => {\r\n    let readTime;\r\n    let accumulator=0;\r\n    const newContentArr = contentArr.filter(element => element.nodeType === 'paragraph');\r\n    for(let i = 0; i < newContentArr.length; i++ ){\r\n        for(let j = 0; j < newContentArr[i].content.length; j++ ){\r\n            const content = newContentArr[i].content[j].value;\r\n            if(content){\r\n                accumulator+=content.length;\r\n            }\r\n        }\r\n    }\r\n    readTime = Math.round(accumulator/1000,2);\r\n    return readTime;\r\n}\r\n\r\nexport default calcReadTime;"]},"metadata":{},"sourceType":"module"}