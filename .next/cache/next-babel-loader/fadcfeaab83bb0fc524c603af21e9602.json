{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\profiles\\\\ProfileItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport { addCommentLike, removeCommentLike, deleteComment } from '../../actions/profileActions';\nimport TimeAgo from 'react-timeago';\nimport ProfileEditForm from './ProfileEditForm';\nimport ReplyForm from './replies/ReplyForm';\nimport Replies from './replies/Replies';\nimport Modal from 'react-modal';\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,121,191,0.85)',\n    zIndex: '999'\n  },\n  content: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n    width: '80%',\n    zIndex: '1000'\n  }\n};\n\nclass ProfileItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showOptions: false,\n      showReplyOption: false,\n      modalIsOpen: false\n    });\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        modalIsOpen: true\n      });\n    });\n\n    _defineProperty(this, \"afterOpenModal\", () => {// references are now sync'd and can be accessed.\n    });\n\n    _defineProperty(this, \"closeModal\", e => {\n      this.setState({\n        modalIsOpen: false,\n        showOptions: false\n      });\n    });\n\n    _defineProperty(this, \"onLikeClick\", id => {\n      const {\n        profile\n      } = this.props.profile;\n\n      if (this.findUserLike(this.props.comment.likes)) {\n        this.props.removeCommentLike(profile.handle, id);\n      } else {\n        this.props.addCommentLike(profile.handle, id);\n      }\n\n      this.findUserLike(this.props.comment.likes);\n    });\n\n    _defineProperty(this, \"onToolBar\", id => {\n      this.setState({\n        showOptions: !this.state.showOptions\n      });\n    });\n\n    _defineProperty(this, \"onReplyClick\", id => {\n      this.setState({\n        showReplyOption: !this.state.showReplyOption\n      });\n    });\n\n    _defineProperty(this, \"deletePostHandler\", id => {\n      const {\n        profile\n      } = this.props.profile;\n      this.props.deleteComment(profile.handle, id);\n    });\n\n    _defineProperty(this, \"findUserLike\", likes => {\n      const {\n        auth\n      } = this.props;\n\n      if (likes.filter(like => like.user === auth.user.id).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    const {\n      comment\n    } = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PostItem\",\n      style: {\n        backgroundColor: this.props.backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.showOptions ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('PostOptions', {\n        'PostOptions__disappear': this.state.modalIsOpen\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostOptions__editPost\",\n      onClick: this.openModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Edit comment\"), React.createElement(\"button\", {\n      className: \"PostOptions__deletePost\",\n      onClick: this.deletePostHandler.bind(this, comment._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Delete comment\")), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: this.closeModal,\n      style: customStyles,\n      contentLabel: \"PostEditFormModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(ProfileEditForm, {\n      commentId: comment._id,\n      handler: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))) : null, React.createElement(\"div\", {\n      className: \"PostItem__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"PostItem__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, comment.name), \" \", comment.text, React.createElement(\"div\", {\n      className: \"PostItem__timeago\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(TimeAgo, {\n      live: false,\n      date: comment.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PostItem__toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__ellipses\",\n      onClick: this.onToolBar.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.showOptions ? React.createElement(FontAwesomeIcon, {\n      icon: \"times-circle\",\n      style: {\n        color: `${this.findUserLike(comment.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) : React.createElement(FontAwesomeIcon, {\n      icon: \"ellipsis-h\",\n      style: {\n        color: `${this.findUserLike(comment.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"PostItem__collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"PostItem__likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__like\",\n      onClick: this.onLikeClick.bind(this, comment._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: \"thumbs-up\",\n      style: {\n        color: `${this.findUserLike(comment.likes) ? 'rgb(0, 121, 191)' : 'white'}`,\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"PostItem__replies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__reply\",\n      onClick: this.onReplyClick.bind(this, comment._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Reply\")), comment.likes.length > 0 ? React.createElement(\"span\", {\n      className: \"PostItem__countLikesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__countLikes\",\n      onClick: this.onReplyClick.bind(this, comment._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, comment.likes.length === 1 ? `${comment.likes.length} like` : `${comment.likes.length} likes`)) : null, comment.replies.length > 0 ? React.createElement(\"span\", {\n      className: \"PostItem__showHideRepliesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"PostItem__showHideReplies\",\n      onClick: this.onReplyClick.bind(this, comment._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, comment.replies.length, \" Replies\")) : null))), this.state.showReplyOption ? React.createElement(ReplyForm, {\n      postItem: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }) : null, comment.replies.length > 0 ? React.createElement(\"div\", {\n      className: \"replies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"  \", React.createElement(Replies, {\n      backgroundColor: this.props.backgroundColor,\n      postItem: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), \"  \") : null);\n  }\n\n}\n\nProfileItem.defaultProps = {\n  showActions: true\n};\nProfileItem.propTypes = {\n  addCommentLike: PropTypes.func.isRequired,\n  removeCommentLike: PropTypes.func.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  addCommentLike,\n  removeCommentLike,\n  deleteComment\n})(ProfileItem);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\profiles\\ProfileItem.js"],"names":["React","Component","PropTypes","connect","FontAwesomeIcon","classnames","addCommentLike","removeCommentLike","deleteComment","TimeAgo","ProfileEditForm","ReplyForm","Replies","Modal","customStyles","overlay","backgroundColor","zIndex","content","position","top","left","right","bottom","marginRight","transform","width","ProfileItem","showOptions","showReplyOption","modalIsOpen","setState","e","id","profile","props","findUserLike","comment","likes","handle","state","auth","filter","like","user","length","componentDidMount","setAppElement","render","openModal","bind","deletePostHandler","_id","closeModal","name","text","date","onToolBar","color","cursor","onLikeClick","onReplyClick","replies","defaultProps","showActions","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classnames from 'classnames';\r\nimport { addCommentLike, removeCommentLike, deleteComment } from '../../actions/profileActions';\r\nimport TimeAgo from 'react-timeago'\r\n\r\n\r\nimport ProfileEditForm from './ProfileEditForm';\r\nimport ReplyForm from './replies/ReplyForm';\r\nimport Replies from './replies/Replies';\r\nimport Modal from 'react-modal';\r\n\r\n\r\n \r\nconst customStyles = {\r\n    overlay:{\r\n        backgroundColor:'rgba(0,121,191,0.85)',\r\n        zIndex                :'999'\r\n    },\r\n    content : {\r\n      position              :'fixed',\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : 'rgba(255, 255, 255, 0.95)',\r\n      width                 :'80%',\r\n      zIndex                :'1000'\r\n    }\r\n  };\r\n\r\nclass ProfileItem extends Component {\r\n\r\n    state = {\r\n        showOptions:false,\r\n        showReplyOption:false,\r\n        modalIsOpen:false,\r\n    }\r\n\r\n  \r\n\r\n    componentDidMount() {\r\n        Modal.setAppElement('body');\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            modalIsOpen:true\r\n        })\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        // references are now sync'd and can be accessed.\r\n        \r\n      }\r\n\r\n    closeModal = (e) => {\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            showOptions:false\r\n        });\r\n      }\r\n\r\n    onLikeClick = (id) => {\r\n        const { profile } = this.props.profile;\r\n\r\n        if(this.findUserLike(this.props.comment.likes)){\r\n            this.props.removeCommentLike(profile.handle,id);\r\n        }\r\n        else {\r\n            this.props.addCommentLike(profile.handle,id);\r\n        }\r\n       \r\n        this.findUserLike(this.props.comment.likes);\r\n    }\r\n    onToolBar = (id) => {\r\n        this.setState({showOptions:!this.state.showOptions})\r\n    }\r\n    onReplyClick = (id) => {\r\n        this.setState({showReplyOption:!this.state.showReplyOption})\r\n    }\r\n\r\n    deletePostHandler = (id) => {\r\n        const { profile } = this.props.profile;\r\n        this.props.deleteComment(profile.handle,id);\r\n      \r\n   }\r\n\r\n\r\n\r\n    findUserLike = (likes) => { \r\n      const { auth } = this.props;\r\n      if ( likes.filter( like => like.user === auth.user.id).length > 0) {\r\n        return true;\r\n      }\r\n      else {\r\n          return false\r\n      }\r\n    }\r\n\r\n    render() { \r\n        const { comment } = this.props;\r\n   \r\n        return (\r\n            <React.Fragment>\r\n\r\n           \r\n            <div className = \"PostItem\" style = {{backgroundColor:this.props.backgroundColor}}>\r\n          \r\n                       {\r\n                           this.state.showOptions ?\r\n                        \r\n                                <div>\r\n                                        <div className= {classnames('PostOptions',{'PostOptions__disappear':this.state.modalIsOpen})} >\r\n                                            <button className = \"PostOptions__editPost\"  onClick={this.openModal.bind(this)}>Edit comment</button>\r\n                                            <button className = \"PostOptions__deletePost\" onClick={this.deletePostHandler.bind(this,comment._id)}>Delete comment</button>\r\n                                        </div>\r\n                                    \r\n                                        <Modal\r\n                                        isOpen={this.state.modalIsOpen}\r\n                                        onRequestClose={this.closeModal}\r\n                                        style={customStyles}\r\n                                        contentLabel=\"PostEditFormModal\"\r\n                                        >\r\n                                            <ProfileEditForm \r\n                                                commentId = {comment._id}\r\n                                                handler = {this.closeModal}    \r\n                                            />\r\n                                        </Modal>\r\n                                </div>\r\n                     \r\n            \r\n                           \r\n                            \r\n                             : null   \r\n                       }  \r\n         \r\n                    \r\n                    <div className = \"PostItem__content\">\r\n\r\n                        <span className = \"PostItem__name\">{comment.name}</span> {comment.text}\r\n                        <div className = \"PostItem__timeago\" >\r\n                             <TimeAgo live = {false} date= { comment.date }  />\r\n                        </div>\r\n                       \r\n\r\n                        \r\n                        <div className=\"PostItem__toolbar\" >\r\n\r\n                                <button className = \"PostItem__ellipses\" onClick = { this.onToolBar.bind(this) } >\r\n                                            {\r\n                                                this.state.showOptions ? \r\n                                                <FontAwesomeIcon\r\n                                                    icon=\"times-circle\"\r\n                                                    style = {{color:`${this.findUserLike(comment.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                                 />\r\n                                             \r\n                                                :\r\n                                                <FontAwesomeIcon\r\n                                                    icon=\"ellipsis-h\"\r\n                                                    style = {{color:`${this.findUserLike(comment.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                                />\r\n                                               \r\n                                            }\r\n                                            \r\n                                </button>  \r\n                        </div>\r\n                                \r\n                       \r\n\r\n                          <div className = \"PostItem__collection\">  \r\n                                <span className = \"PostItem__likes\">\r\n                                    <button className = \"PostItem__like\" onClick = {this.onLikeClick.bind(this,comment._id)} >\r\n                                        <FontAwesomeIcon\r\n                                            icon=\"thumbs-up\"\r\n                                            style = {{color:`${this.findUserLike(comment.likes) ? 'rgb(0, 121, 191)' : 'white'}`, cursor:'pointer'}}\r\n                                        />\r\n                                    </button>\r\n                                </span> \r\n                                <span className = \"PostItem__replies\">\r\n                                    <button className = \"PostItem__reply\" onClick = {this.onReplyClick.bind(this,comment._id)} >\r\n                                        Reply\r\n                                    </button>\r\n                                </span> \r\n                                {\r\n                                    comment.likes.length > 0 ? \r\n                                    <span className = \"PostItem__countLikesContainer\">\r\n                                        <button className = \"PostItem__countLikes\" onClick = {this.onReplyClick.bind(this,comment._id)} >\r\n                                        {comment.likes.length === 1 ? `${comment.likes.length} like` : `${comment.likes.length} likes`}\r\n                                        </button>\r\n                                     </span> \r\n                                    :null\r\n                                }\r\n                               {\r\n                                comment.replies.length > 0 ? \r\n                                   <span className = \"PostItem__showHideRepliesContainer\">\r\n                                        <button className = \"PostItem__showHideReplies\" onClick = {this.onReplyClick.bind(this,comment._id)} >\r\n                                        {comment.replies.length} Replies\r\n                                        </button>\r\n                                    </span> \r\n                                   :null\r\n                               }\r\n                             \r\n                          </div>\r\n                    </div>    \r\n            </div>\r\n\r\n            {\r\n                this.state.showReplyOption ? <ReplyForm postItem = {comment}/> : null\r\n            }\r\n\r\n            {\r\n                comment.replies.length > 0 ? <div className = \"replies\">  <Replies backgroundColor = {this.props.backgroundColor} postItem = {comment} />  </div>  : null\r\n            }\r\n        \r\n\r\n            </React.Fragment>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nProfileItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  addCommentLike: PropTypes.func.isRequired,\r\n  removeCommentLike: PropTypes.func.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCommentLike, removeCommentLike, deleteComment })(ProfileItem);"]},"metadata":{},"sourceType":"module"}