{"ast":null,"code":"import axios from 'axios';\nimport { GET_POST, GET_POSTS, POST_LOADING, DELETE_POST, ADD_POST, GET_ERRORS, GET_POST_ERRORS, GET_REPLY_ERRORS, CLEAR_ERRORS, LIKE_POST, GET_REPLY, GET_REPLIES } from '../actions/types';\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts\", postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_POST_ERRORS,\n        payload: err.response.data\n      });\n    });\n    dispatch(getPosts());\n  };\n};\nexport var addEditPost = function addEditPost(id, postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/\".concat(id), postData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // ADD REPLY FOR SPECIFIC POST\n// add reply\n\nexport var addReply = function addReply(postId, replyData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/reply/\".concat(postId), replyData).then(function (res) {\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_REPLY_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get('/api/posts').then(function (res) {\n      return (// console.log(res.data)\n        dispatch({\n          type: GET_POSTS,\n          payload: res.data\n        })\n      );\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n};\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return (// console.log(res.data)\n        dispatch({\n          type: GET_POST,\n          payload: res.data\n        })\n      );\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // populate the replies.\n\nexport var getReply = function getReply(postId, replyId) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/\".concat(postId, \"/\").concat(replyId)).then(function (res) {\n      return dispatch({\n        type: GET_REPLY,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_REPLY,\n        payload: null\n      });\n    });\n  };\n}; // add edit post reply\n\nexport var addEditPostReply = function addEditPostReply(postId, replyId, postData) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/reply/\".concat(postId, \"/\").concat(replyId), postData).then(function (res) {\n      return dispatch({\n        type: GET_REPLY,\n        payload: res.data\n      });\n    }).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_REPLY,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios[\"delete\"](\"/api/posts/\".concat(id)).then(function (res) {\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(id)).then(function (_ref) {\n      var data = _ref.data;\n      dispatch({\n        type: LIKE_POST,\n        payload: data //pass in updated post\n\n      });\n    })[\"catch\"](function (_ref2) {\n      var response = _ref2.response;\n      dispatch({\n        type: GET_ERRORS,\n        payload: response.data\n      });\n    });\n  };\n}; // Add Reply Like\n\nexport var addReplyLike = function addReplyLike(postId, replyId) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/reply/like/\".concat(postId, \"/\").concat(replyId)).then(function (_ref3) {\n      var data = _ref3.data;\n      return dispatch({\n        type: LIKE_POST,\n        payload: data\n      });\n    }).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Remove Like\n\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(id)).then(function (_ref4) {\n      var data = _ref4.data;\n      dispatch({\n        type: LIKE_POST,\n        payload: data //pass in updated post\n\n      });\n    })[\"catch\"](function (_ref5) {\n      var response = _ref5.response;\n      dispatch({\n        type: GET_ERRORS,\n        payload: response.data\n      });\n    });\n  };\n}; //Remove Reply Like\n\nexport var removeReplyLike = function removeReplyLike(postId, replyId) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/reply/unlike/\".concat(postId, \"/\").concat(replyId)).then(function (_ref6) {\n      var data = _ref6.data;\n      dispatch({\n        type: LIKE_POST,\n        payload: data //pass in updated post\n\n      });\n    })[\"catch\"](function (_ref7) {\n      var response = _ref7.response;\n      dispatch({\n        type: GET_ERRORS,\n        payload: response.data\n      });\n    });\n  };\n}; // Set loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n}; // GET all replies for a specific post id\n// payload is an array or reply objects.\n\nexport var getReplies = function getReplies(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/reply/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_REPLIES,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_REPLIES,\n        payload: null\n      });\n    });\n    console.log('ran get replies');\n  };\n}; // delete reply\n\nexport var deleteReply = function deleteReply(postId, replyId) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios[\"delete\"](\"/api/posts/reply/\".concat(postId, \"/\").concat(replyId)).then(function (_ref8) {\n      var data = _ref8.data;\n      return (// console.log(res.data)\n        dispatch({\n          type: GET_POST,\n          payload: data\n        })\n      );\n    }).then(function (res) {\n      return dispatch(getPosts());\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\postActions.js"],"names":["axios","GET_POST","GET_POSTS","POST_LOADING","DELETE_POST","ADD_POST","GET_ERRORS","GET_POST_ERRORS","GET_REPLY_ERRORS","CLEAR_ERRORS","LIKE_POST","GET_REPLY","GET_REPLIES","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","err","response","getPosts","addEditPost","id","addReply","postId","replyData","setPostLoading","get","getPost","getReply","replyId","addEditPostReply","deletePost","addLike","addReplyLike","removeLike","removeReplyLike","getReplies","console","log","deleteReply"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    GET_POST,\r\n    GET_POSTS,\r\n    POST_LOADING,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_ERRORS,\r\n    GET_POST_ERRORS,\r\n    GET_REPLY_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LIKE_POST,\r\n    GET_REPLY,\r\n    GET_REPLIES\r\n  } from '../actions/types';\r\n\r\n\r\nexport const addPost = (postData) => dispatch => {\r\n    dispatch(clearErrors());\r\n    axios\r\n    .post(`/api/posts`,postData)\r\n    .then( res =>\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload:res.data\r\n        })\r\n    )\r\n    .catch( err =>\r\n        dispatch({\r\n            type:GET_POST_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    );\r\n    dispatch(getPosts());\r\n\r\n}\r\n\r\nexport const addEditPost = (id,postData) => dispatch => {\r\n    dispatch(clearErrors());\r\n    axios\r\n        .post(`/api/posts/${id}`,postData)\r\n        .then( res => \r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .then( \r\n            res => dispatch(getPosts())\r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ADD REPLY FOR SPECIFIC POST\r\n// add reply\r\nexport const addReply = (postId, replyData) => dispatch => {\r\n    dispatch(clearErrors());\r\n    \r\n    axios\r\n        .post(`/api/posts/reply/${postId}`,replyData)\r\n        .then( res => {\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .then( \r\n            res => dispatch(getPosts())\r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_REPLY_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\nexport const getPosts = () => dispatch => {\r\n    dispatch(setPostLoading());\r\n    axios\r\n        .get('/api/posts')\r\n        .then( res =>\r\n            // console.log(res.data)\r\n            dispatch({\r\n                type: GET_POSTS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_POSTS,\r\n                payload: null\r\n            })\r\n        );\r\n  \r\n}\r\n\r\n\r\nexport const getPost = id => dispatch => {\r\n \r\n    axios\r\n        .get(`/api/posts/${id}`)\r\n        .then( res =>\r\n            // console.log(res.data)\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_POST,\r\n                payload: null\r\n            })\r\n        );\r\n\r\n}\r\n\r\n// populate the replies.\r\nexport const getReply = (postId,replyId) => dispatch => {\r\n    axios\r\n        .post(`/api/posts/${postId}/${replyId}`)\r\n        .then( res =>\r\n            dispatch({\r\n                type: GET_REPLY,\r\n                payload:res.data\r\n            })\r\n    \r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_REPLY,\r\n                payload: null\r\n            })\r\n        );\r\n}\r\n\r\n\r\n// add edit post reply\r\nexport const addEditPostReply = (postId,replyId,postData) => dispatch => {\r\n    axios\r\n        .post(`/api/posts/reply/${postId}/${replyId}`,postData)\r\n    \r\n        .then(  res => \r\n            dispatch({\r\n                type: GET_REPLY,\r\n                payload:res.data\r\n            })\r\n        )\r\n        .then( \r\n            res => dispatch(getPosts())\r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_REPLY,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\n\r\n\r\nexport const deletePost = id => dispatch => {\r\n    axios\r\n      .delete(`/api/posts/${id}`)\r\n      .then( res => {\r\n        dispatch({\r\n          type:DELETE_POST,\r\n          payload:id\r\n        })\r\n      })\r\n      .catch( err => {\r\n         dispatch({\r\n           type: GET_ERRORS,\r\n           payload: err.response.data\r\n         })\r\n      })\r\n}\r\n\r\n\r\n\r\n//Add Like\r\nexport const addLike = id => dispatch => {\r\n  axios\r\n    .post(`/api/posts/like/${id}`)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: LIKE_POST,\r\n        payload: data //pass in updated post\r\n      });\r\n    })\r\n    .catch(({ response }) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: response.data\r\n      });\r\n    });\r\n};\r\n\r\n// Add Reply Like\r\nexport const addReplyLike = (postId, replyId)  => dispatch => {\r\n    axios\r\n        .post(`/api/posts/reply/like/${postId}/${replyId}`)\r\n        .then( ({data}) =>\r\n            dispatch({\r\n                type: LIKE_POST,\r\n                payload: data\r\n            })\r\n        )\r\n        .then ( res => dispatch(getPosts()))\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\n \r\n//Remove Like\r\nexport const removeLike = id => dispatch => {\r\n  axios\r\n    .post(`/api/posts/unlike/${id}`)\r\n    .then(({ data }) => {\r\n      dispatch({\r\n        type: LIKE_POST,\r\n        payload: data //pass in updated post\r\n      });\r\n    })\r\n    .catch(({ response }) => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: response.data\r\n      });\r\n    });\r\n};\r\n\r\n//Remove Reply Like\r\nexport const removeReplyLike = (postId,replyId) => dispatch => {\r\n    axios\r\n      .post(`/api/posts/reply/unlike/${postId}/${replyId}`)\r\n      .then(({ data }) => {\r\n        dispatch({\r\n          type: LIKE_POST,\r\n          payload: data //pass in updated post\r\n        });\r\n      })\r\n      .catch(({ response }) => {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: response.data\r\n        });\r\n      });\r\n  };\r\n  \r\n\r\n\r\n// Set loading state\r\nexport const setPostLoading = () => {\r\n    return {\r\n      type: POST_LOADING\r\n    };\r\n  };\r\n  \r\n  // Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n      type: CLEAR_ERRORS\r\n    };\r\n  };\r\n\r\n\r\n\r\n// GET all replies for a specific post id\r\n// payload is an array or reply objects.\r\nexport const getReplies = id => dispatch => {\r\n    dispatch(setPostLoading());\r\n    axios\r\n        .get(`/api/posts/reply/${id}`)\r\n        .then( res =>\r\n            dispatch({\r\n                type: GET_REPLIES,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_REPLIES,\r\n                payload: null\r\n            })\r\n        );\r\n    console.log('ran get replies');\r\n}\r\n  \r\n\r\n\r\n// delete reply\r\nexport const deleteReply = (postId, replyId)  => dispatch => {\r\n    dispatch(clearErrors());\r\n    axios\r\n        .delete(`/api/posts/reply/${postId}/${replyId}`)\r\n        .then( ({data}) =>\r\n            // console.log(res.data)\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: data\r\n            })\r\n        )\r\n        .then ( res => dispatch(getPosts()))\r\n        .catch( err =>\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}