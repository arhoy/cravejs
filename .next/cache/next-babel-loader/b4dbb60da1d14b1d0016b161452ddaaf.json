{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\orders\\\\UserOrders.js\";\nimport React, { Component } from 'react';\nimport UserOrder from './UserOrder';\nimport { connect } from 'react-redux';\nimport { getOrders } from '../../actions/orderActions';\nimport LoadingSpinner from '../utils/LoadingSpinner';\n\nclass UserOrders extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      filteredOrders: [],\n      keyword: '',\n      orders: []\n    });\n\n    _defineProperty(this, \"inputChangeHandler\", e => {\n      const keyword = e.target.value;\n      const filteredOrders = this.state.orders.filter(order => order._id.toLowerCase().includes(keyword.toLowerCase().trim()) || order.user.name.toLowerCase().includes(keyword.toLowerCase().trim()));\n      this.setState({\n        filteredOrders,\n        keyword\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.getOrders();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.order !== this.props.order) {\n      this.setState({\n        orders: this.props.order.orders\n      });\n    }\n  }\n\n  render() {\n    const {\n      orders,\n      filteredOrders,\n      keyword\n    } = this.state;\n    console.log(orders);\n\n    if (!orders || orders.length < 1) {\n      return React.createElement(\"div\", {\n        className: \"orders__loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Loading Orders\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Try reloading page if loading persists...\"), React.createElement(LoadingSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    } else {\n      const ordersToLoop = keyword === '' ? orders : filteredOrders;\n      return React.createElement(\"div\", {\n        className: \"orders-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.inputChangeHandler,\n        className: \"orders__input\",\n        type: \"text\",\n        placeholder: \"Search for orders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"orders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.keyword !== '' && this.state.filteredOrders.length === 0 ? React.createElement(\"div\", {\n        className: \"orders__noResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" Sorry, no results found!  \") : ordersToLoop.map(order => React.createElement(UserOrder, {\n        key: order._id,\n        orderId: order._id,\n        orderDate: order.orderDate,\n        products: order.products,\n        orderedBy: order.user.name,\n        totalPrice: order.totalPrice,\n        totalQuantity: order.totalQuantity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  order: state.order\n});\n\nexport default connect(mapStateToProps, {\n  getOrders\n})(UserOrders);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\orders\\UserOrders.js"],"names":["React","Component","UserOrder","connect","getOrders","LoadingSpinner","UserOrders","filteredOrders","keyword","orders","e","target","value","state","filter","order","_id","toLowerCase","includes","trim","user","name","setState","componentDidMount","props","componentDidUpdate","prevProps","prevState","render","console","log","length","ordersToLoop","inputChangeHandler","map","orderDate","products","totalPrice","totalQuantity","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserOrder from './UserOrder';\r\nimport { connect } from 'react-redux';\r\nimport { getOrders } from '../../actions/orderActions';\r\nimport LoadingSpinner from '../utils/LoadingSpinner';\r\n\r\n\r\nclass UserOrders extends Component {\r\n    state = {\r\n        filteredOrders: [],\r\n        keyword: '',\r\n        orders: []\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.getOrders();\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.order !== this.props.order){\r\n            this.setState({orders: this.props.order.orders})\r\n        }\r\n      \r\n    }\r\n    inputChangeHandler = (e) => {\r\n        const keyword = e.target.value;\r\n        const filteredOrders = this.state.orders.filter(order => (\r\n            order._id.toLowerCase().includes(keyword.toLowerCase().trim()) ||\r\n            order.user.name.toLowerCase().includes(keyword.toLowerCase().trim())\r\n\r\n        ))\r\n        this.setState({filteredOrders,keyword});\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        const {orders, filteredOrders,keyword} = this.state;\r\n        console.log(orders);\r\n \r\n        if( !orders || orders.length < 1 ) {\r\n            return (\r\n                <div className = \"orders__loading\">\r\n                    <div>\r\n                        Loading Orders\r\n                    </div>\r\n                    <div>Try reloading page if loading persists...</div>\r\n                    <LoadingSpinner/>\r\n                </div>\r\n            ) \r\n        }\r\n        else {\r\n            const ordersToLoop = keyword === '' ? orders : filteredOrders\r\n            return (\r\n                <div className = \"orders-container\">\r\n                    <input onChange = { this.inputChangeHandler } className = \"orders__input\" type=\"text\" placeholder = \"Search for orders\"/>\r\n                    <div className = \"orders\">\r\n                    {\r\n                        this.state.keyword !== '' && this.state.filteredOrders.length === 0 ? \r\n                            <div className = \"orders__noResults\"> Sorry, no results found!  </div>\r\n                        :\r\n                        ordersToLoop.map(order=>(\r\n                            <UserOrder\r\n                               key = {order._id}\r\n                               orderId = {order._id}\r\n                               orderDate = {order.orderDate}\r\n                               products = {order.products}\r\n                               orderedBy = {order.user.name}\r\n                               totalPrice = {order.totalPrice}\r\n                               totalQuantity = {order.totalQuantity}\r\n                            />\r\n                        ))\r\n                    }\r\n                    </div>\r\n                </div>\r\n               \r\n            );\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    order: state.order\r\n})\r\nexport default connect(mapStateToProps , { getOrders })(UserOrders);"]},"metadata":{},"sourceType":"module"}