{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\Layout\\\\Navigation.js\";\n\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport mainLinks from './links/mainLinks';\n\nvar Navigation = function Navigation(_ref) {\n  var logoutUser = _ref.logoutUser,\n      _ref$auth = _ref.auth,\n      user = _ref$auth.user,\n      isAuthenticated = _ref$auth.isAuthenticated;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var onNavToggleHandler = function onNavToggleHandler() {\n    setIsOpen(!isOpen);\n  };\n\n  if (user && user.name) {\n    var displayName = user.name.split(' ')[0];\n  }\n\n  var links = mainLinks(isAuthenticated, user);\n  return React.createElement(\"div\", {\n    className: \"navigation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"navigation__checkbox\",\n    id: \"navi-toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    onClick: onNavToggleHandler.bind(_this),\n    htmlFor: \"navi-toggle\",\n    className: \"navigation__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navigation__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\xA0\")), isOpen ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"navigation__background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(\"nav\", {\n    className: \"navigation__nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"navigation__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, links.map(function (link) {\n    return React.createElement(\"li\", {\n      key: link.linkTo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" \", React.createElement(Link, {\n      to: link.linkTo,\n      className: \"navigation__link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" \", link.title, \" \"), \" \");\n  })))) : null);\n};\n\nNavigation.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser: logoutUser\n})(Navigation);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\Layout\\Navigation.js"],"names":["React","Fragment","useState","Link","PropTypes","connect","logoutUser","mainLinks","Navigation","auth","user","isAuthenticated","isOpen","setIsOpen","onNavToggleHandler","name","displayName","split","links","bind","map","link","linkTo","title","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions/authActions';\r\nimport mainLinks from './links/mainLinks';\r\n\r\n\r\nconst Navigation = ({ logoutUser, auth: { user, isAuthenticated } }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n    const onNavToggleHandler = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n        if (user && user.name ) { const displayName = user.name.split(' ')[0]; }\r\n        \r\n    const links = mainLinks(isAuthenticated, user); \r\n\r\n\r\n        return (\r\n                <div className=\"navigation\">\r\n                    <input type=\"checkbox\" className=\"navigation__checkbox\" id=\"navi-toggle\"/>\r\n\r\n                    <label onClick = { onNavToggleHandler.bind(this)} htmlFor=\"navi-toggle\" className=\"navigation__button\">\r\n                        <span className=\"navigation__icon\">&nbsp;</span>\r\n                    </label>\r\n                    \r\n            \r\n                    {\r\n                        isOpen ? \r\n                        <Fragment>\r\n                            <div className=\"navigation__background\">&nbsp;</div>\r\n                            <nav className=\"navigation__nav\">\r\n                                <ul className=\"navigation__list\">\r\n                                {links.map( link => (\r\n                                    <li key = {link.linkTo} > <Link to = { link.linkTo } className = \"navigation__link\" > { link.title } </Link> </li>\r\n                                ) )}\r\n                                </ul>\r\n                            </nav>\r\n                        </Fragment>\r\n                        \r\n                        :null\r\n                    }\r\n                    \r\n                </div>\r\n        )\r\n}\r\n\r\nNavigation.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Navigation);"]},"metadata":{},"sourceType":"module"}