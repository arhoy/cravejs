{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\todo\\\\TodoForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addTodo, editTodo } from '../../actions/todoActions';\n\nconst TodoForm = ({\n  addTodo,\n  editTodo,\n  todo: {\n    currentTodo\n  },\n  inputRef\n}) => {\n  useEffect(() => {\n    if (currentTodo) {\n      setText(currentTodo.text);\n    }\n  }, [currentTodo]);\n  const [text, setText] = useState('');\n\n  const onChangeHandler = e => setText(e.target.value);\n\n  const onSubmitHandler = e => {\n    e.preventDefault(); // if todo edit todo\n\n    if (currentTodo) {\n      console.log(currentTodo._id);\n      editTodo(currentTodo._id, {\n        text\n      });\n    } else {\n      addTodo({\n        text\n      });\n    }\n\n    setText('');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"TodoForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"TodoForm__group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    style: {\n      width: `${Math.max(text.length, 20)}rem`\n    },\n    type: \"text\",\n    placeholder: \" Add new Todo \",\n    onChange: onChangeHandler,\n    name: \"text\",\n    value: text,\n    required: true,\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))));\n};\n\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  todo: state.todo\n});\n\nexport default connect(mapStateToProps, {\n  addTodo,\n  editTodo\n})(TodoForm);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\todo\\TodoForm.js"],"names":["React","useState","useEffect","PropTypes","connect","addTodo","editTodo","TodoForm","todo","currentTodo","inputRef","setText","text","onChangeHandler","e","target","value","onSubmitHandler","preventDefault","console","log","_id","width","Math","max","length","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,2BAAlC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACF,EAAAA,OAAD;AAAUC,EAAAA,QAAV;AAAoBE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAA1B;AAA2CC,EAAAA;AAA3C,CAAD,KAA2D;AACxER,EAAAA,SAAS,CAAE,MAAK;AACZ,QAAIO,WAAJ,EAAkB;AACdE,MAAAA,OAAO,CAAEF,WAAW,CAACG,IAAd,CAAP;AACH;AACJ,GAJQ,EAIP,CAACH,WAAD,CAJO,CAAT;AAMA,QAAM,CAAEG,IAAF,EAAQD,OAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMY,eAAe,GAAGC,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AAEA,QAAMC,eAAe,GAAGH,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACI,cAAF,GADyB,CAGrB;;AACJ,QAAIT,WAAJ,EAAiB;AACbU,MAAAA,OAAO,CAACC,GAAR,CAAYX,WAAW,CAACY,GAAxB;AACAf,MAAAA,QAAQ,CAACG,WAAW,CAACY,GAAb,EAAkB;AAAET,QAAAA;AAAF,OAAlB,CAAR;AACH,KAHD,MAGO;AACHP,MAAAA,OAAO,CAAC;AAAEO,QAAAA;AAAF,OAAD,CAAP;AACH;;AAEDD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAZD;;AAgBA,SACI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAKM,eADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAI;AAACK,MAAAA,KAAK,EAAG,GAAEC,IAAI,CAACC,GAAL,CAASZ,IAAI,CAACa,MAAd,EAAsB,EAAtB,CAA0B;AAArC,KADb;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAG,gBAHlB;AAII,IAAA,QAAQ,EAAKZ,eAJjB;AAKI,IAAA,IAAI,EAAG,MALX;AAMI,IAAA,KAAK,EAAKD,IANd;AAOI,IAAA,QAAQ,MAPZ;AAQI,IAAA,GAAG,EAAKF,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,CADJ;AAsBH,CAlDD;;AAoDAH,QAAQ,CAACmB,SAAT,GAAqB;AACjBrB,EAAAA,OAAO,EAAEF,SAAS,CAACwB,IAAV,CAAeC;AADP,CAArB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BtB,EAAAA,IAAI,EAAEsB,KAAK,CAACtB;AADkB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAAiDC,QAAjD,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTodo, editTodo } from '../../actions/todoActions';\r\n\r\nconst TodoForm = ({addTodo, editTodo, todo: { currentTodo }, inputRef }) => {\r\n    useEffect( ()=> {\r\n        if( currentTodo ) {\r\n            setText( currentTodo.text );\r\n        }\r\n    },[currentTodo])\r\n\r\n    const [ text, setText ] = useState('');\r\n\r\n\r\n    const onChangeHandler = e => setText(e.target.value);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n\r\n            // if todo edit todo\r\n        if( currentTodo ){\r\n            console.log(currentTodo._id);\r\n            editTodo(currentTodo._id, { text });\r\n        } else {\r\n            addTodo({ text });\r\n        }\r\n     \r\n        setText('');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className = \"TodoForm\">\r\n            <form\r\n                onSubmit = { onSubmitHandler }\r\n            >\r\n\r\n                <div className = \"TodoForm__group\">\r\n                    <input \r\n                        style = {{width: `${Math.max(text.length, 20)}rem` }}\r\n                        type=\"text\"\r\n                        placeholder = ' Add new Todo ' \r\n                        onChange = { onChangeHandler }\r\n                        name = \"text\"\r\n                        value = { text }\r\n                        required\r\n                        ref = { inputRef }\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nTodoForm.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todo: state.todo\r\n})\r\n\r\nexport default connect(mapStateToProps, { addTodo, editTodo } )(TodoForm);\r\n"]},"metadata":{},"sourceType":"module"}