{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, GET_USER_CART, REMOVE_ITEM_FROM_USER_CART, CLEAR_USER_CART, GET_CURRENT_CART_TOTAL, CART_LOADING } from './types';\nexport var setCartLoading = function setCartLoading() {\n  return {\n    type: CART_LOADING\n  };\n}; // return a cart object with array of the user cart items.\n\nexport var getUserCart = function getUserCart() {\n  return function (dispatch) {\n    dispatch(setCartLoading());\n    axios.get('/api/users/current').then(function (res) {\n      dispatch({\n        type: GET_USER_CART,\n        payload: res.data.cart\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_USER_CART,\n        action: []\n      });\n    });\n  };\n};\nexport var getCurrentCartTotal = function getCurrentCartTotal() {\n  return function (dispatch) {\n    dispatch(setCartLoading());\n    axios.get('/api/users/currentTotal').then(function (res) {\n      dispatch({\n        type: GET_CURRENT_CART_TOTAL,\n        payload: res.data\n      });\n    })[\"catch\"](function (err) {\n      return dispatch({\n        type: GET_CURRENT_CART_TOTAL,\n        action: {}\n      });\n    });\n  };\n};\nexport var removeProductItemFromCart = function removeProductItemFromCart(id) {\n  return function (dispatch) {\n    axios.post(\"/api/product/remove/\".concat(id)).then(function (res) {\n      dispatch({\n        type: REMOVE_ITEM_FROM_USER_CART,\n        payload: res.data.cart\n      });\n    }).then(function (res) {\n      return dispatch(getUserCart());\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // remove all items from user cart\n\nexport var clearUserCart = function clearUserCart() {\n  return function (dispatch) {\n    axios.post('/api/product/remove').then(function (res) {\n      return dispatch({\n        type: CLEAR_USER_CART,\n        payload: []\n      });\n    })[\"catch\"](function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\cartActions.js"],"names":["axios","GET_ERRORS","GET_USER_CART","REMOVE_ITEM_FROM_USER_CART","CLEAR_USER_CART","GET_CURRENT_CART_TOTAL","CART_LOADING","setCartLoading","type","getUserCart","dispatch","get","then","res","payload","data","cart","err","action","getCurrentCartTotal","removeProductItemFromCart","id","post","response","clearUserCart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,EACIC,0BADJ,EACgCC,eADhC,EAEIC,sBAFJ,EAGIC,YAHJ,QAIO,SAJP;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,SAAO;AACHC,IAAAA,IAAI,EAACF;AADF,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACzCA,IAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACAP,IAAAA,KAAK,CACAW,GADL,CACS,oBADT,EAEKC,IAFL,CAEW,UAAAC,GAAG,EAAI;AACVH,MAAAA,QAAQ,CAAE;AACNF,QAAAA,IAAI,EAAEN,aADA;AAENY,QAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFZ,OAAF,CAAR;AAIH,KAPL,WAQa,UAAAC,GAAG;AAAA,aACRP,QAAQ,CAAE;AACNF,QAAAA,IAAI,EAAEN,aADA;AAENgB,QAAAA,MAAM,EAAE;AAFF,OAAF,CADA;AAAA,KARhB;AAcH,GAhB0B;AAAA,CAApB;AAiBP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAM,UAAAT,QAAQ,EAAI;AACjDA,IAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR;AACAP,IAAAA,KAAK,CACAW,GADL,CACS,yBADT,EAEKC,IAFL,CAEW,UAAAC,GAAG,EAAI;AACVH,MAAAA,QAAQ,CAAE;AACNF,QAAAA,IAAI,EAAEH,sBADA;AAENS,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFP,OAAF,CAAR;AAIH,KAPL,WAQa,UAAAE,GAAG;AAAA,aACRP,QAAQ,CAAE;AACNF,QAAAA,IAAI,EAAEH,sBADA;AAENa,QAAAA,MAAM,EAAE;AAFF,OAAF,CADA;AAAA,KARhB;AAcH,GAhBkC;AAAA,CAA5B;AAmBP,OAAO,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,EAAD;AAAA,SAAQ,UAAAX,QAAQ,EAAI;AAEzDV,IAAAA,KAAK,CACAsB,IADL,+BACiCD,EADjC,GAEKT,IAFL,CAEW,UAAAC,GAAG,EAAI;AACVH,MAAAA,QAAQ,CAAE;AACNF,QAAAA,IAAI,EAAEL,0BADA;AAENW,QAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAFZ,OAAF,CAAR;AAIH,KAPL,EAQKJ,IARL,CAQY,UAAAC,GAAG;AAAA,aAAIH,QAAQ,CAACD,WAAW,EAAZ,CAAZ;AAAA,KARf,WASY,UAAAQ,GAAG,EAAI;AACXP,MAAAA,QAAQ,CAAC;AACPF,QAAAA,IAAI,EAAEP,UADC;AAEPa,QAAAA,OAAO,EAAEG,GAAG,CAACM,QAAJ,CAAaR;AAFf,OAAD,CAAR;AAIF,KAdN;AAeH,GAjBwC;AAAA,CAAlC,C,CAkBP;;AACA,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAAd,QAAQ,EAAI;AAC3CV,IAAAA,KAAK,CACAsB,IADL,CACU,qBADV,EAEKV,IAFL,CAEW,UAAAC,GAAG;AAAA,aACNH,QAAQ,CAAE;AACNF,QAAAA,IAAI,EAAEJ,eADA;AAENU,QAAAA,OAAO,EAAE;AAFH,OAAF,CADF;AAAA,KAFd,WAQY,UAAAG,GAAG,EAAI;AACXP,MAAAA,QAAQ,CAAC;AACPF,QAAAA,IAAI,EAAEP,UADC;AAEPa,QAAAA,OAAO,EAAEG,GAAG,CAACM,QAAJ,CAAaR;AAFf,OAAD,CAAR;AAIF,KAbN;AAcH,GAf4B;AAAA,CAAtB","sourcesContent":["import axios from 'axios';\r\nimport { GET_ERRORS, GET_USER_CART,\r\n    REMOVE_ITEM_FROM_USER_CART, CLEAR_USER_CART,\r\n    GET_CURRENT_CART_TOTAL,\r\n    CART_LOADING \r\n} from './types';\r\n\r\n\r\nexport const setCartLoading = () => {\r\n    return {\r\n        type:CART_LOADING\r\n    }\r\n}\r\n\r\n// return a cart object with array of the user cart items.\r\nexport const getUserCart = () => dispatch => {\r\n    dispatch(setCartLoading())\r\n    axios\r\n        .get('/api/users/current')\r\n        .then( res => {\r\n            dispatch ({\r\n                type: GET_USER_CART,\r\n                payload: res.data.cart\r\n            })\r\n        })\r\n        .catch ( err => \r\n            dispatch ({\r\n                type: GET_USER_CART,\r\n                action: []\r\n            })\r\n        )\r\n}\r\nexport const getCurrentCartTotal = () => dispatch => {\r\n    dispatch(setCartLoading())\r\n    axios\r\n        .get('/api/users/currentTotal')\r\n        .then( res => {\r\n            dispatch ({\r\n                type: GET_CURRENT_CART_TOTAL,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch ( err => \r\n            dispatch ({\r\n                type: GET_CURRENT_CART_TOTAL,\r\n                action: {}\r\n            })\r\n        )\r\n}\r\n\r\n\r\nexport const removeProductItemFromCart = (id) => dispatch => {\r\n\r\n    axios\r\n        .post(`/api/product/remove/${id}`)\r\n        .then( res => {\r\n            dispatch ({\r\n                type: REMOVE_ITEM_FROM_USER_CART,\r\n                payload: res.data.cart\r\n            })\r\n        })\r\n        .then ( res => dispatch(getUserCart()) )\r\n        .catch( err => {\r\n            dispatch({\r\n              type: GET_ERRORS,\r\n              payload: err.response.data\r\n            })\r\n         })\r\n}\r\n// remove all items from user cart\r\nexport const clearUserCart = () => dispatch => {\r\n    axios\r\n        .post('/api/product/remove')\r\n        .then( res => \r\n            dispatch ({\r\n                type: CLEAR_USER_CART,\r\n                payload: []\r\n            })\r\n        )\r\n        .catch( err => {\r\n            dispatch({\r\n              type: GET_ERRORS,\r\n              payload: err.response.data\r\n            })\r\n         })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}