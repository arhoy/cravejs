{"ast":null,"code":"import axios from 'axios';\nimport { GET_ORDERS, GET_ORDER, ORDERS_LOADING, SUBMIT_ORDER } from './types'; // Loading orders\n\nexport const setOrderLoading = () => {\n  return {\n    type: ORDERS_LOADING\n  };\n}; // get all the orders for logged in user\n\nexport const getOrders = () => dispatch => {\n  dispatch(setOrderLoading());\n  axios.get('/api/order').then(res => dispatch({\n    type: GET_ORDERS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ORDERS,\n    payload: []\n  }));\n};\nexport const getOrder = id => dispatch => {\n  dispatch(setOrderLoading());\n  axios.get(`/api/order/${id}`).then(res => dispatch({\n    type: GET_ORDER,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ORDER,\n    payload: {}\n  }));\n};\nexport const submitOrder = data => dispatch => {\n  axios.post('/api/order', data).then(res => dispatch({\n    type: SUBMIT_ORDER,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: SUBMIT_ORDER,\n    payload: {}\n  }));\n};","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\actions\\orderActions.js"],"names":["axios","GET_ORDERS","GET_ORDER","ORDERS_LOADING","SUBMIT_ORDER","setOrderLoading","type","getOrders","dispatch","get","then","res","payload","data","catch","err","getOrder","id","submitOrder","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,UADJ,EAEIC,SAFJ,EAGIC,cAHJ,EAIIC,YAJJ,QAKO,SALP,C,CAOA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,SAAO;AACHC,IAAAA,IAAI,EAACH;AADF,GAAP;AAGH,CAJM,C,CAKP;;AACA,OAAO,MAAMI,SAAS,GAAG,MAAMC,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACAL,EAAAA,KAAK,CACAS,GADL,CACS,YADT,EAEKC,IAFL,CAEWC,GAAG,IACNH,QAAQ,CAAE;AACNF,IAAAA,IAAI,EAAEL,UADA;AAENW,IAAAA,OAAO,EAAED,GAAG,CAACE;AAFP,GAAF,CAHhB,EAQKC,KARL,CAQYC,GAAG,IACPP,QAAQ,CAAC;AACLF,IAAAA,IAAI,EAAEL,UADD;AAELW,IAAAA,OAAO,EAAC;AAFH,GAAD,CAThB;AAcH,CAhBM;AAkBP,OAAO,MAAMI,QAAQ,GAAIC,EAAD,IAAQT,QAAQ,IAAG;AACvCA,EAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACAL,EAAAA,KAAK,CACAS,GADL,CACU,cAAaQ,EAAG,EAD1B,EAEKP,IAFL,CAEWC,GAAG,IACNH,QAAQ,CAAC;AACLF,IAAAA,IAAI,EAAEJ,SADD;AAELU,IAAAA,OAAO,EAACD,GAAG,CAACE;AAFP,GAAD,CAHhB,EAQKC,KARL,CAQYC,GAAG,IACPP,QAAQ,CAAC;AACLF,IAAAA,IAAI,EAAEJ,SADD;AAELU,IAAAA,OAAO,EAAE;AAFJ,GAAD,CAThB;AAcH,CAhBM;AAkBP,OAAO,MAAMM,WAAW,GAAIL,IAAD,IAAUL,QAAQ,IAAI;AAC7CR,EAAAA,KAAK,CACDmB,IADJ,CACS,YADT,EACsBN,IADtB,EAEKH,IAFL,CAEWC,GAAG,IACNH,QAAQ,CAAC;AACLF,IAAAA,IAAI,EAACF,YADA;AAELQ,IAAAA,OAAO,EAACD,GAAG,CAACE;AAFP,GAAD,CAHhB,EAQKC,KARL,CAQYC,GAAG,IACPP,QAAQ,CAAC;AACLF,IAAAA,IAAI,EAAEF,YADD;AAELQ,IAAAA,OAAO,EAAC;AAFH,GAAD,CAThB;AAcH,CAfM","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    GET_ORDERS,\r\n    GET_ORDER,\r\n    ORDERS_LOADING,\r\n    SUBMIT_ORDER\r\n} from './types';\r\n\r\n// Loading orders\r\nexport const setOrderLoading = () => {\r\n    return {\r\n        type:ORDERS_LOADING\r\n    }\r\n}\r\n// get all the orders for logged in user\r\nexport const getOrders = () => dispatch => {\r\n    dispatch(setOrderLoading())\r\n    axios\r\n        .get('/api/order')\r\n        .then( res => \r\n            dispatch ({\r\n                type: GET_ORDERS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch( err => \r\n            dispatch({\r\n                type: GET_ORDERS,\r\n                payload:[]\r\n            })\r\n        )\r\n}\r\n\r\nexport const getOrder = (id) => dispatch =>{\r\n    dispatch(setOrderLoading())\r\n    axios\r\n        .get(`/api/order/${id}`)\r\n        .then( res => \r\n            dispatch({\r\n                type: GET_ORDER,\r\n                payload:res.data\r\n            })\r\n        )\r\n        .catch( err => \r\n            dispatch({\r\n                type: GET_ORDER,\r\n                payload: {}\r\n            })\r\n        )\r\n}\r\n\r\nexport const submitOrder = (data) => dispatch => {\r\n    axios.\r\n        post('/api/order',data)\r\n        .then( res =>\r\n            dispatch({\r\n                type:SUBMIT_ORDER,\r\n                payload:res.data\r\n            })\r\n        )\r\n        .catch( err => \r\n            dispatch({\r\n                type: SUBMIT_ORDER,\r\n                payload:{}\r\n            })\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}