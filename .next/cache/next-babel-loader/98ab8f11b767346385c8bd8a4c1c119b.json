{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arhoy\\\\Desktop\\\\cravejs\\\\client\\\\src\\\\components\\\\resume\\\\Resume.js\";\nimport React, { Component } from 'react';\nimport { getResumes } from '../../actions/resumeActions';\nimport { connect } from 'react-redux';\nimport LoadingSpinner from '../utils/LoadingSpinner';\n\nclass Resume extends Component {\n  componentDidMount() {\n    this.props.getResumes();\n  }\n\n  render() {\n    const {\n      resumes,\n      loading\n    } = this.props.resume; //  console.log(resumes);\n\n    return React.createElement(\"div\", {\n      className: \"Resume\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, loading ? React.createElement(\"div\", {\n      className: \"Resume__loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Resume__loading-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Fetching your files\"), React.createElement(\"div\", {\n      className: \"Resume__loading-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Try reloading page if loading persists...\"), React.createElement(\"div\", {\n      className: \"Resume__loading-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(LoadingSpinner, {\n      bgColor: \"#0079BF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"Resume__uploads\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, resumes.map(resume => {\n      console.log(resume);\n      const indexStart = resume.public_id.lastIndexOf('/');\n      const displayName = resume.public_id.substring(indexStart + 1, resume.public_id.length); // display like this if image file\n\n      if (resume.format === 'png' || resume.format === 'jpg' || resume.format === 'jpeg') {\n        return React.createElement(\"div\", {\n          className: \"Resume__image\",\n          key: resume.public_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"\",\n          src: resume.url,\n          alt: displayName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      } // provide as url link;\n      else {\n          return React.createElement(\"div\", {\n            className: \"Resume__containerLink\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            className: \"Resume__link\",\n            href: resume.url,\n            target: \"_blank\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \" \", displayName, \" \"));\n        }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  resume: state.resume\n});\n\nexport default connect(mapStateToProps, {\n  getResumes\n})(Resume);","map":{"version":3,"sources":["C:\\Users\\arhoy\\Desktop\\cravejs\\client\\src\\components\\resume\\Resume.js"],"names":["React","Component","getResumes","connect","LoadingSpinner","Resume","componentDidMount","props","render","resumes","loading","resume","map","console","log","indexStart","public_id","lastIndexOf","displayName","substring","length","format","url","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,UAAX;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKH,KAAL,CAAWI,MAAxC,CADK,CAEN;;AACC,WACI;AACI,MAAA,SAAS,EAAG,QADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIQD,OAAO,GAEP;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADR,EAIQ;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJR,EAKQ;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACI,MAAA,OAAO,EAAG,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALR,CAFO,GAgBP;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGID,OAAO,CAACG,GAAR,CAAYD,MAAM,IAAI;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,YAAMI,UAAU,GAAGJ,MAAM,CAACK,SAAP,CAAiBC,WAAjB,CAA6B,GAA7B,CAAnB;AACA,YAAMC,WAAW,GAAGP,MAAM,CAACK,SAAP,CAAiBG,SAAjB,CAA2BJ,UAAU,GAAG,CAAxC,EAA2CJ,MAAM,CAACK,SAAP,CAAiBI,MAA5D,CAApB,CAHkB,CAIlB;;AACA,UAAGT,MAAM,CAACU,MAAP,KAAkB,KAAlB,IAA4BV,MAAM,CAACU,MAAP,KAAkB,KAA9C,IAAuDV,MAAM,CAACU,MAAP,KAAkB,MAA5E,EAAoF;AAChF,eACI;AAAK,UAAA,SAAS,EAAG,eAAjB;AAAkC,UAAA,GAAG,EAAIV,MAAM,CAACK,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAG,EAAjB;AACI,UAAA,GAAG,EAAEL,MAAM,CAACW,GADhB;AACqB,UAAA,GAAG,EAAEJ,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAQH,OATD,CAUA;AAVA,WAWK;AACD,iBAEQ;AAAK,YAAA,SAAS,EAAG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAG,YAAA,SAAS,EAAG,cAAf;AAA8B,YAAA,IAAI,EAAEP,MAAM,CAACW,GAA3C;AAAgD,YAAA,MAAM,EAAG,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoEJ,WAApE,MADJ,CAFR;AAOH;AACJ,KAzBD,CAHJ,CApBR,CADJ;AAuDH;;AA/D0B;;AAiE/B,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,MAAM,EAAEa,KAAK,CAACb;AADgB,CAAL,CAA7B;;AAGA,eAAeR,OAAO,CAACoB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAAuCG,MAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { getResumes } from '../../actions/resumeActions';\r\nimport { connect } from 'react-redux';\r\nimport LoadingSpinner from '../utils/LoadingSpinner';\r\n\r\nclass Resume extends Component {\r\n    componentDidMount() {\r\n        this.props.getResumes();\r\n    }\r\n    \r\n    render() {\r\n        const { resumes, loading } = this.props.resume;\r\n       //  console.log(resumes);\r\n        return (\r\n            <div \r\n                className = \"Resume\" \r\n            >\r\n                {\r\n                    loading \r\n                    ? \r\n                    <div className = \"Resume__loading\">\r\n                            <div className = \"Resume__loading-1\">\r\n                                Fetching your files\r\n                            </div>\r\n                            <div className = \"Resume__loading-2\">Try reloading page if loading persists...</div>\r\n                            <div className = \"Resume__loading-3\">\r\n                                <LoadingSpinner\r\n                                    bgColor = '#0079BF'\r\n                                />\r\n                            </div>\r\n                           \r\n                    </div>\r\n                    :  \r\n                \r\n                    <div className = \"Resume__uploads\">\r\n               \r\n                        {\r\n                        resumes.map(resume => {\r\n                            console.log(resume);\r\n                            const indexStart = resume.public_id.lastIndexOf('/');\r\n                            const displayName = resume.public_id.substring(indexStart + 1, resume.public_id.length);\r\n                            // display like this if image file\r\n                            if(resume.format === 'png'  || resume.format === 'jpg' || resume.format === 'jpeg') {\r\n                                return (\r\n                                    <div className = \"Resume__image\"  key = {resume.public_id}> \r\n                                        <img className = \"\"\r\n                                            src={resume.url} alt={displayName}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                                \r\n                            }\r\n                            // provide as url link;\r\n                            else {\r\n                                return (\r\n             \r\n                                        <div className = \"Resume__containerLink\" >\r\n                                            <a className = \"Resume__link\" href={resume.url} target = \"_blank\"> {displayName} </a>\r\n                                        </div>\r\n    \r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                    </div>    \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    resume: state.resume\r\n})\r\nexport default connect(mapStateToProps, {getResumes})(Resume);"]},"metadata":{},"sourceType":"module"}